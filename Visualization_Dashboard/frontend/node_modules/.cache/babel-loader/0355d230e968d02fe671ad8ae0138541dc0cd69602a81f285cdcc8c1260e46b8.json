{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getDashboardSummary } from '../api/dashboardApi';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const data = await getDashboardSummary();\n        setDashboardData(data); // Set the fetched data in state\n        setLoading(false); // Stop loading once data is fetched\n      } catch (err) {\n        setError('Failed to fetch dashboard data');\n        setLoading(false);\n      }\n    };\n    fetchDashboardData();\n  }, []); // Empty dependency array ensures it runs only once when component mounts\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading dashboard...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Dashboard Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metrics\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Customers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dashboardData.total_customers\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Total Interactions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dashboardData.total_interactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Open Tickets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: dashboardData.open_tickets\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Intent Distribution\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(dashboardData.intent_distribution).map(([intent, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [intent, \": \", count]\n      }, intent, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Interactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(dashboardData.recent_interactions).map(([date, count]) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [date, \": \", count]\n      }, date, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"sxFeAcwAVC244uU+brsBFLqW91s=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","getDashboardSummary","jsxDEV","_jsxDEV","Dashboard","_s","dashboardData","setDashboardData","loading","setLoading","error","setError","fetchDashboardData","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","total_customers","total_interactions","open_tickets","Object","entries","intent_distribution","map","intent","count","recent_interactions","date","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getDashboardSummary } from '../api/dashboardApi';\r\nimport './Dashboard.css'; \r\n\r\nconst Dashboard = () => {\r\n  const [dashboardData, setDashboardData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDashboardData = async () => {\r\n      try {\r\n        const data = await getDashboardSummary();\r\n        setDashboardData(data);  // Set the fetched data in state\r\n        setLoading(false);  // Stop loading once data is fetched\r\n      } catch (err) {\r\n        setError('Failed to fetch dashboard data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchDashboardData();\r\n  }, []);  // Empty dependency array ensures it runs only once when component mounts\r\n\r\n  if (loading) return <div>Loading dashboard...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <h2>Dashboard Overview</h2>\r\n      <div className=\"metrics\">\r\n        <div className=\"metric\">\r\n          <h3>Total Customers</h3>\r\n          <p>{dashboardData.total_customers}</p>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <h3>Total Interactions</h3>\r\n          <p>{dashboardData.total_interactions}</p>\r\n        </div>\r\n        <div className=\"metric\">\r\n          <h3>Open Tickets</h3>\r\n          <p>{dashboardData.open_tickets}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <h3>Intent Distribution</h3>\r\n      <ul>\r\n        {Object.entries(dashboardData.intent_distribution).map(([intent, count]) => (\r\n          <li key={intent}>\r\n            {intent}: {count}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h3>Recent Interactions</h3>\r\n      <ul>\r\n        {Object.entries(dashboardData.recent_interactions).map(([date, count]) => (\r\n          <li key={date}>\r\n            {date}: {count}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}