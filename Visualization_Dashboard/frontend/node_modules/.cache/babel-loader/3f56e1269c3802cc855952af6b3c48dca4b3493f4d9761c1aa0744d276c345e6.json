{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\TimeseriesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { formatNumber, createTooltip, debounce } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeseriesChart = ({\n  metric = 'intensity',\n  filters = {}\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [yearFilter, setYearFilter] = useState(filters.end_year || 'all');\n  const [availableYears, setAvailableYears] = useState([]);\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [highlightedPoint, setHighlightedPoint] = useState(null);\n\n  // Fetch available years for the filter\n  useEffect(() => {\n    const fetchFilterOptions = async () => {\n      try {\n        const filterOptions = await api.getFilters();\n        if (filterOptions && filterOptions.end_year) {\n          // Sort years numerically\n          const sortedYears = filterOptions.end_year.sort((a, b) => Number(a) - Number(b));\n          setAvailableYears(sortedYears);\n        }\n      } catch (err) {\n        console.error('Error fetching filter options:', err);\n      }\n    };\n    fetchFilterOptions();\n  }, []);\n\n  // Modified data fetching with client-side filtering for end_year\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Remove end_year from filters for API call since we'll filter client-side\n        const apiFilters = {\n          ...filters\n        };\n        delete apiFilters.end_year;\n\n        // Fetch all timeseries data for the selected metric\n        const timeseriesData = await api.getTimeseries(metric, apiFilters);\n\n        // Filter the data client-side based on end_year if needed\n        let filteredData = timeseriesData;\n        if (yearFilter !== 'all') {\n          filteredData = timeseriesData.filter(item => {\n            // Compare as strings to ensure proper matching\n            return String(item.end_year) === String(yearFilter);\n          });\n        }\n\n        // Filter out any invalid data points\n        const validData = filteredData.filter(item => item.year && !isNaN(item.year) && item.value && !isNaN(item.value));\n        setData(validData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching timeseries data:', err);\n        setError('Failed to load timeseries data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [metric, JSON.stringify(filters), yearFilter]);\n  useEffect(() => {\n    if (data.length > 0 && !loading) {\n      drawChart();\n\n      // Add resize listener\n      const handleResize = debounce(() => {\n        drawChart();\n      }, 300);\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [data, loading, highlightedPoint]);\n  const getMetricColor = metric => {\n    const colors = {\n      intensity: '#3b82f6',\n      // Blue\n      likelihood: '#10b981',\n      // Green\n      relevance: '#8b5cf6' // Purple\n    };\n    return colors[metric] || '#3b82f6';\n  };\n  const drawChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 60\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Create scales\n    const xScale = d3.scaleLinear().domain(d3.extent(data, d => d.year)).range([0, width]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.value) * 1.1]).range([height, 0]);\n\n    // Create axes with minimal ticks\n    const xAxis = d3.axisBottom(xScale).tickFormat(d => 'Year').ticks(1); // Show only the label 'Year'\n\n    const yAxis = d3.axisLeft(yScale).tickValues([0, d3.max(data, d => d.value) * 1.1]) // Only show min and max values\n    .tickFormat(d => formatNumber(d));\n\n    // Add X axis\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`).call(xAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563').attr('transform', 'translate(0,10)'); // Move 'Year' label down a bit\n\n    // Add Y axis\n    svg.append('g').attr('class', 'axis y-axis').call(yAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563');\n\n    // Y-axis label\n    svg.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('fill', '#1f2937').attr('font-size', '14px').attr('font-weight', '600').attr('text-anchor', 'middle').text(metric.charAt(0).toUpperCase() + metric.slice(1));\n\n    // Get the primary color for this metric\n    const primaryColor = getMetricColor(metric);\n\n    // Create gradient for area\n    const areaGradient = svg.append('defs').append('linearGradient').attr('id', `areaGradient-${metric}`).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n    areaGradient.append('stop').attr('offset', '0%').attr('stop-color', primaryColor).attr('stop-opacity', 0.6);\n    areaGradient.append('stop').attr('offset', '100%').attr('stop-color', primaryColor).attr('stop-opacity', 0.05);\n\n    // Create line generator with smooth curve\n    const line = d3.line().x(d => xScale(d.year)).y(d => yScale(d.value)).curve(d3.curveCardinal.tension(0.4));\n\n    // Add area\n    const area = d3.area().x(d => xScale(d.year)).y0(height).y1(d => yScale(d.value)).curve(d3.curveCardinal.tension(0.4));\n\n    // Add drop shadow filter\n    const filter = svg.append('defs').append('filter').attr('id', 'drop-shadow').attr('height', '130%');\n    filter.append('feGaussianBlur').attr('in', 'SourceAlpha').attr('stdDeviation', 3).attr('result', 'blur');\n    filter.append('feOffset').attr('in', 'blur').attr('dx', 2).attr('dy', 2).attr('result', 'offsetBlur');\n    filter.append('feComponentTransfer').append('feFuncA').attr('type', 'linear').attr('slope', 0.2);\n    const feMerge = filter.append('feMerge');\n    feMerge.append('feMergeNode').attr('in', 'offsetBlur');\n    feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    // Add area with gradient\n    svg.append('path').datum(data).attr('class', 'area').attr('d', area).attr('fill', `url(#areaGradient-${metric})`).attr('opacity', 0.8);\n\n    // Add the line with animation\n    const path = svg.append('path').datum(data).attr('class', 'line').attr('d', line).attr('fill', 'none').attr('stroke', primaryColor).attr('stroke-width', 3).attr('filter', 'url(#drop-shadow)');\n\n    // Get the total length of the line for animation\n    const totalLength = path.node().getTotalLength();\n\n    // Animate the line on load\n    path.attr('stroke-dasharray', totalLength + ' ' + totalLength).attr('stroke-dashoffset', totalLength).transition().duration(1500).ease(d3.easeLinear).attr('stroke-dashoffset', 0);\n\n    // Overlay for hover effects\n    svg.append('rect').attr('width', width).attr('height', height).attr('fill', 'none').attr('pointer-events', 'all').on('mousemove', function (event) {\n      const [mouseX] = d3.pointer(event);\n      const x0 = xScale.invert(mouseX);\n\n      // Find the closest data point\n      const bisect = d3.bisector(d => d.year).left;\n      const index = bisect(data, x0);\n      const d0 = data[index - 1];\n      const d1 = data[index];\n      if (!d0 || !d1) return;\n      const d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      setHighlightedPoint(d);\n\n      // Update tooltip\n      tooltipRef.current.style('opacity', 1).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px').style('background-color', 'rgba(255, 255, 255, 0.95)').style('border-radius', '6px').style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)').style('padding', '10px 14px').style('font-family', 'system-ui, -apple-system, sans-serif').style('font-size', '14px').style('border', `2px solid ${primaryColor}`).html(`\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\n              Year: ${d.year}\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\n            </div>\n          `);\n    }).on('mouseleave', function () {\n      setHighlightedPoint(null);\n      tooltipRef.current.style('opacity', 0);\n    });\n\n    // Add dots with effects\n    svg.selectAll('.dot').data(data).enter().append('circle').attr('class', 'dot').attr('cx', d => xScale(d.year)).attr('cy', d => yScale(d.value)).attr('r', d => highlightedPoint && highlightedPoint.year === d.year ? 8 : 5).attr('fill', d => highlightedPoint && highlightedPoint.year === d.year ? primaryColor : 'white').attr('stroke', primaryColor).attr('stroke-width', d => highlightedPoint && highlightedPoint.year === d.year ? 3 : 2).style('cursor', 'pointer').attr('filter', d => highlightedPoint && highlightedPoint.year === d.year ? 'url(#drop-shadow)' : 'none').transition().delay((d, i) => i * 50).duration(500).attr('opacity', 1);\n\n    // If there's a highlighted point, add year and value labels directly on the chart\n    if (highlightedPoint) {\n      // Add value label above the point\n      svg.append('text').attr('class', 'value-label').attr('x', xScale(highlightedPoint.year)).attr('y', yScale(highlightedPoint.value) - 15).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').attr('fill', primaryColor).text(formatNumber(highlightedPoint.value));\n\n      // Add year label below the point\n      svg.append('text').attr('class', 'year-label').attr('x', xScale(highlightedPoint.year)).attr('y', height + 20).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').attr('fill', '#4b5563').text(highlightedPoint.year);\n\n      // Add vertical guide line\n      svg.append('line').attr('class', 'guide-line').attr('x1', xScale(highlightedPoint.year)).attr('x2', xScale(highlightedPoint.year)).attr('y1', yScale(highlightedPoint.value)).attr('y2', height).attr('stroke', primaryColor).attr('stroke-width', 1.5).attr('stroke-dasharray', '3,3').attr('opacity', 0.7);\n\n      // Add focus circle\n      svg.append('circle').attr('class', 'focus-ring').attr('cx', xScale(highlightedPoint.year)).attr('cy', yScale(highlightedPoint.value)).attr('r', 12).attr('fill', 'none').attr('stroke', primaryColor).attr('stroke-width', 2).attr('stroke-opacity', 0.5).attr('stroke-dasharray', '3,2');\n    }\n\n    // Add chart title with style\n    svg.append('text').attr('class', 'chart-title').attr('x', width / 2).attr('y', -5).attr('font-size', '14px').attr('font-weight', 'bold').attr('text-anchor', 'middle').attr('fill', '#1f2937').text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Analysis`);\n  };\n  const handleYearFilterChange = e => {\n    setYearFilter(e.target.value);\n  };\n  const renderActionButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"chart-select\",\n      value: metric,\n      onChange: e => window.location.href = `?metric=${e.target.value}`,\n      style: {\n        padding: '8px 12px',\n        borderRadius: '6px',\n        border: '1px solid #d1d5db',\n        background: 'white',\n        boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\n        fontWeight: '500',\n        color: '#374151',\n        cursor: 'pointer'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"intensity\",\n        children: \"Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"likelihood\",\n        children: \"Likelihood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"relevance\",\n        children: \"Relevance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-filter-container\",\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year-filter\",\n        style: {\n          marginRight: '8px',\n          fontWeight: '500',\n          color: '#374151'\n        },\n        children: \"Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year-filter\",\n        value: yearFilter,\n        onChange: handleYearFilterChange,\n        style: {\n          padding: '8px 12px',\n          borderRadius: '6px',\n          border: '1px solid #d1d5db',\n          background: 'white',\n          boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\n          fontWeight: '500',\n          color: '#374151',\n          cursor: 'pointer'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Years\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: year,\n          children: year\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 405,\n    columnNumber: 5\n  }, this);\n  const chartStyles = {\n    height: '100%',\n    background: 'white',\n    borderRadius: '8px',\n    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    overflow: 'hidden'\n  };\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    title: `${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Over Time`,\n    actionButtons: renderActionButtons(),\n    className: \"chart-card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '350px',\n        position: 'relative'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"Loading timeseries data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: error,\n        icon: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 11\n      }, this) : data.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No timeseries data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: chartStyles,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          className: \"chart-svg\",\n          style: {\n            width: '100%',\n            height: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 469,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeseriesChart, \"vYCzc/bwkodeH70VtleUmFOlboY=\");\n_c = TimeseriesChart;\nexport default TimeseriesChart;\nvar _c;\n$RefreshReg$(_c, \"TimeseriesChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","api","CardContainer","Loader","NoDataMessage","formatNumber","createTooltip","debounce","jsxDEV","_jsxDEV","TimeseriesChart","metric","filters","_s","data","setData","loading","setLoading","error","setError","yearFilter","setYearFilter","end_year","availableYears","setAvailableYears","svgRef","containerRef","tooltipRef","highlightedPoint","setHighlightedPoint","fetchFilterOptions","filterOptions","getFilters","sortedYears","sort","a","b","Number","err","console","fetchData","apiFilters","timeseriesData","getTimeseries","filteredData","filter","item","String","validData","year","isNaN","value","JSON","stringify","length","drawChart","handleResize","window","addEventListener","removeEventListener","getMetricColor","colors","intensity","likelihood","relevance","current","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","height","svg","attr","append","xScale","scaleLinear","domain","extent","d","range","yScale","max","xAxis","axisBottom","tickFormat","ticks","yAxis","axisLeft","tickValues","call","text","charAt","toUpperCase","slice","primaryColor","areaGradient","line","x","y","curve","curveCardinal","tension","area","y0","y1","feMerge","datum","path","totalLength","node","getTotalLength","transition","duration","ease","easeLinear","on","event","mouseX","pointer","x0","invert","bisect","bisector","index","d0","d1","style","pageX","pageY","html","count","enter","delay","i","handleYearFilterChange","e","target","renderActionButtons","className","children","onChange","location","href","padding","borderRadius","border","background","boxShadow","fontWeight","color","cursor","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","htmlFor","marginRight","id","map","chartStyles","overflow","title","actionButtons","ref","position","message","icon","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/TimeseriesChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { formatNumber, createTooltip, debounce } from '../../utils/helpers';\r\n\r\nconst TimeseriesChart = ({ metric = 'intensity', filters = {} }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [yearFilter, setYearFilter] = useState(filters.end_year || 'all');\r\n  const [availableYears, setAvailableYears] = useState([]);\r\n  const svgRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n  const [highlightedPoint, setHighlightedPoint] = useState(null);\r\n\r\n  // Fetch available years for the filter\r\n  useEffect(() => {\r\n    const fetchFilterOptions = async () => {\r\n      try {\r\n        const filterOptions = await api.getFilters();\r\n        if (filterOptions && filterOptions.end_year) {\r\n          // Sort years numerically\r\n          const sortedYears = filterOptions.end_year.sort((a, b) => Number(a) - Number(b));\r\n          setAvailableYears(sortedYears);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching filter options:', err);\r\n      }\r\n    };\r\n\r\n    fetchFilterOptions();\r\n  }, []);\r\n\r\n  // Modified data fetching with client-side filtering for end_year\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Remove end_year from filters for API call since we'll filter client-side\r\n        const apiFilters = { ...filters };\r\n        delete apiFilters.end_year;\r\n        \r\n        // Fetch all timeseries data for the selected metric\r\n        const timeseriesData = await api.getTimeseries(metric, apiFilters);\r\n        \r\n        // Filter the data client-side based on end_year if needed\r\n        let filteredData = timeseriesData;\r\n        \r\n        if (yearFilter !== 'all') {\r\n          filteredData = timeseriesData.filter(item => {\r\n            // Compare as strings to ensure proper matching\r\n            return String(item.end_year) === String(yearFilter);\r\n          });\r\n        }\r\n        \r\n        // Filter out any invalid data points\r\n        const validData = filteredData.filter(item => \r\n          item.year && !isNaN(item.year) && item.value && !isNaN(item.value)\r\n        );\r\n        \r\n        setData(validData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching timeseries data:', err);\r\n        setError('Failed to load timeseries data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [metric, JSON.stringify(filters), yearFilter]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && !loading) {\r\n      drawChart();\r\n      \r\n      // Add resize listener\r\n      const handleResize = debounce(() => {\r\n        drawChart();\r\n      }, 300);\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [data, loading, highlightedPoint]);\r\n\r\n  const getMetricColor = (metric) => {\r\n    const colors = {\r\n      intensity: '#3b82f6', // Blue\r\n      likelihood: '#10b981', // Green\r\n      relevance: '#8b5cf6'  // Purple\r\n    };\r\n    return colors[metric] || '#3b82f6';\r\n  };\r\n\r\n  const drawChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Set dimensions\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 20, right: 30, bottom: 50, left: 60 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = 300 - margin.top - margin.bottom;\r\n\r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n\r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain(d3.extent(data, d => d.year))\r\n      .range([0, width]);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => d.value) * 1.1])\r\n      .range([height, 0]);\r\n\r\n    // Create axes with minimal ticks\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickFormat(d => 'Year')\r\n      .ticks(1); // Show only the label 'Year'\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .tickValues([0, d3.max(data, d => d.value) * 1.1]) // Only show min and max values\r\n      .tickFormat(d => formatNumber(d));\r\n\r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('class', 'axis x-axis')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(xAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563')\r\n      .attr('transform', 'translate(0,10)'); // Move 'Year' label down a bit\r\n\r\n    // Add Y axis\r\n    svg.append('g')\r\n      .attr('class', 'axis y-axis')\r\n      .call(yAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563');\r\n    \r\n    // Y-axis label\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('fill', '#1f2937')\r\n      .attr('font-size', '14px')\r\n      .attr('font-weight', '600')\r\n      .attr('text-anchor', 'middle')\r\n      .text(metric.charAt(0).toUpperCase() + metric.slice(1));\r\n\r\n    // Get the primary color for this metric\r\n    const primaryColor = getMetricColor(metric);\r\n    \r\n    // Create gradient for area\r\n    const areaGradient = svg.append('defs')\r\n      .append('linearGradient')\r\n      .attr('id', `areaGradient-${metric}`)\r\n      .attr('x1', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('x2', '0%')\r\n      .attr('y2', '100%');\r\n      \r\n    areaGradient.append('stop')\r\n      .attr('offset', '0%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 0.6);\r\n      \r\n    areaGradient.append('stop')\r\n      .attr('offset', '100%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 0.05);\r\n\r\n    // Create line generator with smooth curve\r\n    const line = d3.line()\r\n      .x(d => xScale(d.year))\r\n      .y(d => yScale(d.value))\r\n      .curve(d3.curveCardinal.tension(0.4));\r\n\r\n    // Add area\r\n    const area = d3.area()\r\n      .x(d => xScale(d.year))\r\n      .y0(height)\r\n      .y1(d => yScale(d.value))\r\n      .curve(d3.curveCardinal.tension(0.4));\r\n\r\n    // Add drop shadow filter\r\n    const filter = svg.append('defs')\r\n      .append('filter')\r\n      .attr('id', 'drop-shadow')\r\n      .attr('height', '130%');\r\n\r\n    filter.append('feGaussianBlur')\r\n      .attr('in', 'SourceAlpha')\r\n      .attr('stdDeviation', 3)\r\n      .attr('result', 'blur');\r\n\r\n    filter.append('feOffset')\r\n      .attr('in', 'blur')\r\n      .attr('dx', 2)\r\n      .attr('dy', 2)\r\n      .attr('result', 'offsetBlur');\r\n\r\n    filter.append('feComponentTransfer')\r\n      .append('feFuncA')\r\n      .attr('type', 'linear')\r\n      .attr('slope', 0.2);\r\n\r\n    const feMerge = filter.append('feMerge');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'offsetBlur');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'SourceGraphic');\r\n\r\n    // Add area with gradient\r\n    svg.append('path')\r\n      .datum(data)\r\n      .attr('class', 'area')\r\n      .attr('d', area)\r\n      .attr('fill', `url(#areaGradient-${metric})`)\r\n      .attr('opacity', 0.8);\r\n\r\n    // Add the line with animation\r\n    const path = svg.append('path')\r\n      .datum(data)\r\n      .attr('class', 'line')\r\n      .attr('d', line)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', primaryColor)\r\n      .attr('stroke-width', 3)\r\n      .attr('filter', 'url(#drop-shadow)');\r\n    \r\n    // Get the total length of the line for animation\r\n    const totalLength = path.node().getTotalLength();\r\n    \r\n    // Animate the line on load\r\n    path\r\n      .attr('stroke-dasharray', totalLength + ' ' + totalLength)\r\n      .attr('stroke-dashoffset', totalLength)\r\n      .transition()\r\n      .duration(1500)\r\n      .ease(d3.easeLinear)\r\n      .attr('stroke-dashoffset', 0);\r\n\r\n    // Overlay for hover effects\r\n    svg.append('rect')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .attr('fill', 'none')\r\n      .attr('pointer-events', 'all')\r\n      .on('mousemove', function(event) {\r\n        const [mouseX] = d3.pointer(event);\r\n        const x0 = xScale.invert(mouseX);\r\n        \r\n        // Find the closest data point\r\n        const bisect = d3.bisector(d => d.year).left;\r\n        const index = bisect(data, x0);\r\n        const d0 = data[index - 1];\r\n        const d1 = data[index];\r\n        \r\n        if (!d0 || !d1) return;\r\n        \r\n        const d = x0 - d0.year > d1.year - x0 ? d1 : d0;\r\n        setHighlightedPoint(d);\r\n        \r\n        // Update tooltip\r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px')\r\n          .style('background-color', 'rgba(255, 255, 255, 0.95)')\r\n          .style('border-radius', '6px')\r\n          .style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)')\r\n          .style('padding', '10px 14px')\r\n          .style('font-family', 'system-ui, -apple-system, sans-serif')\r\n          .style('font-size', '14px')\r\n          .style('border', `2px solid ${primaryColor}`)\r\n          .html(`\r\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\r\n              Year: ${d.year}\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\r\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\r\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\r\n            </div>\r\n          `);\r\n      })\r\n      .on('mouseleave', function() {\r\n        setHighlightedPoint(null);\r\n        tooltipRef.current.style('opacity', 0);\r\n      });\r\n\r\n    // Add dots with effects\r\n    svg.selectAll('.dot')\r\n      .data(data)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => xScale(d.year))\r\n      .attr('cy', d => yScale(d.value))\r\n      .attr('r', d => highlightedPoint && highlightedPoint.year === d.year ? 8 : 5)\r\n      .attr('fill', d => highlightedPoint && highlightedPoint.year === d.year ? primaryColor : 'white')\r\n      .attr('stroke', primaryColor)\r\n      .attr('stroke-width', d => highlightedPoint && highlightedPoint.year === d.year ? 3 : 2)\r\n      .style('cursor', 'pointer')\r\n      .attr('filter', d => highlightedPoint && highlightedPoint.year === d.year ? 'url(#drop-shadow)' : 'none')\r\n      .transition()\r\n      .delay((d, i) => i * 50)\r\n      .duration(500)\r\n      .attr('opacity', 1);\r\n\r\n    // If there's a highlighted point, add year and value labels directly on the chart\r\n    if (highlightedPoint) {\r\n      // Add value label above the point\r\n      svg.append('text')\r\n        .attr('class', 'value-label')\r\n        .attr('x', xScale(highlightedPoint.year))\r\n        .attr('y', yScale(highlightedPoint.value) - 15)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '12px')\r\n        .attr('font-weight', 'bold')\r\n        .attr('fill', primaryColor)\r\n        .text(formatNumber(highlightedPoint.value));\r\n        \r\n      // Add year label below the point\r\n      svg.append('text')\r\n        .attr('class', 'year-label')\r\n        .attr('x', xScale(highlightedPoint.year))\r\n        .attr('y', height + 20)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '12px')\r\n        .attr('font-weight', 'bold')\r\n        .attr('fill', '#4b5563')\r\n        .text(highlightedPoint.year);\r\n      \r\n      // Add vertical guide line\r\n      svg.append('line')\r\n        .attr('class', 'guide-line')\r\n        .attr('x1', xScale(highlightedPoint.year))\r\n        .attr('x2', xScale(highlightedPoint.year))\r\n        .attr('y1', yScale(highlightedPoint.value))\r\n        .attr('y2', height)\r\n        .attr('stroke', primaryColor)\r\n        .attr('stroke-width', 1.5)\r\n        .attr('stroke-dasharray', '3,3')\r\n        .attr('opacity', 0.7);\r\n        \r\n      // Add focus circle\r\n      svg.append('circle')\r\n        .attr('class', 'focus-ring')\r\n        .attr('cx', xScale(highlightedPoint.year))\r\n        .attr('cy', yScale(highlightedPoint.value))\r\n        .attr('r', 12)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', primaryColor)\r\n        .attr('stroke-width', 2)\r\n        .attr('stroke-opacity', 0.5)\r\n        .attr('stroke-dasharray', '3,2');\r\n    }\r\n\r\n    // Add chart title with style\r\n    svg.append('text')\r\n      .attr('class', 'chart-title')\r\n      .attr('x', width / 2)\r\n      .attr('y', -5)\r\n      .attr('font-size', '14px')\r\n      .attr('font-weight', 'bold')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('fill', '#1f2937')\r\n      .text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Analysis`);\r\n  };\r\n\r\n  const handleYearFilterChange = (e) => {\r\n    setYearFilter(e.target.value);\r\n  };\r\n\r\n  const renderActionButtons = () => (\r\n    <div className=\"chart-actions\">\r\n      <select\r\n        className=\"chart-select\"\r\n        value={metric}\r\n        onChange={(e) => window.location.href = `?metric=${e.target.value}`}\r\n        style={{\r\n          padding: '8px 12px',\r\n          borderRadius: '6px',\r\n          border: '1px solid #d1d5db',\r\n          background: 'white',\r\n          boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\r\n          fontWeight: '500',\r\n          color: '#374151',\r\n          cursor: 'pointer'\r\n        }}\r\n      >\r\n        <option value=\"intensity\">Intensity</option>\r\n        <option value=\"likelihood\">Likelihood</option>\r\n        <option value=\"relevance\">Relevance</option>\r\n      </select>\r\n      <div className=\"year-filter-container\" style={{ display: 'flex', alignItems: 'center' }}>\r\n        <label \r\n          htmlFor=\"year-filter\" \r\n          style={{ \r\n            marginRight: '8px',\r\n            fontWeight: '500',\r\n            color: '#374151' \r\n          }}\r\n        >\r\n          Year:\r\n        </label>\r\n        <select\r\n          id=\"year-filter\"\r\n          value={yearFilter}\r\n          onChange={handleYearFilterChange}\r\n          style={{\r\n            padding: '8px 12px',\r\n            borderRadius: '6px',\r\n            border: '1px solid #d1d5db',\r\n            background: 'white',\r\n            boxShadow: '0 1px 2px rgba(0, 0, 0, 0.05)',\r\n            fontWeight: '500',\r\n            color: '#374151',\r\n            cursor: 'pointer'\r\n          }}\r\n        >\r\n          <option value=\"all\">All Years</option>\r\n          {availableYears.map(year => (\r\n            <option key={year} value={year}>{year}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const chartStyles = {\r\n    height: '100%',\r\n    background: 'white',\r\n    borderRadius: '8px',\r\n    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\r\n    overflow: 'hidden'\r\n  };\r\n\r\n  return (\r\n    <CardContainer \r\n      title={`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Over Time`} \r\n      actionButtons={renderActionButtons()}\r\n      className=\"chart-card\"\r\n    >\r\n      <div \r\n        ref={containerRef} \r\n        style={{ width: '100%', height: '350px', position: 'relative' }}\r\n      >\r\n        {loading ? (\r\n          <Loader message=\"Loading timeseries data...\" />\r\n        ) : error ? (\r\n          <NoDataMessage message={error} icon=\"⚠️\" />\r\n        ) : data.length === 0 ? (\r\n          <NoDataMessage message=\"No timeseries data available\" />\r\n        ) : (\r\n          <div style={chartStyles}>\r\n            <svg ref={svgRef} className=\"chart-svg\" style={{ width: '100%', height: '100%' }}></svg>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default TimeseriesChart;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AACxB,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,aAAa,MAAM,yBAAyB;AACnD,SAASC,YAAY,EAAEC,aAAa,EAAEC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5E,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM,GAAG,WAAW;EAAEC,OAAO,GAAG,CAAC;AAAE,CAAC,KAAK;EAAAC,EAAA;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmB,OAAO,EAAEC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACuB,UAAU,EAAEC,aAAa,CAAC,GAAGxB,QAAQ,CAACe,OAAO,CAACU,QAAQ,IAAI,KAAK,CAAC;EACvE,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM4B,MAAM,GAAG1B,MAAM,CAAC,IAAI,CAAC;EAC3B,MAAM2B,YAAY,GAAG3B,MAAM,CAAC,IAAI,CAAC;EACjC,MAAM4B,UAAU,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM,CAAC6B,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;;EAE9D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMgC,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,aAAa,GAAG,MAAM9B,GAAG,CAAC+B,UAAU,CAAC,CAAC;QAC5C,IAAID,aAAa,IAAIA,aAAa,CAACT,QAAQ,EAAE;UAC3C;UACA,MAAMW,WAAW,GAAGF,aAAa,CAACT,QAAQ,CAACY,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACF,CAAC,CAAC,GAAGE,MAAM,CAACD,CAAC,CAAC,CAAC;UAChFZ,iBAAiB,CAACS,WAAW,CAAC;QAChC;MACF,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZC,OAAO,CAACrB,KAAK,CAAC,gCAAgC,EAAEoB,GAAG,CAAC;MACtD;IACF,CAAC;IAEDR,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAhC,SAAS,CAAC,MAAM;IACd,MAAM0C,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFvB,UAAU,CAAC,IAAI,CAAC;;QAEhB;QACA,MAAMwB,UAAU,GAAG;UAAE,GAAG7B;QAAQ,CAAC;QACjC,OAAO6B,UAAU,CAACnB,QAAQ;;QAE1B;QACA,MAAMoB,cAAc,GAAG,MAAMzC,GAAG,CAAC0C,aAAa,CAAChC,MAAM,EAAE8B,UAAU,CAAC;;QAElE;QACA,IAAIG,YAAY,GAAGF,cAAc;QAEjC,IAAItB,UAAU,KAAK,KAAK,EAAE;UACxBwB,YAAY,GAAGF,cAAc,CAACG,MAAM,CAACC,IAAI,IAAI;YAC3C;YACA,OAAOC,MAAM,CAACD,IAAI,CAACxB,QAAQ,CAAC,KAAKyB,MAAM,CAAC3B,UAAU,CAAC;UACrD,CAAC,CAAC;QACJ;;QAEA;QACA,MAAM4B,SAAS,GAAGJ,YAAY,CAACC,MAAM,CAACC,IAAI,IACxCA,IAAI,CAACG,IAAI,IAAI,CAACC,KAAK,CAACJ,IAAI,CAACG,IAAI,CAAC,IAAIH,IAAI,CAACK,KAAK,IAAI,CAACD,KAAK,CAACJ,IAAI,CAACK,KAAK,CACnE,CAAC;QAEDpC,OAAO,CAACiC,SAAS,CAAC;QAClB/B,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOqB,GAAG,EAAE;QACZC,OAAO,CAACrB,KAAK,CAAC,iCAAiC,EAAEoB,GAAG,CAAC;QACrDnB,QAAQ,CAAC,gCAAgC,CAAC;QAC1CF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDuB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAAC7B,MAAM,EAAEyC,IAAI,CAACC,SAAS,CAACzC,OAAO,CAAC,EAAEQ,UAAU,CAAC,CAAC;EAEjDtB,SAAS,CAAC,MAAM;IACd,IAAIgB,IAAI,CAACwC,MAAM,GAAG,CAAC,IAAI,CAACtC,OAAO,EAAE;MAC/BuC,SAAS,CAAC,CAAC;;MAEX;MACA,MAAMC,YAAY,GAAGjD,QAAQ,CAAC,MAAM;QAClCgD,SAAS,CAAC,CAAC;MACb,CAAC,EAAE,GAAG,CAAC;MAEPE,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEF,YAAY,CAAC;MAC/C,OAAO,MAAMC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IACjE;EACF,CAAC,EAAE,CAAC1C,IAAI,EAAEE,OAAO,EAAEY,gBAAgB,CAAC,CAAC;EAErC,MAAMgC,cAAc,GAAIjD,MAAM,IAAK;IACjC,MAAMkD,MAAM,GAAG;MACbC,SAAS,EAAE,SAAS;MAAE;MACtBC,UAAU,EAAE,SAAS;MAAE;MACvBC,SAAS,EAAE,SAAS,CAAE;IACxB,CAAC;IACD,OAAOH,MAAM,CAAClD,MAAM,CAAC,IAAI,SAAS;EACpC,CAAC;EAED,MAAM4C,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI,CAAC9B,MAAM,CAACwC,OAAO,IAAI,CAACvC,YAAY,CAACuC,OAAO,EAAE;;IAE9C;IACAjE,EAAE,CAACkE,MAAM,CAACzC,MAAM,CAACwC,OAAO,CAAC,CAACE,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAEjD;IACA,MAAMC,cAAc,GAAG3C,YAAY,CAACuC,OAAO,CAACK,WAAW;IACvD,MAAMC,MAAM,GAAG;MAAEC,GAAG,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAC3D,MAAMC,KAAK,GAAGP,cAAc,GAAGE,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK;IACzD,MAAMI,MAAM,GAAG,GAAG,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM;;IAE/C;IACA,MAAMI,GAAG,GAAG9E,EAAE,CAACkE,MAAM,CAACzC,MAAM,CAACwC,OAAO,CAAC,CAClCc,IAAI,CAAC,OAAO,EAAEH,KAAK,GAAGL,MAAM,CAACI,IAAI,GAAGJ,MAAM,CAACE,KAAK,CAAC,CACjDM,IAAI,CAAC,QAAQ,EAAEF,MAAM,GAAGN,MAAM,CAACC,GAAG,GAAGD,MAAM,CAACG,MAAM,CAAC,CACnDM,MAAM,CAAC,GAAG,CAAC,CACXD,IAAI,CAAC,WAAW,EAAE,aAAaR,MAAM,CAACI,IAAI,IAAIJ,MAAM,CAACC,GAAG,GAAG,CAAC;;IAE/D;IACA,IAAI,CAAC7C,UAAU,CAACsC,OAAO,EAAE;MACvBtC,UAAU,CAACsC,OAAO,GAAG3D,aAAa,CAACN,EAAE,CAAC;IACxC;;IAEA;IACA,MAAMiF,MAAM,GAAGjF,EAAE,CAACkF,WAAW,CAAC,CAAC,CAC5BC,MAAM,CAACnF,EAAE,CAACoF,MAAM,CAACtE,IAAI,EAAEuE,CAAC,IAAIA,CAAC,CAACpC,IAAI,CAAC,CAAC,CACpCqC,KAAK,CAAC,CAAC,CAAC,EAAEV,KAAK,CAAC,CAAC;IAEpB,MAAMW,MAAM,GAAGvF,EAAE,CAACkF,WAAW,CAAC,CAAC,CAC5BC,MAAM,CAAC,CAAC,CAAC,EAAEnF,EAAE,CAACwF,GAAG,CAAC1E,IAAI,EAAEuE,CAAC,IAAIA,CAAC,CAAClC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAC7CmC,KAAK,CAAC,CAACT,MAAM,EAAE,CAAC,CAAC,CAAC;;IAErB;IACA,MAAMY,KAAK,GAAGzF,EAAE,CAAC0F,UAAU,CAACT,MAAM,CAAC,CAChCU,UAAU,CAACN,CAAC,IAAI,MAAM,CAAC,CACvBO,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;;IAEb,MAAMC,KAAK,GAAG7F,EAAE,CAAC8F,QAAQ,CAACP,MAAM,CAAC,CAC9BQ,UAAU,CAAC,CAAC,CAAC,EAAE/F,EAAE,CAACwF,GAAG,CAAC1E,IAAI,EAAEuE,CAAC,IAAIA,CAAC,CAAClC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAAA,CAClDwC,UAAU,CAACN,CAAC,IAAIhF,YAAY,CAACgF,CAAC,CAAC,CAAC;;IAEnC;IACAP,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BA,IAAI,CAAC,WAAW,EAAE,eAAeF,MAAM,GAAG,CAAC,CAC3CmB,IAAI,CAACP,KAAK,CAAC,CACXtB,SAAS,CAAC,MAAM,CAAC,CACjBY,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,iBAAiB,CAAC,CAAC,CAAC;;IAEzC;IACAD,GAAG,CAACE,MAAM,CAAC,GAAG,CAAC,CACZD,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BiB,IAAI,CAACH,KAAK,CAAC,CACX1B,SAAS,CAAC,MAAM,CAAC,CACjBY,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;;IAE1B;IACAD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,WAAW,EAAE,aAAa,CAAC,CAChCA,IAAI,CAAC,GAAG,EAAE,CAACR,MAAM,CAACI,IAAI,GAAG,EAAE,CAAC,CAC5BI,IAAI,CAAC,GAAG,EAAE,CAACF,MAAM,GAAG,CAAC,CAAC,CACtBE,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BkB,IAAI,CAACtF,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGxF,MAAM,CAACyF,KAAK,CAAC,CAAC,CAAC,CAAC;;IAEzD;IACA,MAAMC,YAAY,GAAGzC,cAAc,CAACjD,MAAM,CAAC;;IAE3C;IACA,MAAM2F,YAAY,GAAGxB,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACpCA,MAAM,CAAC,gBAAgB,CAAC,CACxBD,IAAI,CAAC,IAAI,EAAE,gBAAgBpE,MAAM,EAAE,CAAC,CACpCoE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAChBA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAChBA,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAChBA,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC;IAErBuB,YAAY,CAACtB,MAAM,CAAC,MAAM,CAAC,CACxBD,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CACpBA,IAAI,CAAC,YAAY,EAAEsB,YAAY,CAAC,CAChCtB,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;IAE5BuB,YAAY,CAACtB,MAAM,CAAC,MAAM,CAAC,CACxBD,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CACtBA,IAAI,CAAC,YAAY,EAAEsB,YAAY,CAAC,CAChCtB,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC;;IAE7B;IACA,MAAMwB,IAAI,GAAGvG,EAAE,CAACuG,IAAI,CAAC,CAAC,CACnBC,CAAC,CAACnB,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,IAAI,CAAC,CAAC,CACtBwD,CAAC,CAACpB,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAClC,KAAK,CAAC,CAAC,CACvBuD,KAAK,CAAC1G,EAAE,CAAC2G,aAAa,CAACC,OAAO,CAAC,GAAG,CAAC,CAAC;;IAEvC;IACA,MAAMC,IAAI,GAAG7G,EAAE,CAAC6G,IAAI,CAAC,CAAC,CACnBL,CAAC,CAACnB,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,IAAI,CAAC,CAAC,CACtB6D,EAAE,CAACjC,MAAM,CAAC,CACVkC,EAAE,CAAC1B,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAClC,KAAK,CAAC,CAAC,CACxBuD,KAAK,CAAC1G,EAAE,CAAC2G,aAAa,CAACC,OAAO,CAAC,GAAG,CAAC,CAAC;;IAEvC;IACA,MAAM/D,MAAM,GAAGiC,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CAC9BA,MAAM,CAAC,QAAQ,CAAC,CAChBD,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CACzBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;IAEzBlC,MAAM,CAACmC,MAAM,CAAC,gBAAgB,CAAC,CAC5BD,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC;IAEzBlC,MAAM,CAACmC,MAAM,CAAC,UAAU,CAAC,CACtBD,IAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAClBA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CACbA,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC;IAE/BlC,MAAM,CAACmC,MAAM,CAAC,qBAAqB,CAAC,CACjCA,MAAM,CAAC,SAAS,CAAC,CACjBD,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CACtBA,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;IAErB,MAAMiC,OAAO,GAAGnE,MAAM,CAACmC,MAAM,CAAC,SAAS,CAAC;IACxCgC,OAAO,CAAChC,MAAM,CAAC,aAAa,CAAC,CAC1BD,IAAI,CAAC,IAAI,EAAE,YAAY,CAAC;IAC3BiC,OAAO,CAAChC,MAAM,CAAC,aAAa,CAAC,CAC1BD,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC;;IAE9B;IACAD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfiC,KAAK,CAACnG,IAAI,CAAC,CACXiE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAE8B,IAAI,CAAC,CACf9B,IAAI,CAAC,MAAM,EAAE,qBAAqBpE,MAAM,GAAG,CAAC,CAC5CoE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;;IAEvB;IACA,MAAMmC,IAAI,GAAGpC,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CAC5BiC,KAAK,CAACnG,IAAI,CAAC,CACXiE,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CACrBA,IAAI,CAAC,GAAG,EAAEwB,IAAI,CAAC,CACfxB,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAEsB,YAAY,CAAC,CAC5BtB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,QAAQ,EAAE,mBAAmB,CAAC;;IAEtC;IACA,MAAMoC,WAAW,GAAGD,IAAI,CAACE,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;;IAEhD;IACAH,IAAI,CACDnC,IAAI,CAAC,kBAAkB,EAAEoC,WAAW,GAAG,GAAG,GAAGA,WAAW,CAAC,CACzDpC,IAAI,CAAC,mBAAmB,EAAEoC,WAAW,CAAC,CACtCG,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdC,IAAI,CAACxH,EAAE,CAACyH,UAAU,CAAC,CACnB1C,IAAI,CAAC,mBAAmB,EAAE,CAAC,CAAC;;IAE/B;IACAD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAEH,KAAK,CAAC,CACpBG,IAAI,CAAC,QAAQ,EAAEF,MAAM,CAAC,CACtBE,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAC7B2C,EAAE,CAAC,WAAW,EAAE,UAASC,KAAK,EAAE;MAC/B,MAAM,CAACC,MAAM,CAAC,GAAG5H,EAAE,CAAC6H,OAAO,CAACF,KAAK,CAAC;MAClC,MAAMG,EAAE,GAAG7C,MAAM,CAAC8C,MAAM,CAACH,MAAM,CAAC;;MAEhC;MACA,MAAMI,MAAM,GAAGhI,EAAE,CAACiI,QAAQ,CAAC5C,CAAC,IAAIA,CAAC,CAACpC,IAAI,CAAC,CAAC0B,IAAI;MAC5C,MAAMuD,KAAK,GAAGF,MAAM,CAAClH,IAAI,EAAEgH,EAAE,CAAC;MAC9B,MAAMK,EAAE,GAAGrH,IAAI,CAACoH,KAAK,GAAG,CAAC,CAAC;MAC1B,MAAME,EAAE,GAAGtH,IAAI,CAACoH,KAAK,CAAC;MAEtB,IAAI,CAACC,EAAE,IAAI,CAACC,EAAE,EAAE;MAEhB,MAAM/C,CAAC,GAAGyC,EAAE,GAAGK,EAAE,CAAClF,IAAI,GAAGmF,EAAE,CAACnF,IAAI,GAAG6E,EAAE,GAAGM,EAAE,GAAGD,EAAE;MAC/CtG,mBAAmB,CAACwD,CAAC,CAAC;;MAEtB;MACA1D,UAAU,CAACsC,OAAO,CACfoE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC,CACnBA,KAAK,CAAC,MAAM,EAAGV,KAAK,CAACW,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACxCD,KAAK,CAAC,KAAK,EAAGV,KAAK,CAACY,KAAK,GAAG,EAAE,GAAI,IAAI,CAAC,CACvCF,KAAK,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CACtDA,KAAK,CAAC,eAAe,EAAE,KAAK,CAAC,CAC7BA,KAAK,CAAC,YAAY,EAAE,8BAA8B,CAAC,CACnDA,KAAK,CAAC,SAAS,EAAE,WAAW,CAAC,CAC7BA,KAAK,CAAC,aAAa,EAAE,sCAAsC,CAAC,CAC5DA,KAAK,CAAC,WAAW,EAAE,MAAM,CAAC,CAC1BA,KAAK,CAAC,QAAQ,EAAE,aAAahC,YAAY,EAAE,CAAC,CAC5CmC,IAAI,CAAC;AAChB;AACA,sBAAsBnD,CAAC,CAACpC,IAAI;AAC5B;AACA;AACA,gEAAgEtC,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGxF,MAAM,CAACyF,KAAK,CAAC,CAAC,CAAC;AAChH,sDAAsDC,YAAY,MAAMhG,YAAY,CAACgF,CAAC,CAAClC,KAAK,CAAC;AAC7F;AACA;AACA;AACA,gEAAgEkC,CAAC,CAACoD,KAAK;AACvE;AACA,WAAW,CAAC;IACN,CAAC,CAAC,CACDf,EAAE,CAAC,YAAY,EAAE,YAAW;MAC3B7F,mBAAmB,CAAC,IAAI,CAAC;MACzBF,UAAU,CAACsC,OAAO,CAACoE,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACxC,CAAC,CAAC;;IAEJ;IACAvD,GAAG,CAACX,SAAS,CAAC,MAAM,CAAC,CAClBrD,IAAI,CAACA,IAAI,CAAC,CACV4H,KAAK,CAAC,CAAC,CACP1D,MAAM,CAAC,QAAQ,CAAC,CAChBD,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CACpBA,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIJ,MAAM,CAACI,CAAC,CAACpC,IAAI,CAAC,CAAC,CAC/B8B,IAAI,CAAC,IAAI,EAAEM,CAAC,IAAIE,MAAM,CAACF,CAAC,CAAClC,KAAK,CAAC,CAAC,CAChC4B,IAAI,CAAC,GAAG,EAAEM,CAAC,IAAIzD,gBAAgB,IAAIA,gBAAgB,CAACqB,IAAI,KAAKoC,CAAC,CAACpC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CAC5E8B,IAAI,CAAC,MAAM,EAAEM,CAAC,IAAIzD,gBAAgB,IAAIA,gBAAgB,CAACqB,IAAI,KAAKoC,CAAC,CAACpC,IAAI,GAAGoD,YAAY,GAAG,OAAO,CAAC,CAChGtB,IAAI,CAAC,QAAQ,EAAEsB,YAAY,CAAC,CAC5BtB,IAAI,CAAC,cAAc,EAAEM,CAAC,IAAIzD,gBAAgB,IAAIA,gBAAgB,CAACqB,IAAI,KAAKoC,CAAC,CAACpC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,CACvFoF,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAC1BtD,IAAI,CAAC,QAAQ,EAAEM,CAAC,IAAIzD,gBAAgB,IAAIA,gBAAgB,CAACqB,IAAI,KAAKoC,CAAC,CAACpC,IAAI,GAAG,mBAAmB,GAAG,MAAM,CAAC,CACxGqE,UAAU,CAAC,CAAC,CACZqB,KAAK,CAAC,CAACtD,CAAC,EAAEuD,CAAC,KAAKA,CAAC,GAAG,EAAE,CAAC,CACvBrB,QAAQ,CAAC,GAAG,CAAC,CACbxC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;;IAErB;IACA,IAAInD,gBAAgB,EAAE;MACpB;MACAkD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BA,IAAI,CAAC,GAAG,EAAEE,MAAM,CAACrD,gBAAgB,CAACqB,IAAI,CAAC,CAAC,CACxC8B,IAAI,CAAC,GAAG,EAAEQ,MAAM,CAAC3D,gBAAgB,CAACuB,KAAK,CAAC,GAAG,EAAE,CAAC,CAC9C4B,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3BA,IAAI,CAAC,MAAM,EAAEsB,YAAY,CAAC,CAC1BJ,IAAI,CAAC5F,YAAY,CAACuB,gBAAgB,CAACuB,KAAK,CAAC,CAAC;;MAE7C;MACA2B,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,GAAG,EAAEE,MAAM,CAACrD,gBAAgB,CAACqB,IAAI,CAAC,CAAC,CACxC8B,IAAI,CAAC,GAAG,EAAEF,MAAM,GAAG,EAAE,CAAC,CACtBE,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3BA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBkB,IAAI,CAACrE,gBAAgB,CAACqB,IAAI,CAAC;;MAE9B;MACA6B,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,IAAI,EAAEE,MAAM,CAACrD,gBAAgB,CAACqB,IAAI,CAAC,CAAC,CACzC8B,IAAI,CAAC,IAAI,EAAEE,MAAM,CAACrD,gBAAgB,CAACqB,IAAI,CAAC,CAAC,CACzC8B,IAAI,CAAC,IAAI,EAAEQ,MAAM,CAAC3D,gBAAgB,CAACuB,KAAK,CAAC,CAAC,CAC1C4B,IAAI,CAAC,IAAI,EAAEF,MAAM,CAAC,CAClBE,IAAI,CAAC,QAAQ,EAAEsB,YAAY,CAAC,CAC5BtB,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC,CACzBA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAC/BA,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC;;MAEvB;MACAD,GAAG,CAACE,MAAM,CAAC,QAAQ,CAAC,CACjBD,IAAI,CAAC,OAAO,EAAE,YAAY,CAAC,CAC3BA,IAAI,CAAC,IAAI,EAAEE,MAAM,CAACrD,gBAAgB,CAACqB,IAAI,CAAC,CAAC,CACzC8B,IAAI,CAAC,IAAI,EAAEQ,MAAM,CAAC3D,gBAAgB,CAACuB,KAAK,CAAC,CAAC,CAC1C4B,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CACpBA,IAAI,CAAC,QAAQ,EAAEsB,YAAY,CAAC,CAC5BtB,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CACvBA,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,CAC3BA,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC;IACpC;;IAEA;IACAD,GAAG,CAACE,MAAM,CAAC,MAAM,CAAC,CACfD,IAAI,CAAC,OAAO,EAAE,aAAa,CAAC,CAC5BA,IAAI,CAAC,GAAG,EAAEH,KAAK,GAAG,CAAC,CAAC,CACpBG,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CACbA,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3BA,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAC7BA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBkB,IAAI,CAAC,GAAGtF,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGxF,MAAM,CAACyF,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC;EAC/E,CAAC;EAED,MAAMyC,sBAAsB,GAAIC,CAAC,IAAK;IACpCzH,aAAa,CAACyH,CAAC,CAACC,MAAM,CAAC5F,KAAK,CAAC;EAC/B,CAAC;EAED,MAAM6F,mBAAmB,GAAGA,CAAA,kBAC1BvI,OAAA;IAAKwI,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BzI,OAAA;MACEwI,SAAS,EAAC,cAAc;MACxB9F,KAAK,EAAExC,MAAO;MACdwI,QAAQ,EAAGL,CAAC,IAAKrF,MAAM,CAAC2F,QAAQ,CAACC,IAAI,GAAG,WAAWP,CAAC,CAACC,MAAM,CAAC5F,KAAK,EAAG;MACpEkF,KAAK,EAAE;QACLiB,OAAO,EAAE,UAAU;QACnBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAE,mBAAmB;QAC3BC,UAAU,EAAE,OAAO;QACnBC,SAAS,EAAE,+BAA+B;QAC1CC,UAAU,EAAE,KAAK;QACjBC,KAAK,EAAE,SAAS;QAChBC,MAAM,EAAE;MACV,CAAE;MAAAX,QAAA,gBAEFzI,OAAA;QAAQ0C,KAAK,EAAC,WAAW;QAAA+F,QAAA,EAAC;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC5CxJ,OAAA;QAAQ0C,KAAK,EAAC,YAAY;QAAA+F,QAAA,EAAC;MAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CxJ,OAAA;QAAQ0C,KAAK,EAAC,WAAW;QAAA+F,QAAA,EAAC;MAAS;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACTxJ,OAAA;MAAKwI,SAAS,EAAC,uBAAuB;MAACZ,KAAK,EAAE;QAAE6B,OAAO,EAAE,MAAM;QAAEC,UAAU,EAAE;MAAS,CAAE;MAAAjB,QAAA,gBACtFzI,OAAA;QACE2J,OAAO,EAAC,aAAa;QACrB/B,KAAK,EAAE;UACLgC,WAAW,EAAE,KAAK;UAClBV,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE;QACT,CAAE;QAAAV,QAAA,EACH;MAED;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRxJ,OAAA;QACE6J,EAAE,EAAC,aAAa;QAChBnH,KAAK,EAAE/B,UAAW;QAClB+H,QAAQ,EAAEN,sBAAuB;QACjCR,KAAK,EAAE;UACLiB,OAAO,EAAE,UAAU;UACnBC,YAAY,EAAE,KAAK;UACnBC,MAAM,EAAE,mBAAmB;UAC3BC,UAAU,EAAE,OAAO;UACnBC,SAAS,EAAE,+BAA+B;UAC1CC,UAAU,EAAE,KAAK;UACjBC,KAAK,EAAE,SAAS;UAChBC,MAAM,EAAE;QACV,CAAE;QAAAX,QAAA,gBAEFzI,OAAA;UAAQ0C,KAAK,EAAC,KAAK;UAAA+F,QAAA,EAAC;QAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACrC1I,cAAc,CAACgJ,GAAG,CAACtH,IAAI,iBACtBxC,OAAA;UAAmB0C,KAAK,EAAEF,IAAK;UAAAiG,QAAA,EAAEjG;QAAI,GAAxBA,IAAI;UAAA6G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAC/C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CACN;EAED,MAAMO,WAAW,GAAG;IAClB3F,MAAM,EAAE,MAAM;IACd4E,UAAU,EAAE,OAAO;IACnBF,YAAY,EAAE,KAAK;IACnBG,SAAS,EAAE,uEAAuE;IAClFe,QAAQ,EAAE;EACZ,CAAC;EAED,oBACEhK,OAAA,CAACP,aAAa;IACZwK,KAAK,EAAE,GAAG/J,MAAM,CAACuF,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGxF,MAAM,CAACyF,KAAK,CAAC,CAAC,CAAC,kBAAmB;IAC7EuE,aAAa,EAAE3B,mBAAmB,CAAC,CAAE;IACrCC,SAAS,EAAC,YAAY;IAAAC,QAAA,eAEtBzI,OAAA;MACEmK,GAAG,EAAElJ,YAAa;MAClB2G,KAAK,EAAE;QAAEzD,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEgG,QAAQ,EAAE;MAAW,CAAE;MAAA3B,QAAA,EAE/DlI,OAAO,gBACNP,OAAA,CAACN,MAAM;QAAC2K,OAAO,EAAC;MAA4B;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GAC7C/I,KAAK,gBACPT,OAAA,CAACL,aAAa;QAAC0K,OAAO,EAAE5J,KAAM;QAAC6J,IAAI,EAAC;MAAI;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,GACzCnJ,IAAI,CAACwC,MAAM,KAAK,CAAC,gBACnB7C,OAAA,CAACL,aAAa;QAAC0K,OAAO,EAAC;MAA8B;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,gBAExDxJ,OAAA;QAAK4H,KAAK,EAAEmC,WAAY;QAAAtB,QAAA,eACtBzI,OAAA;UAAKmK,GAAG,EAAEnJ,MAAO;UAACwH,SAAS,EAAC,WAAW;UAACZ,KAAK,EAAE;YAAEzD,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAO;QAAE;UAAAiF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF;IACN;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEpB,CAAC;AAACpJ,EAAA,CAneIH,eAAe;AAAAsK,EAAA,GAAftK,eAAe;AAqerB,eAAeA,eAAe;AAAC,IAAAsK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}