{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(null);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// For handling errors\nuseEffect(()=>{const storedUser=localStorage.getItem('user');if(storedUser){setUser(JSON.parse(storedUser));}setLoading(false);// Set loading to false after checking the stored user\n},[]);const signIn=async(email,role)=>{try{const response=await fetch('http://localhost:5000/api/sign-in',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,role})});if(!response.ok){throw new Error('Sign in failed');}const data=await response.json();const userData={email,role,customerId:data.customer_id,// Will be null for client role\nredirect:data.redirect};setUser(userData);localStorage.setItem('user',JSON.stringify(userData));return userData;}catch(error){console.error('Sign in error:',error);setError('Sign-in failed. Please try again.');throw error;}};const signOut=()=>{setUser(null);localStorage.removeItem('user');};const value={user,signIn,signOut,loading,error// Provide error state to the consuming components\n};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","error","setError","storedUser","localStorage","getItem","JSON","parse","signIn","email","role","response","fetch","method","headers","body","stringify","ok","Error","data","json","userData","customerId","customer_id","redirect","setItem","console","signOut","removeItem","value","Provider","useAuth","context"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // For handling errors\r\n\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem('user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n    setLoading(false); // Set loading to false after checking the stored user\r\n  }, []);\r\n\r\n  const signIn = async (email, role) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/sign-in', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, role }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Sign in failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      const userData = {\r\n        email,\r\n        role,\r\n        customerId: data.customer_id, // Will be null for client role\r\n        redirect: data.redirect,\r\n      };\r\n\r\n      setUser(userData);\r\n      localStorage.setItem('user', JSON.stringify(userData));\r\n\r\n      return userData;\r\n    } catch (error) {\r\n      console.error('Sign in error:', error);\r\n      setError('Sign-in failed. Please try again.');\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    signIn,\r\n    signOut,\r\n    loading,\r\n    error, // Provide error state to the consuming components\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,IAAI,CAAC,CAEvC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1CE,SAAS,CAAC,IAAM,CACd,KAAM,CAAAa,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,GAAIF,UAAU,CAAE,CACdL,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CACAH,UAAU,CAAC,KAAK,CAAC,CAAE;AACrB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,MAAM,CAAG,KAAAA,CAAOC,KAAK,CAAEC,IAAI,GAAK,CACpC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,mCAAmC,CAAE,CAChEC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAET,IAAI,CAACU,SAAS,CAAC,CAAEP,KAAK,CAAEC,IAAK,CAAC,CACtC,CAAC,CAAC,CAEF,GAAI,CAACC,QAAQ,CAACM,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,gBAAgB,CAAC,CACnC,CAEA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,QAAQ,CAAG,CACfZ,KAAK,CACLC,IAAI,CACJY,UAAU,CAAEH,IAAI,CAACI,WAAW,CAAE;AAC9BC,QAAQ,CAAEL,IAAI,CAACK,QACjB,CAAC,CAED1B,OAAO,CAACuB,QAAQ,CAAC,CACjBjB,YAAY,CAACqB,OAAO,CAAC,MAAM,CAAEnB,IAAI,CAACU,SAAS,CAACK,QAAQ,CAAC,CAAC,CAEtD,MAAO,CAAAA,QAAQ,CACjB,CAAE,MAAOpB,KAAK,CAAE,CACdyB,OAAO,CAACzB,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAAC,CACtCC,QAAQ,CAAC,mCAAmC,CAAC,CAC7C,KAAM,CAAAD,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAA0B,OAAO,CAAGA,CAAA,GAAM,CACpB7B,OAAO,CAAC,IAAI,CAAC,CACbM,YAAY,CAACwB,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED,KAAM,CAAAC,KAAK,CAAG,CACZhC,IAAI,CACJW,MAAM,CACNmB,OAAO,CACP5B,OAAO,CACPE,KAAO;AACT,CAAC,CAED,mBAAOT,IAAA,CAACC,WAAW,CAACqC,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAjC,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC,CAED,MAAO,MAAM,CAAAmC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG3C,UAAU,CAACI,WAAW,CAAC,CACvC,GAAI,CAACuC,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAd,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAc,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}