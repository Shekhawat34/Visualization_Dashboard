{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport CardContainer from './common/CardContainer';\nimport Loader from './common/Loader';\nimport NoDataMessage from './common/NoDataMessage';\nimport api from '../services/api';\nimport { formatNumber } from '../utils/helpers';\nimport IntensityChart from './charts/IntensityChart';\nimport LikelihoodChart from './charts/LikelihoodChart';\nimport RelevanceChart from './charts/RelevanceChart';\nimport YearDistributionChart from './charts/YearDistributionChart';\nimport RegionChart from './charts/RegionChart';\nimport TopicDistributionChart from './charts/TopicDistributionChart';\nimport SectorChart from './charts/SectorChart';\nimport PESTChart from './charts/PESTChart';\nimport CountryMap from './charts/CountryMap';\nimport TimeseriesChart from './charts/TimeseriesChart';\nimport '../styles/Dashboard.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  activeFilters\n}) => {\n  _s();\n  const location = useLocation();\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n  const [metrics, setMetrics] = useState({\n    totalInsights: 0,\n    avgIntensity: 0,\n    avgLikelihood: 0,\n    avgRelevance: 0\n  });\n  const [timeseriesData, setTimeseriesData] = useState([]);\n  const [topCountries, setTopCountries] = useState([]);\n  const [topTopics, setTopTopics] = useState([]);\n  const [sectorData, setSectorData] = useState([]);\n  const [pestData, setPestData] = useState([]);\n  const [regionData, setRegionData] = useState([]);\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\n  const [intensityData, setIntensityData] = useState([]);\n  const [likelihoodData, setLikelihoodData] = useState([]);\n  const [relevanceData, setRelevanceData] = useState([]);\n\n  // Fetch data based on active filters\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        // Fetch filtered data\n        const result = await api.getData(activeFilters);\n        setData(result);\n\n        // Calculate metrics from data\n        if (result.length > 0) {\n          const totalInsights = result.length;\n          const avgIntensity = result.reduce((sum, item) => sum + (item.intensity || 0), 0) / totalInsights;\n          const avgLikelihood = result.reduce((sum, item) => sum + (item.likelihood || 0), 0) / totalInsights;\n          const avgRelevance = result.reduce((sum, item) => sum + (item.relevance || 0), 0) / totalInsights;\n          setMetrics({\n            totalInsights,\n            avgIntensity,\n            avgLikelihood,\n            avgRelevance\n          });\n        }\n\n        // Fetch timeseries data\n        const timeseriesResult = await api.getTimeseries(selectedMetric);\n        setTimeseriesData(timeseriesResult);\n\n        // Fetch top countries\n        const topCountriesResult = await api.getTopN(selectedMetric, 'country', 10);\n        setTopCountries(topCountriesResult);\n\n        // Fetch top topics\n        const topTopicsResult = await api.getTopN(selectedMetric, 'topic', 10);\n        setTopTopics(topTopicsResult);\n\n        // Fetch sector data\n        const sectorResult = await api.getSectors();\n        setSectorData(sectorResult);\n\n        // Fetch PEST data\n        const pestResult = await api.getPEST();\n        setPestData(pestResult);\n\n        // Fetch region data\n        const regionResult = await api.getRegions();\n        setRegionData(regionResult);\n\n        // Fetch metric-specific data for dedicated charts\n        const intensityMetrics = await api.getMetrics('country', 'intensity');\n        setIntensityData(intensityMetrics);\n        const likelihoodMetrics = await api.getMetrics('country', 'likelihood');\n        setLikelihoodData(likelihoodMetrics);\n        const relevanceMetrics = await api.getMetrics('country', 'relevance');\n        setRelevanceData(relevanceMetrics);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [activeFilters, selectedMetric]);\n\n  // Handle metric change\n  const handleMetricChange = metric => {\n    setSelectedMetric(metric);\n  };\n\n  // Render different view based on current path\n  const renderView = () => {\n    const path = location.pathname;\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"Loading dashboard data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this);\n    }\n    if (data.length === 0) {\n      return /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No data available for the selected filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Main dashboard view\n    if (path === '/' || path === '/dashboard') {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dashboard-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-title\",\n              children: \"Total Insights\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(metrics.totalInsights)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-title\",\n              children: \"Avg. Intensity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(metrics.avgIntensity)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-title\",\n              children: \"Avg. Likelihood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(metrics.avgLikelihood)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-title\",\n              children: \"Avg. Relevance\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-value\",\n              children: formatNumber(metrics.avgRelevance)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Insight Intensity Over Time\",\n            actionButtons: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n                onClick: () => handleMetricChange('intensity'),\n                children: \"Intensity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`,\n                onClick: () => handleMetricChange('likelihood'),\n                children: \"Likelihood\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n                onClick: () => handleMetricChange('relevance'),\n                children: \"Relevance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(TimeseriesChart, {\n              data: timeseriesData,\n              metric: selectedMetric\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Year Distribution\",\n            children: /*#__PURE__*/_jsxDEV(YearDistributionChart, {\n              data: data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Top Countries\",\n            children: /*#__PURE__*/_jsxDEV(CountryMap, {\n              data: topCountries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Top Topics\",\n            children: /*#__PURE__*/_jsxDEV(TopicDistributionChart, {\n              data: topTopics\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Sector Analysis\",\n            children: /*#__PURE__*/_jsxDEV(SectorChart, {\n              data: sectorData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"PEST Analysis\",\n            children: /*#__PURE__*/_jsxDEV(PESTChart, {\n              data: pestData,\n              compact: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Region Distribution\",\n            children: /*#__PURE__*/_jsxDEV(RegionChart, {\n              data: regionData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    // Metrics view - utilizing the unused charts\n    if (path === '/metrics') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Key Metrics Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Intensity Analysis By Country\",\n            children: /*#__PURE__*/_jsxDEV(IntensityChart, {\n              data: intensityData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Likelihood Analysis By Country\",\n            children: /*#__PURE__*/_jsxDEV(LikelihoodChart, {\n              data: likelihoodData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Relevance Analysis By Country\",\n            children: /*#__PURE__*/_jsxDEV(RelevanceChart, {\n              data: relevanceData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Metrics Comparison\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-tabs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabs-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('intensity'),\n                  children: \"Intensity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('likelihood'),\n                  children: \"Likelihood\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('relevance'),\n                  children: \"Relevance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabs-content\",\n                children: [selectedMetric === 'intensity' && /*#__PURE__*/_jsxDEV(IntensityChart, {\n                  data: intensityData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 54\n                }, this), selectedMetric === 'likelihood' && /*#__PURE__*/_jsxDEV(LikelihoodChart, {\n                  data: likelihoodData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 55\n                }, this), selectedMetric === 'relevance' && /*#__PURE__*/_jsxDEV(RelevanceChart, {\n                  data: relevanceData\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Topics view\n    if (path === '/topics') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Topic Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          title: \"Top Topics by Impact\",\n          children: /*#__PURE__*/_jsxDEV(TopicDistributionChart, {\n            data: topTopics,\n            fullSize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Topic Intensity\",\n            children: /*#__PURE__*/_jsxDEV(IntensityChart, {\n              data: intensityData.filter(item => item.topic),\n              filter: \"topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Topic Likelihood\",\n            children: /*#__PURE__*/_jsxDEV(LikelihoodChart, {\n              data: likelihoodData.filter(item => item.topic),\n              filter: \"topic\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Regions view\n    if (path === '/regions') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Regional Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          title: \"Regional Distribution\",\n          children: /*#__PURE__*/_jsxDEV(RegionChart, {\n            data: regionData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          title: \"Country Impact Map\",\n          children: /*#__PURE__*/_jsxDEV(CountryMap, {\n            data: topCountries,\n            fullSize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Regional Intensity\",\n            children: /*#__PURE__*/_jsxDEV(IntensityChart, {\n              data: intensityData.filter(item => item.region),\n              filter: \"region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Regional Relevance\",\n            children: /*#__PURE__*/_jsxDEV(RelevanceChart, {\n              data: relevanceData.filter(item => item.region),\n              filter: \"region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Sectors view\n    if (path === '/sectors') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sector Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          title: \"Sector Distribution\",\n          children: /*#__PURE__*/_jsxDEV(SectorChart, {\n            data: sectorData,\n            fullSize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: [/*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Sector Intensity\",\n            children: /*#__PURE__*/_jsxDEV(IntensityChart, {\n              data: intensityData.filter(item => item.sector),\n              filter: \"sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: \"Sector Likelihood\",\n            children: /*#__PURE__*/_jsxDEV(LikelihoodChart, {\n              data: likelihoodData.filter(item => item.sector),\n              filter: \"sector\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this);\n    }\n\n    // PEST view\n    if (path === '/pest') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"PEST Analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n          title: \"PEST Factors\",\n          children: /*#__PURE__*/_jsxDEV(PESTChart, {\n            data: pestData,\n            fullSize: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-row\",\n          children: /*#__PURE__*/_jsxDEV(CardContainer, {\n            title: `${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)} by PEST Category`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrics-tabs\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabs-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('intensity'),\n                  children: \"Intensity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('likelihood'),\n                  children: \"Likelihood\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `tab-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n                  onClick: () => handleMetricChange('relevance'),\n                  children: \"Relevance\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tabs-content\",\n                children: [selectedMetric === 'intensity' && /*#__PURE__*/_jsxDEV(IntensityChart, {\n                  data: intensityData.filter(item => item.pest_category),\n                  filter: \"pest_category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 54\n                }, this), selectedMetric === 'likelihood' && /*#__PURE__*/_jsxDEV(LikelihoodChart, {\n                  data: likelihoodData.filter(item => item.pest_category),\n                  filter: \"pest_category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 55\n                }, this), selectedMetric === 'relevance' && /*#__PURE__*/_jsxDEV(RelevanceChart, {\n                  data: relevanceData.filter(item => item.pest_category),\n                  filter: \"pest_category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 54\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this);\n    }\n\n    // Default fallback\n    return /*#__PURE__*/_jsxDEV(NoDataMessage, {\n      message: \"Select a dashboard view from the sidebar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"dashboard-title\",\n        children: \"Global Insights Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"dashboard-description\",\n        children: \"Visualizing global trends and insights across regions, sectors, and time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), renderView()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"2fvD17gF0jY+UyCh3mLUI2mrXNs=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","CardContainer","Loader","NoDataMessage","api","formatNumber","IntensityChart","LikelihoodChart","RelevanceChart","YearDistributionChart","RegionChart","TopicDistributionChart","SectorChart","PESTChart","CountryMap","TimeseriesChart","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","activeFilters","_s","location","loading","setLoading","data","setData","metrics","setMetrics","totalInsights","avgIntensity","avgLikelihood","avgRelevance","timeseriesData","setTimeseriesData","topCountries","setTopCountries","topTopics","setTopTopics","sectorData","setSectorData","pestData","setPestData","regionData","setRegionData","selectedMetric","setSelectedMetric","intensityData","setIntensityData","likelihoodData","setLikelihoodData","relevanceData","setRelevanceData","fetchData","result","getData","length","reduce","sum","item","intensity","likelihood","relevance","timeseriesResult","getTimeseries","topCountriesResult","getTopN","topTopicsResult","sectorResult","getSectors","pestResult","getPEST","regionResult","getRegions","intensityMetrics","getMetrics","likelihoodMetrics","relevanceMetrics","error","console","handleMetricChange","metric","renderView","path","pathname","message","fileName","_jsxFileName","lineNumber","columnNumber","children","className","title","actionButtons","onClick","compact","fullSize","filter","topic","region","sector","charAt","toUpperCase","slice","pest_category","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport CardContainer from './common/CardContainer';\r\nimport Loader from './common/Loader';\r\nimport NoDataMessage from './common/NoDataMessage';\r\nimport api from '../services/api';\r\nimport { formatNumber } from '../utils/helpers';\r\nimport IntensityChart from './charts/IntensityChart';\r\nimport LikelihoodChart from './charts/LikelihoodChart';\r\nimport RelevanceChart from './charts/RelevanceChart';\r\nimport YearDistributionChart from './charts/YearDistributionChart';\r\nimport RegionChart from './charts/RegionChart';\r\nimport TopicDistributionChart from './charts/TopicDistributionChart';\r\nimport SectorChart from './charts/SectorChart';\r\nimport PESTChart from './charts/PESTChart';\r\nimport CountryMap from './charts/CountryMap';\r\nimport TimeseriesChart from './charts/TimeseriesChart';\r\nimport '../styles/Dashboard.css';\r\n\r\nconst Dashboard = ({ activeFilters }) => {\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(true);\r\n  const [data, setData] = useState([]);\r\n  const [metrics, setMetrics] = useState({\r\n    totalInsights: 0,\r\n    avgIntensity: 0,\r\n    avgLikelihood: 0,\r\n    avgRelevance: 0\r\n  });\r\n  const [timeseriesData, setTimeseriesData] = useState([]);\r\n  const [topCountries, setTopCountries] = useState([]);\r\n  const [topTopics, setTopTopics] = useState([]);\r\n  const [sectorData, setSectorData] = useState([]);\r\n  const [pestData, setPestData] = useState([]);\r\n  const [regionData, setRegionData] = useState([]);\r\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\r\n  const [intensityData, setIntensityData] = useState([]);\r\n  const [likelihoodData, setLikelihoodData] = useState([]);\r\n  const [relevanceData, setRelevanceData] = useState([]);\r\n\r\n  // Fetch data based on active filters\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Fetch filtered data\r\n        const result = await api.getData(activeFilters);\r\n        setData(result);\r\n        \r\n        // Calculate metrics from data\r\n        if (result.length > 0) {\r\n          const totalInsights = result.length;\r\n          const avgIntensity = result.reduce((sum, item) => sum + (item.intensity || 0), 0) / totalInsights;\r\n          const avgLikelihood = result.reduce((sum, item) => sum + (item.likelihood || 0), 0) / totalInsights;\r\n          const avgRelevance = result.reduce((sum, item) => sum + (item.relevance || 0), 0) / totalInsights;\r\n          \r\n          setMetrics({\r\n            totalInsights,\r\n            avgIntensity,\r\n            avgLikelihood,\r\n            avgRelevance\r\n          });\r\n        }\r\n        \r\n        // Fetch timeseries data\r\n        const timeseriesResult = await api.getTimeseries(selectedMetric);\r\n        setTimeseriesData(timeseriesResult);\r\n        \r\n        // Fetch top countries\r\n        const topCountriesResult = await api.getTopN(selectedMetric, 'country', 10);\r\n        setTopCountries(topCountriesResult);\r\n        \r\n        // Fetch top topics\r\n        const topTopicsResult = await api.getTopN(selectedMetric, 'topic', 10);\r\n        setTopTopics(topTopicsResult);\r\n        \r\n        // Fetch sector data\r\n        const sectorResult = await api.getSectors();\r\n        setSectorData(sectorResult);\r\n        \r\n        // Fetch PEST data\r\n        const pestResult = await api.getPEST();\r\n        setPestData(pestResult);\r\n        \r\n        // Fetch region data\r\n        const regionResult = await api.getRegions();\r\n        setRegionData(regionResult);\r\n        \r\n        // Fetch metric-specific data for dedicated charts\r\n        const intensityMetrics = await api.getMetrics('country', 'intensity');\r\n        setIntensityData(intensityMetrics);\r\n        \r\n        const likelihoodMetrics = await api.getMetrics('country', 'likelihood');\r\n        setLikelihoodData(likelihoodMetrics);\r\n        \r\n        const relevanceMetrics = await api.getMetrics('country', 'relevance');\r\n        setRelevanceData(relevanceMetrics);\r\n        \r\n        setLoading(false);\r\n      } catch (error) {\r\n        console.error('Error fetching dashboard data:', error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [activeFilters, selectedMetric]);\r\n\r\n  // Handle metric change\r\n  const handleMetricChange = (metric) => {\r\n    setSelectedMetric(metric);\r\n  };\r\n\r\n  // Render different view based on current path\r\n  const renderView = () => {\r\n    const path = location.pathname;\r\n    \r\n    if (loading) {\r\n      return <Loader message=\"Loading dashboard data...\" />;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      return <NoDataMessage message=\"No data available for the selected filters\" />;\r\n    }\r\n\r\n    // Main dashboard view\r\n    if (path === '/' || path === '/dashboard') {\r\n      return (\r\n        <>\r\n          <div className=\"dashboard-stats\">\r\n            <div className=\"stat-card\">\r\n              <div className=\"stat-title\">Total Insights</div>\r\n              <div className=\"stat-value\">{formatNumber(metrics.totalInsights)}</div>\r\n            </div>\r\n            <div className=\"stat-card\">\r\n              <div className=\"stat-title\">Avg. Intensity</div>\r\n              <div className=\"stat-value\">{formatNumber(metrics.avgIntensity)}</div>\r\n            </div>\r\n            <div className=\"stat-card\">\r\n              <div className=\"stat-title\">Avg. Likelihood</div>\r\n              <div className=\"stat-value\">{formatNumber(metrics.avgLikelihood)}</div>\r\n            </div>\r\n            <div className=\"stat-card\">\r\n              <div className=\"stat-title\">Avg. Relevance</div>\r\n              <div className=\"stat-value\">{formatNumber(metrics.avgRelevance)}</div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer \r\n              title=\"Insight Intensity Over Time\" \r\n              actionButtons={\r\n                <div className=\"chart-actions\">\r\n                  <button \r\n                    className={`chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('intensity')}\r\n                  >\r\n                    Intensity\r\n                  </button>\r\n                  <button \r\n                    className={`chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('likelihood')}\r\n                  >\r\n                    Likelihood\r\n                  </button>\r\n                  <button \r\n                    className={`chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('relevance')}\r\n                  >\r\n                    Relevance\r\n                  </button>\r\n                </div>\r\n              }\r\n            >\r\n              <TimeseriesChart data={timeseriesData} metric={selectedMetric} />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Year Distribution\">\r\n              <YearDistributionChart data={data} />\r\n            </CardContainer>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Top Countries\">\r\n              <CountryMap data={topCountries} />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Top Topics\">\r\n              <TopicDistributionChart data={topTopics} />\r\n            </CardContainer>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Sector Analysis\">\r\n              <SectorChart data={sectorData} />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"PEST Analysis\">\r\n              <PESTChart data={pestData} compact={true}/>\r\n            </CardContainer>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Region Distribution\">\r\n              <RegionChart data={regionData} />\r\n            </CardContainer>\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n    \r\n    // Metrics view - utilizing the unused charts\r\n    if (path === '/metrics') {\r\n      return (\r\n        <div className=\"page-content\">\r\n          <div className=\"page-header\">\r\n            <h2>Key Metrics Analysis</h2>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Intensity Analysis By Country\">\r\n              <IntensityChart data={intensityData} />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Likelihood Analysis By Country\">\r\n              <LikelihoodChart data={likelihoodData} />\r\n            </CardContainer>\r\n          </div>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Relevance Analysis By Country\">\r\n              <RelevanceChart data={relevanceData} />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Metrics Comparison\">\r\n              <div className=\"metrics-tabs\">\r\n                <div className=\"tabs-header\">\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('intensity')}\r\n                  >\r\n                    Intensity\r\n                  </button>\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('likelihood')}\r\n                  >\r\n                    Likelihood\r\n                  </button>\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('relevance')}\r\n                  >\r\n                    Relevance\r\n                  </button>\r\n                </div>\r\n                <div className=\"tabs-content\">\r\n                  {selectedMetric === 'intensity' && <IntensityChart data={intensityData} />}\r\n                  {selectedMetric === 'likelihood' && <LikelihoodChart data={likelihoodData} />}\r\n                  {selectedMetric === 'relevance' && <RelevanceChart data={relevanceData} />}\r\n                </div>\r\n              </div>\r\n            </CardContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Topics view\r\n    if (path === '/topics') {\r\n      return (\r\n        <div className=\"page-content\">\r\n          <div className=\"page-header\">\r\n            <h2>Topic Analysis</h2>\r\n          </div>\r\n          \r\n          <CardContainer title=\"Top Topics by Impact\">\r\n            <TopicDistributionChart data={topTopics} fullSize={true} />\r\n          </CardContainer>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Topic Intensity\">\r\n              <IntensityChart data={intensityData.filter(item => item.topic)} filter=\"topic\" />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Topic Likelihood\">\r\n              <LikelihoodChart data={likelihoodData.filter(item => item.topic)} filter=\"topic\" />\r\n            </CardContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Regions view\r\n    if (path === '/regions') {\r\n      return (\r\n        <div className=\"page-content\">\r\n          <div className=\"page-header\">\r\n            <h2>Regional Analysis</h2>\r\n          </div>\r\n          \r\n          <CardContainer title=\"Regional Distribution\">\r\n            <RegionChart data={regionData} />\r\n          </CardContainer>\r\n          \r\n          <CardContainer title=\"Country Impact Map\">\r\n            <CountryMap data={topCountries} fullSize={true} />\r\n          </CardContainer>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Regional Intensity\">\r\n              <IntensityChart data={intensityData.filter(item => item.region)} filter=\"region\" />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Regional Relevance\">\r\n              <RelevanceChart data={relevanceData.filter(item => item.region)} filter=\"region\" />\r\n            </CardContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Sectors view\r\n    if (path === '/sectors') {\r\n      return (\r\n        <div className=\"page-content\">\r\n          <div className=\"page-header\">\r\n            <h2>Sector Analysis</h2>\r\n          </div>\r\n          \r\n          <CardContainer title=\"Sector Distribution\">\r\n            <SectorChart data={sectorData} fullSize={true} />\r\n          </CardContainer>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title=\"Sector Intensity\">\r\n              <IntensityChart data={intensityData.filter(item => item.sector)} filter=\"sector\" />\r\n            </CardContainer>\r\n            \r\n            <CardContainer title=\"Sector Likelihood\">\r\n              <LikelihoodChart data={likelihoodData.filter(item => item.sector)} filter=\"sector\" />\r\n            </CardContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // PEST view\r\n    if (path === '/pest') {\r\n      return (\r\n        <div className=\"page-content\">\r\n          <div className=\"page-header\">\r\n            <h2>PEST Analysis</h2>\r\n          </div>\r\n          \r\n          <CardContainer title=\"PEST Factors\">\r\n            <PESTChart data={pestData} fullSize={true} />\r\n          </CardContainer>\r\n          \r\n          <div className=\"chart-row\">\r\n            <CardContainer title={`${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)} by PEST Category`}>\r\n              <div className=\"metrics-tabs\">\r\n                <div className=\"tabs-header\">\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('intensity')}\r\n                  >\r\n                    Intensity\r\n                  </button>\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('likelihood')}\r\n                  >\r\n                    Likelihood\r\n                  </button>\r\n                  <button \r\n                    className={`tab-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n                    onClick={() => handleMetricChange('relevance')}\r\n                  >\r\n                    Relevance\r\n                  </button>\r\n                </div>\r\n                <div className=\"tabs-content\">\r\n                  {selectedMetric === 'intensity' && <IntensityChart data={intensityData.filter(item => item.pest_category)} filter=\"pest_category\" />}\r\n                  {selectedMetric === 'likelihood' && <LikelihoodChart data={likelihoodData.filter(item => item.pest_category)} filter=\"pest_category\" />}\r\n                  {selectedMetric === 'relevance' && <RelevanceChart data={relevanceData.filter(item => item.pest_category)} filter=\"pest_category\" />}\r\n                </div>\r\n              </div>\r\n            </CardContainer>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    // Default fallback\r\n    return <NoDataMessage message=\"Select a dashboard view from the sidebar\" />;\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <div className=\"dashboard-header\">\r\n        <h1 className=\"dashboard-title\">Global Insights Dashboard</h1>\r\n        <p className=\"dashboard-description\">\r\n          Visualizing global trends and insights across regions, sectors, and time\r\n        </p>\r\n      </div>\r\n      \r\n      {renderView()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}