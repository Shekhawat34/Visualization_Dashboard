{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\RegionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { createTooltip, formatNumber, debounce } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegionChart = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [chartType, setChartType] = useState('radar'); // 'radar', 'bar', or 'pie'\n  const [metric, setMetric] = useState('intensity'); // 'intensity', 'likelihood', or 'relevance'\n  const svgRef = useRef(null);\n  const legendRef = useRef(null);\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  useEffect(() => {\n    const fetchRegionData = async () => {\n      try {\n        setLoading(true);\n        const regionData = await api.getRegions();\n        const metricsData = await api.getMetrics('region', metric);\n\n        // Merge region data with metrics\n        const enhancedData = regionData.map(region => {\n          const metricData = metricsData.find(m => m.region === region.region) || {};\n          return {\n            ...region,\n            metricValue: metricData.value || 0\n          };\n        });\n        setData(enhancedData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching region data:', err);\n        setError('Failed to load region data');\n        setLoading(false);\n      }\n    };\n    fetchRegionData();\n  }, [metric]);\n  useEffect(() => {\n    if (data && data.length > 0 && !loading) {\n      renderChart();\n\n      // Create tooltip if not already created\n      if (!tooltipRef.current) {\n        tooltipRef.current = createTooltip(d3);\n      }\n\n      // Add resize listener\n      const handleResize = debounce(() => {\n        renderChart();\n      }, 300);\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [data, loading, chartType, metric]);\n  const renderChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n    d3.select(legendRef.current).selectAll('*').remove();\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: chartType === 'bar' ? 100 : 30,\n      left: chartType === 'bar' ? 60 : 30\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Process and sort data\n    const processedData = [...data].filter(d => d.region && d.region !== 'Unknown' && d.count > 0).sort((a, b) => b.count - a.count);\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create legend container\n    const legend = d3.select(legendRef.current).attr('class', 'chart-legend');\n    if (chartType === 'radar') {\n      renderRadarChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\n    } else if (chartType === 'pie') {\n      renderPieChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\n    } else {\n      renderBarChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\n    }\n  };\n  const renderRadarChart = (svg, data, width, height, margin, tooltip, legend) => {\n    // Limit to top 8 regions for radar chart\n    const radarData = data.slice(0, 8);\n\n    // Calculate center and radius\n    const centerX = width / 2;\n    const centerY = height / 2;\n    const radius = Math.min(centerX, centerY) * 0.8;\n\n    // Features for radar chart (metrics)\n    const features = ['count', 'metricValue'];\n    const featureLabels = {\n      'count': 'Event Count',\n      'metricValue': metric.charAt(0).toUpperCase() + metric.slice(1)\n    };\n\n    // Angle for each feature\n    const angleSlice = Math.PI * 2 / features.length;\n\n    // Scale for features\n    const rScale = d3.scaleLinear().domain([0, d3.max(radarData, d => Math.max(d.count / d3.max(radarData, d => d.count), d.metricValue / d3.max(radarData, d => d.metricValue)))]).range([0, radius]);\n\n    // Create circular grid\n    const levels = 5;\n    const gridColor = 'rgba(200, 200, 200, 0.2)';\n\n    // Draw circular grid\n    for (let j = 0; j < levels; j++) {\n      const levelFactor = radius * ((j + 1) / levels);\n\n      // Draw circular levels\n      svg.append('circle').attr('cx', centerX).attr('cy', centerY).attr('r', levelFactor).attr('class', 'radar-grid').style('fill', 'none').style('stroke', gridColor).style('stroke-dasharray', '3,3').style('stroke-width', '1px');\n    }\n\n    // Draw axis lines\n    features.forEach((feature, i) => {\n      const angle = angleSlice * i - Math.PI / 2;\n      const lineX = centerX + radius * Math.cos(angle);\n      const lineY = centerY + radius * Math.sin(angle);\n      svg.append('line').attr('x1', centerX).attr('y1', centerY).attr('x2', lineX).attr('y2', lineY).attr('class', 'radar-axis').style('stroke', gridColor).style('stroke-width', '1px');\n\n      // Add axis labels\n      svg.append('text').attr('class', 'radar-label').attr('x', centerX + (radius + 20) * Math.cos(angle)).attr('y', centerY + (radius + 20) * Math.sin(angle)).attr('text-anchor', 'middle').attr('dominant-baseline', 'middle').style('font-size', '12px').style('fill', 'var(--text-color)').text(featureLabels[feature]);\n    });\n\n    // Color scale\n    const colorScale = d3.scaleOrdinal().domain(radarData.map(d => d.region)).range(d3.schemeCategory10);\n\n    // Function to calculate path points\n    const getPathCoordinates = dataPoint => {\n      const maxCount = d3.max(radarData, d => d.count);\n      const maxMetricValue = d3.max(radarData, d => d.metricValue);\n      return features.map((feature, i) => {\n        const angle = angleSlice * i - Math.PI / 2;\n\n        // Normalize the value based on the feature\n        let normalizedValue;\n        if (feature === 'count') {\n          normalizedValue = dataPoint.count / maxCount;\n        } else if (feature === 'metricValue') {\n          normalizedValue = dataPoint.metricValue / maxMetricValue;\n        }\n        const pointRadius = rScale(normalizedValue);\n        return {\n          x: centerX + pointRadius * Math.cos(angle),\n          y: centerY + pointRadius * Math.sin(angle),\n          value: feature === 'count' ? dataPoint.count : dataPoint.metricValue,\n          feature\n        };\n      });\n    };\n\n    // Draw radar charts for each region\n    radarData.forEach((d, i) => {\n      const pathPoints = getPathCoordinates(d);\n      const color = colorScale(d.region);\n\n      // Draw path\n      const radarLine = d3.line().x(d => d.x).y(d => d.y).curve(d3.curveLinearClosed);\n\n      // Create radar path with animation\n      svg.append('path').datum(pathPoints).attr('class', 'radar-path').attr('d', radarLine).style('fill', color).style('fill-opacity', 0.1).style('stroke', color).style('stroke-width', 2).style('stroke-opacity', 0.8).style('stroke-dasharray', function () {\n        return this.getTotalLength() + \" \" + this.getTotalLength();\n      }).style('stroke-dashoffset', function () {\n        return this.getTotalLength();\n      }).transition().duration(1000).ease(d3.easeLinear).style('stroke-dashoffset', 0);\n\n      // Add dots at each point\n      svg.selectAll(`.radar-point-${i}`).data(pathPoints).enter().append('circle').attr('class', `radar-point-${i}`).attr('cx', d => d.x).attr('cy', d => d.y).attr('r', 0).style('fill', color).transition().delay(1000).duration(500).attr('r', 5);\n\n      // Add hover effects and tooltip to dots\n      svg.selectAll(`.radar-point-${i}`).on('mouseover', function (event, point) {\n        d3.select(this).transition().duration(200).attr('r', 8);\n        const featureLabel = featureLabels[point.feature];\n        tooltip.transition().duration(200).style('opacity', 0.9);\n        tooltip.html(`<strong>${d.region}</strong><br>${featureLabel}: ${formatNumber(point.value)}`).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n      }).on('mouseout', function () {\n        d3.select(this).transition().duration(200).attr('r', 5);\n        tooltip.transition().duration(500).style('opacity', 0);\n      });\n    });\n\n    // Add legend\n    radarData.forEach((d, i) => {\n      const color = colorScale(d.region);\n      const legendItem = legend.append('div').attr('class', 'legend-item').style('cursor', 'pointer').on('mouseover', function () {\n        // Highlight the corresponding radar path\n        svg.selectAll('.radar-path').style('opacity', 0.3);\n        svg.selectAll(`.radar-point-${i}`).style('opacity', 0.3);\n        svg.selectAll('.radar-path').filter((_, j) => j === i).style('opacity', 1).style('stroke-width', 4);\n        svg.selectAll(`.radar-point-${i}`).style('opacity', 1).attr('r', 8);\n      }).on('mouseout', function () {\n        svg.selectAll('.radar-path').style('opacity', 1).style('stroke-width', 2);\n        svg.selectAll(`.radar-point-${i}`).style('opacity', 1).attr('r', 5);\n      });\n      legendItem.append('div').attr('class', 'legend-color').style('background-color', color);\n      legendItem.append('div').attr('class', 'legend-text').text(d.region);\n    });\n  };\n  const renderPieChart = (svg, data, width, height, margin, tooltip, legend) => {\n    const g = svg.append('g').attr('transform', `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`);\n\n    // Limit to top 10 regions for pie chart\n    const pieData = data.slice(0, 10);\n\n    // Calculate total for percentages\n    const total = pieData.reduce((sum, d) => sum + d.count, 0);\n\n    // Create color scale\n    const color = d3.scaleOrdinal().domain(pieData.map(d => d.region)).range(d3.schemeCategory10);\n\n    // Create pie generator\n    const pie = d3.pie().value(d => d.count).sort(null);\n\n    // Create arc generator\n    const radius = Math.min(width, height) / 2;\n    const arc = d3.arc().innerRadius(0).outerRadius(radius * 0.8);\n\n    // Create outer arc for labels\n    const outerArc = d3.arc().innerRadius(radius * 0.9).outerRadius(radius * 0.9);\n\n    // Draw pie slices with animation\n    const slices = g.selectAll('path').data(pie(pieData)).enter().append('path').attr('d', arc).attr('fill', d => color(d.data.region)).attr('class', 'pie-slice').attr('stroke', 'white').attr('stroke-width', 2).style('opacity', 0.8).each(function (d) {\n      this._current = d;\n    }); // Store initial angles\n\n    // Add slice transitions\n    slices.transition().duration(1000).attrTween('d', function (d) {\n      const interpolate = d3.interpolate({\n        startAngle: 0,\n        endAngle: 0\n      }, d);\n      return function (t) {\n        return arc(interpolate(t));\n      };\n    });\n\n    // Add hover effects\n    slices.on('mouseover', function (event, d) {\n      const percentage = (d.data.count / total * 100).toFixed(1);\n\n      // Highlight slice\n      d3.select(this).transition().duration(200).attr('opacity', 1).attr('stroke-width', 3).attr('transform', function () {\n        const centroid = arc.centroid(d);\n        return `translate(${centroid[0] * 0.1}, ${centroid[1] * 0.1})`;\n      });\n\n      // Show tooltip\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`<strong>${d.data.region}</strong><br/>\n                   Count: ${formatNumber(d.data.count)}<br/>\n                   Percentage: ${percentage}%<br/>\n                   ${metric}: ${formatNumber(d.data.metricValue)}`).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      // Reset slice\n      d3.select(this).transition().duration(200).attr('opacity', 0.8).attr('stroke-width', 2).attr('transform', 'translate(0, 0)');\n\n      // Hide tooltip\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // Add percentage labels\n    g.selectAll('text').data(pie(pieData)).enter().append('text').attr('transform', d => {\n      const pos = outerArc.centroid(d);\n      const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n      pos[0] = radius * 0.95 * (midAngle < Math.PI ? 1 : -1);\n      return `translate(${pos})`;\n    }).attr('dy', '.35em').style('text-anchor', d => {\n      const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n      return midAngle < Math.PI ? 'start' : 'end';\n    }).style('font-size', '10px').style('opacity', 0).text(d => {\n      const percentage = (d.data.count / total * 100).toFixed(1);\n      return percentage > 5 ? `${percentage}%` : '';\n    }).transition().delay(1000).duration(500).style('opacity', 1);\n\n    // Add polylines to labels\n    g.selectAll('polyline').data(pie(pieData)).enter().append('polyline').style('opacity', 0).style('stroke', 'var(--text-color)').style('fill', 'none').style('stroke-width', 1).attr('points', d => {\n      const pos = outerArc.centroid(d);\n      const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\n      pos[0] = radius * 0.95 * (midAngle < Math.PI ? 1 : -1);\n      const percentage = (d.data.count / total * 100).toFixed(1);\n      return percentage > 5 ? [arc.centroid(d), outerArc.centroid(d), pos] : null;\n    }).transition().delay(1000).duration(500).style('opacity', 0.4);\n\n    // Create legend\n    pieData.forEach((item, index) => {\n      const percentage = (item.count / total * 100).toFixed(1);\n      const legendItem = legend.append('div').attr('class', 'legend-item').style('cursor', 'pointer').on('mouseover', function () {\n        // Highlight the corresponding pie slice\n        slices.filter((d, i) => i !== index).transition().duration(200).style('opacity', 0.3);\n        slices.filter((d, i) => i === index).transition().duration(200).style('opacity', 1).attr('transform', function (d) {\n          const centroid = arc.centroid(d);\n          return `translate(${centroid[0] * 0.1}, ${centroid[1] * 0.1})`;\n        });\n      }).on('mouseout', function () {\n        slices.transition().duration(200).style('opacity', 0.8).attr('transform', 'translate(0, 0)');\n      });\n      legendItem.append('div').attr('class', 'legend-color').style('background-color', color(item.region));\n      legendItem.append('div').attr('class', 'legend-text').text(`${item.region} (${percentage}%)`);\n    });\n  };\n  const renderBarChart = (svg, data, width, height, margin, tooltip, legend) => {\n    const g = svg.append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // Limit to top 15 regions for bar chart\n    const barData = data.slice(0, 15);\n\n    // Create scales\n    const x = d3.scaleBand().domain(barData.map(d => d.region)).range([0, width]).padding(0.2);\n    const y = d3.scaleLinear().domain([0, d3.max(barData, d => d.count) * 1.1]).nice().range([height, 0]);\n\n    // Calculate max value for the secondary metric\n    const maxMetricValue = d3.max(barData, d => d.metricValue);\n\n    // Create secondary y-scale for metric value\n    const y2 = d3.scaleLinear().domain([0, maxMetricValue * 1.1]).nice().range([height, 0]);\n\n    // Create color scale for bars\n    const colorScale = d3.scaleLinear().domain([0, d3.max(barData, d => d.count)]).range(['#4682B4', '#1E3F66']);\n\n    // Create axes\n    const xAxis = g.append('g').attr('class', 'axis').attr('transform', `translate(0, ${height})`).call(d3.axisBottom(x)).selectAll('text').attr('transform', 'rotate(-45)').attr('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em');\n    const yAxis = g.append('g').attr('class', 'axis').call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\n\n    // Create secondary y-axis for metric\n    const y2Axis = g.append('g').attr('class', 'axis y2-axis').attr('transform', `translate(${width}, 0)`).call(d3.axisRight(y2).ticks(5).tickFormat(d => formatNumber(d)));\n\n    // Add labels\n    g.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('dy', '1em').style('text-anchor', 'middle').text('Number of Events');\n    g.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', width + margin.right - 15).attr('x', -height / 2).attr('dy', '1em').style('text-anchor', 'middle').text(metric.charAt(0).toUpperCase() + metric.slice(1));\n\n    // Create grid\n    g.append('g').attr('class', 'grid').call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n    // Draw bars with animation\n    const bars = g.selectAll('.bar').data(barData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.region)).attr('width', x.bandwidth()).attr('y', height).attr('height', 0).attr('fill', d => colorScale(d.count)).on('mouseover', function (event, d) {\n      // Highlight bar\n      d3.select(this).transition().duration(200).attr('opacity', 0.7).attr('y', y(d.count) - 5).attr('height', height - y(d.count) + 5);\n\n      // Show tooltip\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n          <strong>${d.region}</strong><br/>\n          Count: ${formatNumber(d.count)}<br/>\n          ${metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d.metricValue)}\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function (event, d) {\n      // Reset bar\n      d3.select(this).transition().duration(200).attr('opacity', 1).attr('y', y(d.count)).attr('height', height - y(d.count));\n\n      // Hide tooltip\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n\n    // Animate bars\n    bars.transition().duration(1000).attr('y', d => y(d.count)).attr('height', d => height - y(d.count));\n\n    // Add line for the metric value\n    const line = d3.line().x(d => x(d.region) + x.bandwidth() / 2).y(d => y2(d.metricValue)).curve(d3.curveMonotoneX);\n    const linePath = g.append('path').datum(barData).attr('class', 'metric-line').attr('fill', 'none').attr('stroke', '#ff7f0e').attr('stroke-width', 3).attr('d', line);\n\n    // Animate line\n    const totalLength = linePath.node().getTotalLength();\n    linePath.attr('stroke-dasharray', totalLength + ' ' + totalLength).attr('stroke-dashoffset', totalLength).transition().delay(1000).duration(1500).attr('stroke-dashoffset', 0);\n\n    // Add dots for the line\n    const dots = g.selectAll('.dot').data(barData).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.region) + x.bandwidth() / 2).attr('cy', d => y2(d.metricValue)).attr('r', 0).attr('fill', '#ff7f0e');\n\n    // Animate dots\n    dots.transition().delay(2500).duration(500).attr('r', 5);\n\n    // Add hover effects to dots\n    dots.on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(200).attr('r', 8);\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      tooltip.html(`\n        <strong>${d.region}</strong><br/>\n        ${metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d.metricValue)}\n      `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).transition().duration(200).attr('r', 5);\n      tooltip.transition().duration(500).style('opacity', 0);\n    });\n  };\n  const actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-type-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-type-btn ${chartType === 'radar' ? 'active' : ''}`,\n        onClick: () => setChartType('radar'),\n        title: \"Radar Chart\",\n        children: \"\\uD83D\\uDCCA Radar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-type-btn ${chartType === 'pie' ? 'active' : ''}`,\n        onClick: () => setChartType('pie'),\n        title: \"Pie Chart\",\n        children: \"\\u26AA Pie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-type-btn ${chartType === 'bar' ? 'active' : ''}`,\n        onClick: () => setChartType('bar'),\n        title: \"Bar Chart\",\n        children: \"\\uD83D\\uDCCA Bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"metric-select\",\n        value: metric,\n        onChange: e => setMetric(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"intensity\",\n          children: \"Intensity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"likelihood\",\n          children: \"Likelihood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"relevance\",\n          children: \"Relevance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 749,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-btn\",\n      onClick: () => {\n        setLoading(true);\n        api.getRegions().then(data => {\n          setData(data);\n          setLoading(false);\n        }).catch(err => {\n          setError('Failed to reload data');\n          setLoading(false);\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"refresh-icon\",\n        children: \"\\u21BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 765,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 752,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 717,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    title: \"Region Distribution\",\n    actionButtons: actionButtons,\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n      message: \"Loading region data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 773,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n      message: error,\n      icon: \"\\u26A0\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this) : !data || data.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n      message: \"No region data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"chart-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 780,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: legendRef,\n        className: \"chart-legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 779,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 771,\n    columnNumber: 5\n  }, this);\n};\n_s(RegionChart, \"ZGCCChYfbaYX9dC75hmivqSO8vc=\");\n_c = RegionChart;\nexport default RegionChart;\nvar _c;\n$RefreshReg$(_c, \"RegionChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","api","CardContainer","Loader","NoDataMessage","createTooltip","formatNumber","debounce","jsxDEV","_jsxDEV","RegionChart","_s","data","setData","loading","setLoading","error","setError","chartType","setChartType","metric","setMetric","svgRef","legendRef","containerRef","tooltipRef","fetchRegionData","regionData","getRegions","metricsData","getMetrics","enhancedData","map","region","metricData","find","m","metricValue","value","err","console","length","renderChart","current","handleResize","window","addEventListener","removeEventListener","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","height","processedData","filter","d","count","sort","a","b","svg","attr","append","legend","renderRadarChart","renderPieChart","renderBarChart","tooltip","radarData","slice","centerX","centerY","radius","Math","min","features","featureLabels","charAt","toUpperCase","angleSlice","PI","rScale","scaleLinear","domain","max","range","levels","gridColor","j","levelFactor","style","forEach","feature","i","angle","lineX","cos","lineY","sin","text","colorScale","scaleOrdinal","schemeCategory10","getPathCoordinates","dataPoint","maxCount","maxMetricValue","normalizedValue","pointRadius","x","y","pathPoints","color","radarLine","line","curve","curveLinearClosed","datum","getTotalLength","transition","duration","ease","easeLinear","enter","delay","on","event","point","featureLabel","html","pageX","pageY","legendItem","_","g","pieData","total","reduce","sum","pie","arc","innerRadius","outerRadius","outerArc","slices","each","_current","attrTween","interpolate","startAngle","endAngle","t","percentage","toFixed","centroid","pos","midAngle","item","index","barData","scaleBand","padding","nice","y2","xAxis","call","axisBottom","yAxis","axisLeft","ticks","tickFormat","y2Axis","axisRight","tickSize","bars","bandwidth","curveMonotoneX","linePath","totalLength","node","dots","actionButtons","className","children","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","then","catch","message","icon","ref","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/RegionChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { createTooltip, formatNumber, debounce } from '../../utils/helpers';\r\n\r\nconst RegionChart = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [chartType, setChartType] = useState('radar'); // 'radar', 'bar', or 'pie'\r\n  const [metric, setMetric] = useState('intensity'); // 'intensity', 'likelihood', or 'relevance'\r\n  const svgRef = useRef(null);\r\n  const legendRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchRegionData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const regionData = await api.getRegions();\r\n        const metricsData = await api.getMetrics('region', metric);\r\n        \r\n        // Merge region data with metrics\r\n        const enhancedData = regionData.map(region => {\r\n          const metricData = metricsData.find(m => m.region === region.region) || {};\r\n          return {\r\n            ...region,\r\n            metricValue: metricData.value || 0\r\n          };\r\n        });\r\n        \r\n        setData(enhancedData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching region data:', err);\r\n        setError('Failed to load region data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchRegionData();\r\n  }, [metric]);\r\n  \r\n  useEffect(() => {\r\n    if (data && data.length > 0 && !loading) {\r\n      renderChart();\r\n      \r\n      // Create tooltip if not already created\r\n      if (!tooltipRef.current) {\r\n        tooltipRef.current = createTooltip(d3);\r\n      }\r\n      \r\n      // Add resize listener\r\n      const handleResize = debounce(() => {\r\n        renderChart();\r\n      }, 300);\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [data, loading, chartType, metric]);\r\n  \r\n  const renderChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n    \r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n    d3.select(legendRef.current).selectAll('*').remove();\r\n    \r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 20, right: 30, bottom: chartType === 'bar' ? 100 : 30, left: chartType === 'bar' ? 60 : 30 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = 400 - margin.top - margin.bottom;\r\n    \r\n    // Process and sort data\r\n    const processedData = [...data]\r\n      .filter(d => d.region && d.region !== 'Unknown' && d.count > 0)\r\n      .sort((a, b) => b.count - a.count);\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n    \r\n    // Create legend container\r\n    const legend = d3.select(legendRef.current)\r\n      .attr('class', 'chart-legend');\r\n    \r\n    if (chartType === 'radar') {\r\n      renderRadarChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\r\n    } else if (chartType === 'pie') {\r\n      renderPieChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\r\n    } else {\r\n      renderBarChart(svg, processedData, width, height, margin, tooltipRef.current, legend);\r\n    }\r\n  };\r\n  \r\n  const renderRadarChart = (svg, data, width, height, margin, tooltip, legend) => {\r\n    // Limit to top 8 regions for radar chart\r\n    const radarData = data.slice(0, 8);\r\n    \r\n    // Calculate center and radius\r\n    const centerX = width / 2;\r\n    const centerY = height / 2;\r\n    const radius = Math.min(centerX, centerY) * 0.8;\r\n    \r\n    // Features for radar chart (metrics)\r\n    const features = ['count', 'metricValue'];\r\n    const featureLabels = {\r\n      'count': 'Event Count',\r\n      'metricValue': metric.charAt(0).toUpperCase() + metric.slice(1)\r\n    };\r\n    \r\n    // Angle for each feature\r\n    const angleSlice = (Math.PI * 2) / features.length;\r\n    \r\n    // Scale for features\r\n    const rScale = d3.scaleLinear()\r\n      .domain([0, d3.max(radarData, d => Math.max(\r\n        d.count / d3.max(radarData, d => d.count),\r\n        d.metricValue / d3.max(radarData, d => d.metricValue)\r\n      ))])\r\n      .range([0, radius]);\r\n    \r\n    // Create circular grid\r\n    const levels = 5;\r\n    const gridColor = 'rgba(200, 200, 200, 0.2)';\r\n    \r\n    // Draw circular grid\r\n    for (let j = 0; j < levels; j++) {\r\n      const levelFactor = radius * ((j + 1) / levels);\r\n      \r\n      // Draw circular levels\r\n      svg.append('circle')\r\n        .attr('cx', centerX)\r\n        .attr('cy', centerY)\r\n        .attr('r', levelFactor)\r\n        .attr('class', 'radar-grid')\r\n        .style('fill', 'none')\r\n        .style('stroke', gridColor)\r\n        .style('stroke-dasharray', '3,3')\r\n        .style('stroke-width', '1px');\r\n    }\r\n    \r\n    // Draw axis lines\r\n    features.forEach((feature, i) => {\r\n      const angle = angleSlice * i - Math.PI / 2;\r\n      const lineX = centerX + radius * Math.cos(angle);\r\n      const lineY = centerY + radius * Math.sin(angle);\r\n      \r\n      svg.append('line')\r\n        .attr('x1', centerX)\r\n        .attr('y1', centerY)\r\n        .attr('x2', lineX)\r\n        .attr('y2', lineY)\r\n        .attr('class', 'radar-axis')\r\n        .style('stroke', gridColor)\r\n        .style('stroke-width', '1px');\r\n      \r\n      // Add axis labels\r\n      svg.append('text')\r\n        .attr('class', 'radar-label')\r\n        .attr('x', centerX + (radius + 20) * Math.cos(angle))\r\n        .attr('y', centerY + (radius + 20) * Math.sin(angle))\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dominant-baseline', 'middle')\r\n        .style('font-size', '12px')\r\n        .style('fill', 'var(--text-color)')\r\n        .text(featureLabels[feature]);\r\n    });\r\n    \r\n    // Color scale\r\n    const colorScale = d3.scaleOrdinal()\r\n      .domain(radarData.map(d => d.region))\r\n      .range(d3.schemeCategory10);\r\n    \r\n    // Function to calculate path points\r\n    const getPathCoordinates = (dataPoint) => {\r\n      const maxCount = d3.max(radarData, d => d.count);\r\n      const maxMetricValue = d3.max(radarData, d => d.metricValue);\r\n      \r\n      return features.map((feature, i) => {\r\n        const angle = angleSlice * i - Math.PI / 2;\r\n        \r\n        // Normalize the value based on the feature\r\n        let normalizedValue;\r\n        if (feature === 'count') {\r\n          normalizedValue = dataPoint.count / maxCount;\r\n        } else if (feature === 'metricValue') {\r\n          normalizedValue = dataPoint.metricValue / maxMetricValue;\r\n        }\r\n        \r\n        const pointRadius = rScale(normalizedValue);\r\n        \r\n        return {\r\n          x: centerX + pointRadius * Math.cos(angle),\r\n          y: centerY + pointRadius * Math.sin(angle),\r\n          value: feature === 'count' ? dataPoint.count : dataPoint.metricValue,\r\n          feature\r\n        };\r\n      });\r\n    };\r\n    \r\n    // Draw radar charts for each region\r\n    radarData.forEach((d, i) => {\r\n      const pathPoints = getPathCoordinates(d);\r\n      const color = colorScale(d.region);\r\n      \r\n      // Draw path\r\n      const radarLine = d3.line()\r\n        .x(d => d.x)\r\n        .y(d => d.y)\r\n        .curve(d3.curveLinearClosed);\r\n      \r\n      // Create radar path with animation\r\n      svg.append('path')\r\n        .datum(pathPoints)\r\n        .attr('class', 'radar-path')\r\n        .attr('d', radarLine)\r\n        .style('fill', color)\r\n        .style('fill-opacity', 0.1)\r\n        .style('stroke', color)\r\n        .style('stroke-width', 2)\r\n        .style('stroke-opacity', 0.8)\r\n        .style('stroke-dasharray', function() { \r\n          return this.getTotalLength() + \" \" + this.getTotalLength(); \r\n        })\r\n        .style('stroke-dashoffset', function() { \r\n          return this.getTotalLength(); \r\n        })\r\n        .transition()\r\n        .duration(1000)\r\n        .ease(d3.easeLinear)\r\n        .style('stroke-dashoffset', 0);\r\n      \r\n      // Add dots at each point\r\n      svg.selectAll(`.radar-point-${i}`)\r\n        .data(pathPoints)\r\n        .enter()\r\n        .append('circle')\r\n        .attr('class', `radar-point-${i}`)\r\n        .attr('cx', d => d.x)\r\n        .attr('cy', d => d.y)\r\n        .attr('r', 0)\r\n        .style('fill', color)\r\n        .transition()\r\n        .delay(1000)\r\n        .duration(500)\r\n        .attr('r', 5);\r\n        \r\n      // Add hover effects and tooltip to dots\r\n      svg.selectAll(`.radar-point-${i}`)\r\n        .on('mouseover', function(event, point) {\r\n          d3.select(this)\r\n            .transition()\r\n            .duration(200)\r\n            .attr('r', 8);\r\n          \r\n          const featureLabel = featureLabels[point.feature];\r\n          \r\n          tooltip.transition()\r\n            .duration(200)\r\n            .style('opacity', 0.9);\r\n          tooltip.html(`<strong>${d.region}</strong><br>${featureLabel}: ${formatNumber(point.value)}`)\r\n            .style('left', (event.pageX + 10) + 'px')\r\n            .style('top', (event.pageY - 28) + 'px');\r\n        })\r\n        .on('mouseout', function() {\r\n          d3.select(this)\r\n            .transition()\r\n            .duration(200)\r\n            .attr('r', 5);\r\n          \r\n          tooltip.transition()\r\n            .duration(500)\r\n            .style('opacity', 0);\r\n        });\r\n    });\r\n    \r\n    // Add legend\r\n    radarData.forEach((d, i) => {\r\n      const color = colorScale(d.region);\r\n      \r\n      const legendItem = legend.append('div')\r\n        .attr('class', 'legend-item')\r\n        .style('cursor', 'pointer')\r\n        .on('mouseover', function() {\r\n          // Highlight the corresponding radar path\r\n          svg.selectAll('.radar-path')\r\n            .style('opacity', 0.3);\r\n          \r\n          svg.selectAll(`.radar-point-${i}`)\r\n            .style('opacity', 0.3);\r\n          \r\n          svg.selectAll('.radar-path')\r\n            .filter((_, j) => j === i)\r\n            .style('opacity', 1)\r\n            .style('stroke-width', 4);\r\n          \r\n          svg.selectAll(`.radar-point-${i}`)\r\n            .style('opacity', 1)\r\n            .attr('r', 8);\r\n        })\r\n        .on('mouseout', function() {\r\n          svg.selectAll('.radar-path')\r\n            .style('opacity', 1)\r\n            .style('stroke-width', 2);\r\n          \r\n          svg.selectAll(`.radar-point-${i}`)\r\n            .style('opacity', 1)\r\n            .attr('r', 5);\r\n        });\r\n      \r\n      legendItem.append('div')\r\n        .attr('class', 'legend-color')\r\n        .style('background-color', color);\r\n      \r\n      legendItem.append('div')\r\n        .attr('class', 'legend-text')\r\n        .text(d.region);\r\n    });\r\n  };\r\n  \r\n  const renderPieChart = (svg, data, width, height, margin, tooltip, legend) => {\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${width / 2 + margin.left}, ${height / 2 + margin.top})`);\r\n    \r\n    // Limit to top 10 regions for pie chart\r\n    const pieData = data.slice(0, 10);\r\n    \r\n    // Calculate total for percentages\r\n    const total = pieData.reduce((sum, d) => sum + d.count, 0);\r\n    \r\n    // Create color scale\r\n    const color = d3.scaleOrdinal()\r\n      .domain(pieData.map(d => d.region))\r\n      .range(d3.schemeCategory10);\r\n    \r\n    // Create pie generator\r\n    const pie = d3.pie()\r\n      .value(d => d.count)\r\n      .sort(null);\r\n    \r\n    // Create arc generator\r\n    const radius = Math.min(width, height) / 2;\r\n    const arc = d3.arc()\r\n      .innerRadius(0)\r\n      .outerRadius(radius * 0.8);\r\n    \r\n    // Create outer arc for labels\r\n    const outerArc = d3.arc()\r\n      .innerRadius(radius * 0.9)\r\n      .outerRadius(radius * 0.9);\r\n    \r\n    // Draw pie slices with animation\r\n    const slices = g.selectAll('path')\r\n      .data(pie(pieData))\r\n      .enter()\r\n      .append('path')\r\n      .attr('d', arc)\r\n      .attr('fill', d => color(d.data.region))\r\n      .attr('class', 'pie-slice')\r\n      .attr('stroke', 'white')\r\n      .attr('stroke-width', 2)\r\n      .style('opacity', 0.8)\r\n      .each(function(d) { this._current = d; }); // Store initial angles\r\n    \r\n    // Add slice transitions\r\n    slices.transition()\r\n      .duration(1000)\r\n      .attrTween('d', function(d) {\r\n        const interpolate = d3.interpolate({startAngle: 0, endAngle: 0}, d);\r\n        return function(t) {\r\n          return arc(interpolate(t));\r\n        };\r\n      });\r\n    \r\n    // Add hover effects\r\n    slices.on('mouseover', function(event, d) {\r\n      const percentage = (d.data.count / total * 100).toFixed(1);\r\n      \r\n      // Highlight slice\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr('opacity', 1)\r\n        .attr('stroke-width', 3)\r\n        .attr('transform', function() {\r\n          const centroid = arc.centroid(d);\r\n          return `translate(${centroid[0] * 0.1}, ${centroid[1] * 0.1})`;\r\n        });\r\n      \r\n      // Show tooltip\r\n      tooltip.transition()\r\n        .duration(200)\r\n        .style('opacity', 0.9);\r\n      tooltip.html(`<strong>${d.data.region}</strong><br/>\r\n                   Count: ${formatNumber(d.data.count)}<br/>\r\n                   Percentage: ${percentage}%<br/>\r\n                   ${metric}: ${formatNumber(d.data.metricValue)}`)\r\n        .style('left', (event.pageX + 10) + 'px')\r\n        .style('top', (event.pageY - 28) + 'px');\r\n    })\r\n    .on('mouseout', function() {\r\n      // Reset slice\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr('opacity', 0.8)\r\n        .attr('stroke-width', 2)\r\n        .attr('transform', 'translate(0, 0)');\r\n      \r\n      // Hide tooltip\r\n      tooltip.transition()\r\n        .duration(500)\r\n        .style('opacity', 0);\r\n    });\r\n    \r\n    // Add percentage labels\r\n    g.selectAll('text')\r\n      .data(pie(pieData))\r\n      .enter()\r\n      .append('text')\r\n      .attr('transform', d => {\r\n        const pos = outerArc.centroid(d);\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.95 * (midAngle < Math.PI ? 1 : -1);\r\n        return `translate(${pos})`;\r\n      })\r\n      .attr('dy', '.35em')\r\n      .style('text-anchor', d => {\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        return midAngle < Math.PI ? 'start' : 'end';\r\n      })\r\n      .style('font-size', '10px')\r\n      .style('opacity', 0)\r\n      .text(d => {\r\n        const percentage = (d.data.count / total * 100).toFixed(1);\r\n        return percentage > 5 ? `${percentage}%` : '';\r\n      })\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(500)\r\n      .style('opacity', 1);\r\n    \r\n    // Add polylines to labels\r\n    g.selectAll('polyline')\r\n      .data(pie(pieData))\r\n      .enter()\r\n      .append('polyline')\r\n      .style('opacity', 0)\r\n      .style('stroke', 'var(--text-color)')\r\n      .style('fill', 'none')\r\n      .style('stroke-width', 1)\r\n      .attr('points', d => {\r\n        const pos = outerArc.centroid(d);\r\n        const midAngle = d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        pos[0] = radius * 0.95 * (midAngle < Math.PI ? 1 : -1);\r\n        const percentage = (d.data.count / total * 100).toFixed(1);\r\n        return percentage > 5 ? [arc.centroid(d), outerArc.centroid(d), pos] : null;\r\n      })\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(500)\r\n      .style('opacity', 0.4);\r\n    \r\n    // Create legend\r\n    pieData.forEach((item, index) => {\r\n      const percentage = (item.count / total * 100).toFixed(1);\r\n      \r\n      const legendItem = legend.append('div')\r\n        .attr('class', 'legend-item')\r\n        .style('cursor', 'pointer')\r\n        .on('mouseover', function() {\r\n          // Highlight the corresponding pie slice\r\n          slices.filter((d, i) => i !== index)\r\n            .transition()\r\n            .duration(200)\r\n            .style('opacity', 0.3);\r\n          \r\n          slices.filter((d, i) => i === index)\r\n            .transition()\r\n            .duration(200)\r\n            .style('opacity', 1)\r\n            .attr('transform', function(d) {\r\n              const centroid = arc.centroid(d);\r\n              return `translate(${centroid[0] * 0.1}, ${centroid[1] * 0.1})`;\r\n            });\r\n        })\r\n        .on('mouseout', function() {\r\n          slices.transition()\r\n            .duration(200)\r\n            .style('opacity', 0.8)\r\n            .attr('transform', 'translate(0, 0)');\r\n        });\r\n      \r\n      legendItem.append('div')\r\n        .attr('class', 'legend-color')\r\n        .style('background-color', color(item.region));\r\n      \r\n      legendItem.append('div')\r\n        .attr('class', 'legend-text')\r\n        .text(`${item.region} (${percentage}%)`);\r\n    });\r\n  };\r\n  \r\n  const renderBarChart = (svg, data, width, height, margin, tooltip, legend) => {\r\n    const g = svg.append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Limit to top 15 regions for bar chart\r\n    const barData = data.slice(0, 15);\r\n    \r\n    // Create scales\r\n    const x = d3.scaleBand()\r\n      .domain(barData.map(d => d.region))\r\n      .range([0, width])\r\n      .padding(0.2);\r\n    \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(barData, d => d.count) * 1.1])\r\n      .nice()\r\n      .range([height, 0]);\r\n    \r\n    // Calculate max value for the secondary metric\r\n    const maxMetricValue = d3.max(barData, d => d.metricValue);\r\n    \r\n    // Create secondary y-scale for metric value\r\n    const y2 = d3.scaleLinear()\r\n      .domain([0, maxMetricValue * 1.1])\r\n      .nice()\r\n      .range([height, 0]);\r\n    \r\n    // Create color scale for bars\r\n    const colorScale = d3.scaleLinear()\r\n      .domain([0, d3.max(barData, d => d.count)])\r\n      .range(['#4682B4', '#1E3F66']);\r\n    \r\n    // Create axes\r\n    const xAxis = g.append('g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', `translate(0, ${height})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .attr('transform', 'rotate(-45)')\r\n      .attr('text-anchor', 'end')\r\n      .attr('dx', '-.8em')\r\n      .attr('dy', '.15em');\r\n    \r\n    const yAxis = g.append('g')\r\n      .attr('class', 'axis')\r\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\r\n    \r\n    // Create secondary y-axis for metric\r\n    const y2Axis = g.append('g')\r\n      .attr('class', 'axis y2-axis')\r\n      .attr('transform', `translate(${width}, 0)`)\r\n      .call(d3.axisRight(y2).ticks(5).tickFormat(d => formatNumber(d)));\r\n    \r\n    // Add labels\r\n    g.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('dy', '1em')\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Events');\r\n    \r\n    g.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', width + margin.right - 15)\r\n      .attr('x', -height / 2)\r\n      .attr('dy', '1em')\r\n      .style('text-anchor', 'middle')\r\n      .text(metric.charAt(0).toUpperCase() + metric.slice(1));\r\n    \r\n    // Create grid\r\n    g.append('g')\r\n      .attr('class', 'grid')\r\n      .call(d3.axisLeft(y)\r\n        .tickSize(-width)\r\n        .tickFormat('')\r\n      );\r\n    \r\n    // Draw bars with animation\r\n    const bars = g.selectAll('.bar')\r\n      .data(barData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => x(d.region))\r\n      .attr('width', x.bandwidth())\r\n      .attr('y', height)\r\n      .attr('height', 0)\r\n      .attr('fill', d => colorScale(d.count))\r\n      .on('mouseover', function(event, d) {\r\n        // Highlight bar\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('opacity', 0.7)\r\n          .attr('y', y(d.count) - 5)\r\n          .attr('height', height - y(d.count) + 5);\r\n        \r\n        // Show tooltip\r\n        tooltip.transition()\r\n          .duration(200)\r\n          .style('opacity', 0.9);\r\n        tooltip.html(`\r\n          <strong>${d.region}</strong><br/>\r\n          Count: ${formatNumber(d.count)}<br/>\r\n          ${metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d.metricValue)}\r\n        `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function(event, d) {\r\n        // Reset bar\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('opacity', 1)\r\n          .attr('y', y(d.count))\r\n          .attr('height', height - y(d.count));\r\n        \r\n        // Hide tooltip\r\n        tooltip.transition()\r\n          .duration(500)\r\n          .style('opacity', 0);\r\n      });\r\n    \r\n    // Animate bars\r\n    bars.transition()\r\n      .duration(1000)\r\n      .attr('y', d => y(d.count))\r\n      .attr('height', d => height - y(d.count));\r\n    \r\n    // Add line for the metric value\r\n    const line = d3.line()\r\n      .x(d => x(d.region) + x.bandwidth() / 2)\r\n      .y(d => y2(d.metricValue))\r\n      .curve(d3.curveMonotoneX);\r\n    \r\n    const linePath = g.append('path')\r\n      .datum(barData)\r\n      .attr('class', 'metric-line')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#ff7f0e')\r\n      .attr('stroke-width', 3)\r\n      .attr('d', line);\r\n    \r\n    // Animate line\r\n    const totalLength = linePath.node().getTotalLength();\r\n    linePath\r\n      .attr('stroke-dasharray', totalLength + ' ' + totalLength)\r\n      .attr('stroke-dashoffset', totalLength)\r\n      .transition()\r\n      .delay(1000)\r\n      .duration(1500)\r\n      .attr('stroke-dashoffset', 0);\r\n    \r\n    // Add dots for the line\r\n    const dots = g.selectAll('.dot')\r\n      .data(barData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => x(d.region) + x.bandwidth() / 2)\r\n      .attr('cy', d => y2(d.metricValue))\r\n      .attr('r', 0)\r\n      .attr('fill', '#ff7f0e');\r\n    \r\n    // Animate dots\r\n    dots.transition()\r\n      .delay(2500)\r\n      .duration(500)\r\n      .attr('r', 5);\r\n    \r\n    // Add hover effects to dots\r\n    dots.on('mouseover', function(event, d) {\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr('r', 8);\r\n      \r\n      tooltip.transition()\r\n        .duration(200)\r\n        .style('opacity', 0.9);\r\n      tooltip.html(`\r\n        <strong>${d.region}</strong><br/>\r\n        ${metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d.metricValue)}\r\n      `)\r\n        .style('left', (event.pageX + 10) + 'px')\r\n        .style('top', (event.pageY - 28) + 'px');\r\n    })\r\n    .on('mouseout', function() {\r\n      d3.select(this)\r\n        .transition()\r\n        .duration(200)\r\n        .attr('r', 5);\r\n      \r\n      tooltip.transition()\r\n        .duration(500)\r\n        .style('opacity', 0);\r\n    });\r\n  };\r\n  \r\n  const actionButtons = (\r\n    <div className=\"chart-actions\">\r\n      <div className=\"chart-type-buttons\">\r\n        <button \r\n          className={`chart-type-btn ${chartType === 'radar' ? 'active' : ''}`} \r\n          onClick={() => setChartType('radar')}\r\n          title=\"Radar Chart\"\r\n        >\r\n          📊 Radar\r\n        </button>\r\n        <button \r\n          className={`chart-type-btn ${chartType === 'pie' ? 'active' : ''}`} \r\n          onClick={() => setChartType('pie')}\r\n          title=\"Pie Chart\"\r\n        >\r\n          ⚪ Pie\r\n        </button>\r\n        <button \r\n          className={`chart-type-btn ${chartType === 'bar' ? 'active' : ''}`} \r\n          onClick={() => setChartType('bar')}\r\n          title=\"Bar Chart\"\r\n        >\r\n          📊 Bar\r\n        </button>\r\n      </div>\r\n      <div className=\"metric-selector\">\r\n        <select\r\n          className=\"metric-select\"\r\n          value={metric}\r\n          onChange={(e) => setMetric(e.target.value)}\r\n        >\r\n          <option value=\"intensity\">Intensity</option>\r\n          <option value=\"likelihood\">Likelihood</option>\r\n          <option value=\"relevance\">Relevance</option>\r\n        </select>\r\n      </div>\r\n      <button \r\n        className=\"refresh-btn\" \r\n        onClick={() => {\r\n          setLoading(true);\r\n          api.getRegions().then(data => {\r\n            setData(data);\r\n            setLoading(false);\r\n          }).catch(err => {\r\n            setError('Failed to reload data');\r\n            setLoading(false);\r\n          });\r\n        }}\r\n      >\r\n        <span className=\"refresh-icon\">↻</span>\r\n      </button>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <CardContainer title=\"Region Distribution\" actionButtons={actionButtons}>\r\n      {loading ? (\r\n        <Loader message=\"Loading region data...\" />\r\n      ) : error ? (\r\n        <NoDataMessage message={error} icon=\"⚠️\" />\r\n      ) : !data || data.length === 0 ? (\r\n        <NoDataMessage message=\"No region data available\" />\r\n      ) : (\r\n        <div ref={containerRef} className=\"chart-container\">\r\n          <svg ref={svgRef} className=\"chart-svg\"></svg>\r\n          <div ref={legendRef} className=\"chart-legend\"></div>\r\n        </div>\r\n      )}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default RegionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}