{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\RegionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { createTooltip, formatNumber } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegionChart = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [metric, setMetric] = useState('count'); // 'count', 'intensity', 'likelihood', 'relevance'\n  const [filteredData, setFilteredData] = useState(null);\n  const [regionFilter, setRegionFilter] = useState(''); // Filter by region\n  const [sourceFilter, setSourceFilter] = useState(''); // Filter by source\n  const [regions, setRegions] = useState([]); // Available regions for filtering\n  const [sources, setSources] = useState([]); // Available sources for filtering\n  const [selectedRegionInfo, setSelectedRegionInfo] = useState(null); // To display sources and topics\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Fetch regions and sources for filter dropdowns\n  useEffect(() => {\n    const fetchFilters = async () => {\n      try {\n        const filtersData = await api.getFilters();\n        setRegions(filtersData.regions || []);\n        setSources(filtersData.sources || []);\n      } catch (err) {\n        console.error('Error fetching filter options:', err);\n      }\n    };\n    fetchFilters();\n  }, []);\n\n  // Fetch region data based on filters\n  useEffect(() => {\n    const fetchRegionData = async () => {\n      try {\n        setLoading(true);\n\n        // Build filter object\n        const filters = {};\n        if (regionFilter) filters.region = regionFilter;\n        if (sourceFilter) filters.source = sourceFilter;\n        const regionData = await api.getRegions(filters);\n        setData(regionData);\n\n        // Set filtered data\n        if (regionFilter) {\n          // Find the selected region data to display sources and topics\n          const selectedRegion = regionData.find(r => r.region === regionFilter);\n          if (selectedRegion) {\n            setSelectedRegionInfo(selectedRegion);\n          }\n          setFilteredData(regionData.filter(d => d.region === regionFilter));\n        } else {\n          setFilteredData(regionData);\n          setSelectedRegionInfo(null);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching region data:', err);\n        setError('Failed to load region data');\n        setLoading(false);\n      }\n    };\n    fetchRegionData();\n  }, [regionFilter, sourceFilter]);\n  useEffect(() => {\n    if (filteredData && filteredData.length > 0 && !loading) {\n      renderChart();\n    }\n  }, [filteredData, loading, metric]);\n  useEffect(() => {\n    // Add resize listener\n    const handleResize = () => {\n      if (filteredData && filteredData.length > 0 && !loading) {\n        renderChart();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [filteredData, loading, metric]);\n  const renderChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions based on container width\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 30,\n      right: 20,\n      bottom: 80,\n      left: 60\n    };\n\n    // Ensure width is never negative\n    const width = Math.max(containerWidth - margin.left - margin.right, 10);\n    const height = 400 - margin.top - margin.bottom;\n\n    // Adjust the SVG container size\n    d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).attr('viewBox', `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`).attr('preserveAspectRatio', 'xMidYMid meet');\n\n    // Process and sort data\n    const processedData = [...filteredData].filter(d => d.region && d.region !== 'Unknown' && d[metric] > 0).sort((a, b) => b[metric] - a[metric]);\n\n    // If there are too many bars for the available width, limit the number displayed\n    // or adjust the display approach\n    const maxBarsToDisplay = Math.max(5, Math.floor(width / 40)); // At least 5 bars, or one bar per 40px\n    const displayData = processedData.length > maxBarsToDisplay && width < 768 ? processedData.slice(0, maxBarsToDisplay) : processedData;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).select('g').empty() ? d3.select(svgRef.current).append('g').attr('transform', `translate(${margin.left},${margin.top})`) : d3.select(svgRef.current).select('g');\n\n    // Ensure the transform is set correctly\n    svg.attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip\n    const tooltip = createTooltip(d3);\n\n    // Create scales with dynamic bandwidth based on available space\n    const x = d3.scaleBand().domain(displayData.map(d => d.region)).range([0, width]).padding(Math.min(0.3, Math.max(0.1, 0.3 * (width / (displayData.length * 50)))));\n    const y = d3.scaleLinear().domain([0, d3.max(displayData, d => d[metric]) * 1.1]).nice().range([height, 0]);\n\n    // Create gradient for bars\n    const defs = svg.append('defs');\n    const gradient = defs.append('linearGradient').attr('id', 'region-bar-gradient').attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('y1', height).attr('x2', 0).attr('y2', 0);\n    gradient.append('stop').attr('offset', '0%').attr('stop-color', '#3182bd');\n    gradient.append('stop').attr('offset', '100%').attr('stop-color', '#6baed6');\n\n    // Add X axis\n    const xAxis = svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`);\n\n    // Conditional rendering of X axis labels based on space\n    if (displayData.length <= maxBarsToDisplay || width >= 768) {\n      xAxis.call(d3.axisBottom(x).tickSize(0).tickFormat(d => d.length > 10 ? d.substring(0, 10) + '...' : d));\n\n      // Rotate labels if needed\n      xAxis.selectAll('text').attr('transform', 'rotate(-45)').style('text-anchor', 'end').attr('dx', '-0.8em').attr('dy', '0.15em').style('font-size', '10px');\n    } else {\n      // For small screens with many bars, don't show labels\n      xAxis.call(d3.axisBottom(x).tickSize(0).tickFormat(''));\n    }\n\n    // Add only a single line for X axis\n    xAxis.select('.domain').attr('stroke', '#ccc');\n\n    // Add Y axis with only min and max values\n    const yAxisValues = [0, d3.max(displayData, d => d[metric])];\n    const yAxis = svg.append('g').attr('class', 'axis y-axis').call(d3.axisLeft(y).tickValues(yAxisValues).tickFormat(d => formatNumber(d)));\n\n    // Add Y axis label\n    svg.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('dy', '1em').attr('text-anchor', 'middle').style('font-size', '12px').text(metric === 'count' ? 'Number of Events' : metric.charAt(0).toUpperCase() + metric.slice(1));\n\n    // Create horizontal bars with rounded corners\n    const bars = svg.selectAll('.bar').data(displayData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.region)).attr('width', x.bandwidth()).attr('y', height).attr('height', 0).attr('rx', 4).attr('ry', 4).attr('fill', 'url(#region-bar-gradient)').on('mouseover', function (event, d) {\n      // Highlight bar\n      d3.select(this).transition().duration(300).attr('opacity', 0.8).attr('stroke', '#2c3e50').attr('stroke-width', 2);\n\n      // Show tooltip with region name, value, and sources/topics\n      tooltip.transition().duration(200).style('opacity', 0.9);\n      let tooltipContent = `\n          <strong>${d.region}</strong><br/>\n          ${metric === 'count' ? 'Count' : metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d[metric])}\n        `;\n      tooltip.html(tooltipContent).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n\n      // Show region name temporarily below the bar\n      svg.append('text').attr('class', 'temp-region-label').attr('x', x(d.region) + x.bandwidth() / 2).attr('y', height + 20).attr('text-anchor', 'middle').attr('font-size', '12px').text(d.region);\n    }).on('mouseout', function () {\n      // Restore bar appearance\n      d3.select(this).transition().duration(300).attr('opacity', 1).attr('stroke', 'none');\n\n      // Hide tooltip\n      tooltip.transition().duration(500).style('opacity', 0);\n\n      // Remove temporary region label\n      svg.selectAll('.temp-region-label').remove();\n    }).on('click', function (event, d) {\n      // Show region name temporarily below the bar (persists until another bar is clicked)\n      svg.selectAll('.clicked-region-label').remove();\n      svg.append('text').attr('class', 'clicked-region-label').attr('x', x(d.region) + x.bandwidth() / 2).attr('y', height + 20).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').text(d.region);\n\n      // Set selected region to display info\n      setSelectedRegionInfo(d);\n    });\n\n    // Animate bars on load\n    bars.transition().duration(800).delay((d, i) => i * 50).attr('y', d => y(d[metric])).attr('height', d => height - y(d[metric]));\n\n    // Add value labels on top of bars (only if enough space)\n    if (x.bandwidth() > 30) {\n      svg.selectAll('.bar-label').data(displayData).enter().append('text').attr('class', 'bar-label').attr('x', d => x(d.region) + x.bandwidth() / 2).attr('y', d => y(d[metric]) - 5).attr('text-anchor', 'middle').attr('font-size', '10px').attr('opacity', 0).text(d => formatNumber(d[metric])).transition().duration(800).delay((d, i) => 800 + i * 50).attr('opacity', 1);\n    }\n\n    // If we're showing a truncated dataset, add an indicator\n    if (processedData.length > displayData.length) {\n      svg.append('text').attr('class', 'truncation-note').attr('x', width).attr('y', height + 60).attr('text-anchor', 'end').attr('font-size', '11px').attr('fill', '#666').text(`Showing top ${displayData.length} of ${processedData.length} regions. Resize for more.`);\n    }\n  };\n  const handleMetricChange = newMetric => {\n    // Animate transition between metrics\n    d3.selectAll('.bar').transition().duration(500).attr('y', svgRef.current.clientHeight).attr('height', 0).on('end', () => {\n      setMetric(newMetric);\n    });\n  };\n\n  // Reset filters\n  const handleReset = () => {\n    setRegionFilter('');\n    setSourceFilter('');\n    setSelectedRegionInfo(null);\n  };\n\n  // Render source and topic info when a region is selected\n  const renderRegionInfo = () => {\n    if (!selectedRegionInfo) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"region-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Information for \", selectedRegionInfo.region]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 9\n      }, this), selectedRegionInfo.sources && selectedRegionInfo.sources.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Sources:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag-container\",\n          children: selectedRegionInfo.sources.map((source, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-tag source-tag\",\n            onClick: () => setSourceFilter(source),\n            title: `Filter by ${source}`,\n            style: {\n              cursor: 'pointer'\n            },\n            children: source\n          }, `source-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 11\n      }, this), selectedRegionInfo.topics && selectedRegionInfo.topics.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Topics:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tag-container\",\n          children: selectedRegionInfo.topics.map((topic, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"info-tag topic-tag\",\n            children: topic\n          }, `topic-${idx}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Generate title with active filters\n  const generateChartTitle = () => {\n    let title = \"Region Distribution\";\n    const filters = [];\n    if (filters.length > 0) {\n      title += ` - ${filters.join(', ')}`;\n    }\n    return title;\n  };\n  const actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-select\",\n        value: regionFilter,\n        onChange: e => setRegionFilter(e.target.value),\n        title: \"Filter by Region\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), regions.map((region, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: region,\n          children: region\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"filter-select\",\n        value: sourceFilter,\n        onChange: e => setSourceFilter(e.target.value),\n        title: \"Filter by Source\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Sources\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), sources.map((source, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: source,\n          children: source\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), (regionFilter || sourceFilter) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-filter-btn\",\n        onClick: handleReset,\n        title: \"Reset all filters\",\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 407,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-action-btn ${metric === 'count' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('count'),\n        title: \"Event Count\",\n        children: \"Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-action-btn ${metric === 'intensity' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('intensity'),\n        title: \"Intensity\",\n        children: \"Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-action-btn ${metric === 'likelihood' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('likelihood'),\n        title: \"Likelihood\",\n        children: \"Likelihood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-action-btn ${metric === 'relevance' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('relevance'),\n        title: \"Relevance\",\n        children: \"Relevance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-btn\",\n      onClick: () => {\n        setLoading(true);\n        const filters = {};\n        if (regionFilter) filters.region = regionFilter;\n        if (sourceFilter) filters.source = sourceFilter;\n        api.getRegions(filters).then(data => {\n          setData(data);\n          setFilteredData(regionFilter ? data.filter(d => d.region === regionFilter) : data);\n          setLoading(false);\n        }).catch(err => {\n          setError('Failed to reload data');\n          setLoading(false);\n        });\n      },\n      title: \"Refresh data\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"refresh-icon\",\n        children: \"\\u21BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 406,\n    columnNumber: 5\n  }, this);\n\n  // Add some CSS for the new components\n  const styles = `\n    <style>\n      .chart-container {\n        width: 100%;\n        overflow-x: auto;\n        padding-bottom: 20px;\n      }\n      \n      .region-chart {\n        display: block;\n        max-width: 100%;\n      }\n      \n      .chart-actions {\n        display: flex;\n        flex-wrap: wrap;\n        align-items: center;\n        gap: 10px;\n        margin-bottom: 15px;\n      }\n      \n      .filter-controls {\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n        gap: 8px;\n        margin-right: 15px;\n      }\n      \n      .metric-controls {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 5px;\n      }\n      \n      .filter-select {\n        padding: 6px 10px;\n        border-radius: 4px;\n        border: 1px solid #ccc;\n        min-width: 120px;\n      }\n      \n      .chart-action-btn {\n        background-color: #f1f1f1;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        padding: 6px 10px;\n        cursor: pointer;\n        transition: background-color 0.2s;\n      }\n      \n      .chart-action-btn:hover {\n        background-color: #e0e0e0;\n      }\n      \n      .chart-action-btn.active {\n        background-color: #3182bd;\n        color: white;\n        border-color: #2171b5;\n      }\n      \n      .reset-filter-btn {\n        background-color: #f1f1f1;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        padding: 6px 10px;\n        cursor: pointer;\n      }\n      \n      .reset-filter-btn:hover {\n        background-color: #e0e0e0;\n      }\n      \n      .refresh-btn {\n        background-color: #f9f9f9;\n        border: 1px solid #ddd;\n        border-radius: 4px;\n        padding: 6px 10px;\n        cursor: pointer;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n      \n      .refresh-icon {\n        display: inline-block;\n        font-size: 14px;\n      }\n      \n      .region-details {\n        margin-top: 20px;\n        padding: 15px;\n        background-color: #f9f9f9;\n        border-radius: 8px;\n        border: 1px solid #e0e0e0;\n      }\n      \n      .info-section {\n        margin-bottom: 15px;\n      }\n      \n      .info-section h5 {\n        margin-bottom: 8px;\n        color: #333;\n      }\n      \n      .tag-container {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 4px;\n      }\n      \n      .info-tag {\n        display: inline-block;\n        padding: 4px 10px;\n        border-radius: 16px;\n        font-size: 12px;\n        color: white;\n      }\n      \n      .source-tag {\n        background-color: #3498db;\n      }\n      \n      .source-tag:hover {\n        background-color: #2980b9;\n      }\n      \n      .topic-tag {\n        background-color: #2ecc71;\n      }\n      \n      /* Active filter indicator */\n      .active-filter-badge {\n        position: relative;\n        display: inline-flex;\n        align-items: center;\n        margin-left: 5px;\n        padding: 3px 6px;\n        border-radius: 10px;\n        background-color: #2980b9;\n        color: white;\n        font-size: 10px;\n      }\n      \n      /* Mobile responsiveness */\n      @media (max-width: 768px) {\n        .chart-actions {\n          flex-direction: column;\n          align-items: flex-start;\n          width: 100%;\n        }\n        \n        .filter-controls {\n          margin-bottom: 10px;\n          width: 100%;\n        }\n        \n        .metric-controls {\n          margin-bottom: 10px;\n          width: 100%;\n        }\n        \n        .filter-select {\n          flex-grow: 1;\n        }\n        \n        .region-chart text {\n          font-size: 9px;\n        }\n      }\n    </style>\n  `;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: styles\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      title: generateChartTitle(),\n      actionButtons: actionButtons,\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"Loading region data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: error,\n        icon: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 11\n      }, this) : !filteredData || filteredData.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          ref: containerRef,\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            ref: svgRef,\n            className: \"region-chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 13\n        }, this), selectedRegionInfo && renderRegionInfo()]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(RegionChart, \"mlhjSd/6tXMhAYgJiHYyHmQEFGs=\");\n_c = RegionChart;\nexport default RegionChart;\nvar _c;\n$RefreshReg$(_c, \"RegionChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","api","CardContainer","Loader","NoDataMessage","createTooltip","formatNumber","jsxDEV","_jsxDEV","Fragment","_Fragment","RegionChart","_s","data","setData","loading","setLoading","error","setError","metric","setMetric","filteredData","setFilteredData","regionFilter","setRegionFilter","sourceFilter","setSourceFilter","regions","setRegions","sources","setSources","selectedRegionInfo","setSelectedRegionInfo","svgRef","containerRef","fetchFilters","filtersData","getFilters","err","console","fetchRegionData","filters","region","source","regionData","getRegions","selectedRegion","find","r","filter","d","length","renderChart","handleResize","window","addEventListener","removeEventListener","current","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","Math","max","height","attr","processedData","sort","a","b","maxBarsToDisplay","floor","displayData","slice","svg","empty","append","tooltip","x","scaleBand","domain","map","range","padding","min","y","scaleLinear","nice","defs","gradient","xAxis","call","axisBottom","tickSize","tickFormat","substring","style","yAxisValues","yAxis","axisLeft","tickValues","text","charAt","toUpperCase","bars","enter","bandwidth","on","event","transition","duration","tooltipContent","html","pageX","pageY","delay","i","handleMetricChange","newMetric","clientHeight","handleReset","renderRegionInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","onClick","title","cursor","topics","topic","generateChartTitle","join","actionButtons","value","onChange","e","target","then","catch","styles","dangerouslySetInnerHTML","__html","message","icon","ref","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/RegionChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { createTooltip, formatNumber } from '../../utils/helpers';\r\n\r\nconst RegionChart = () => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [metric, setMetric] = useState('count'); // 'count', 'intensity', 'likelihood', 'relevance'\r\n  const [filteredData, setFilteredData] = useState(null);\r\n  const [regionFilter, setRegionFilter] = useState(''); // Filter by region\r\n  const [sourceFilter, setSourceFilter] = useState(''); // Filter by source\r\n  const [regions, setRegions] = useState([]); // Available regions for filtering\r\n  const [sources, setSources] = useState([]); // Available sources for filtering\r\n  const [selectedRegionInfo, setSelectedRegionInfo] = useState(null); // To display sources and topics\r\n  const svgRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  // Fetch regions and sources for filter dropdowns\r\n  useEffect(() => {\r\n    const fetchFilters = async () => {\r\n      try {\r\n        const filtersData = await api.getFilters();\r\n        setRegions(filtersData.regions || []);\r\n        setSources(filtersData.sources || []);\r\n      } catch (err) {\r\n        console.error('Error fetching filter options:', err);\r\n      }\r\n    };\r\n    \r\n    fetchFilters();\r\n  }, []);\r\n  \r\n  // Fetch region data based on filters\r\n  useEffect(() => {\r\n    const fetchRegionData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Build filter object\r\n        const filters = {};\r\n        if (regionFilter) filters.region = regionFilter;\r\n        if (sourceFilter) filters.source = sourceFilter;\r\n        \r\n        const regionData = await api.getRegions(filters);\r\n        setData(regionData);\r\n        \r\n        // Set filtered data\r\n        if (regionFilter) {\r\n          // Find the selected region data to display sources and topics\r\n          const selectedRegion = regionData.find(r => r.region === regionFilter);\r\n          if (selectedRegion) {\r\n            setSelectedRegionInfo(selectedRegion);\r\n          }\r\n          setFilteredData(regionData.filter(d => d.region === regionFilter));\r\n        } else {\r\n          setFilteredData(regionData);\r\n          setSelectedRegionInfo(null);\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching region data:', err);\r\n        setError('Failed to load region data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchRegionData();\r\n  }, [regionFilter, sourceFilter]);\r\n  \r\n  useEffect(() => {\r\n    if (filteredData && filteredData.length > 0 && !loading) {\r\n      renderChart();\r\n    }\r\n  }, [filteredData, loading, metric]);\r\n  \r\n  useEffect(() => {\r\n    // Add resize listener\r\n    const handleResize = () => {\r\n      if (filteredData && filteredData.length > 0 && !loading) {\r\n        renderChart();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [filteredData, loading, metric]);\r\n  \r\n  const renderChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n    \r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n    \r\n    // Set dimensions based on container width\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 30, right: 20, bottom: 80, left: 60 };\r\n    \r\n    // Ensure width is never negative\r\n    const width = Math.max(containerWidth - margin.left - margin.right, 10);\r\n    const height = 400 - margin.top - margin.bottom;\r\n    \r\n    // Adjust the SVG container size\r\n    d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('viewBox', `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n      .attr('preserveAspectRatio', 'xMidYMid meet');\r\n    \r\n    // Process and sort data\r\n    const processedData = [...filteredData]\r\n      .filter(d => d.region && d.region !== 'Unknown' && d[metric] > 0)\r\n      .sort((a, b) => b[metric] - a[metric]);\r\n    \r\n    // If there are too many bars for the available width, limit the number displayed\r\n    // or adjust the display approach\r\n    const maxBarsToDisplay = Math.max(5, Math.floor(width / 40)); // At least 5 bars, or one bar per 40px\r\n    const displayData = processedData.length > maxBarsToDisplay && width < 768 \r\n      ? processedData.slice(0, maxBarsToDisplay) \r\n      : processedData;\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .select('g')\r\n      .empty() ? d3.select(svgRef.current)\r\n        .append('g')\r\n        .attr('transform', `translate(${margin.left},${margin.top})`) \r\n      : d3.select(svgRef.current)\r\n        .select('g');\r\n    \r\n    // Ensure the transform is set correctly\r\n    svg.attr('transform', `translate(${margin.left},${margin.top})`);\r\n      \r\n    // Create tooltip\r\n    const tooltip = createTooltip(d3);\r\n    \r\n    // Create scales with dynamic bandwidth based on available space\r\n    const x = d3.scaleBand()\r\n      .domain(displayData.map(d => d.region))\r\n      .range([0, width])\r\n      .padding(Math.min(0.3, Math.max(0.1, 0.3 * (width / (displayData.length * 50)))));\r\n    \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(displayData, d => d[metric]) * 1.1])\r\n      .nice()\r\n      .range([height, 0]);\r\n    \r\n    // Create gradient for bars\r\n    const defs = svg.append('defs');\r\n    const gradient = defs.append('linearGradient')\r\n      .attr('id', 'region-bar-gradient')\r\n      .attr('gradientUnits', 'userSpaceOnUse')\r\n      .attr('x1', 0)\r\n      .attr('y1', height)\r\n      .attr('x2', 0)\r\n      .attr('y2', 0);\r\n    \r\n    gradient.append('stop')\r\n      .attr('offset', '0%')\r\n      .attr('stop-color', '#3182bd');\r\n    \r\n    gradient.append('stop')\r\n      .attr('offset', '100%')\r\n      .attr('stop-color', '#6baed6');\r\n    \r\n    // Add X axis\r\n    const xAxis = svg.append('g')\r\n      .attr('class', 'axis x-axis')\r\n      .attr('transform', `translate(0,${height})`);\r\n    \r\n    // Conditional rendering of X axis labels based on space\r\n    if (displayData.length <= maxBarsToDisplay || width >= 768) {\r\n      xAxis.call(d3.axisBottom(x)\r\n        .tickSize(0)\r\n        .tickFormat(d => d.length > 10 ? d.substring(0, 10) + '...' : d));\r\n      \r\n      // Rotate labels if needed\r\n      xAxis.selectAll('text')\r\n        .attr('transform', 'rotate(-45)')\r\n        .style('text-anchor', 'end')\r\n        .attr('dx', '-0.8em')\r\n        .attr('dy', '0.15em')\r\n        .style('font-size', '10px');\r\n    } else {\r\n      // For small screens with many bars, don't show labels\r\n      xAxis.call(d3.axisBottom(x).tickSize(0).tickFormat(''));\r\n    }\r\n    \r\n    // Add only a single line for X axis\r\n    xAxis.select('.domain').attr('stroke', '#ccc');\r\n    \r\n    // Add Y axis with only min and max values\r\n    const yAxisValues = [0, d3.max(displayData, d => d[metric])];\r\n    const yAxis = svg.append('g')\r\n      .attr('class', 'axis y-axis')\r\n      .call(d3.axisLeft(y)\r\n        .tickValues(yAxisValues)\r\n        .tickFormat(d => formatNumber(d)));\r\n    \r\n    // Add Y axis label\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('dy', '1em')\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '12px')\r\n      .text(metric === 'count' ? 'Number of Events' : metric.charAt(0).toUpperCase() + metric.slice(1));\r\n    \r\n    // Create horizontal bars with rounded corners\r\n    const bars = svg.selectAll('.bar')\r\n      .data(displayData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => x(d.region))\r\n      .attr('width', x.bandwidth())\r\n      .attr('y', height)\r\n      .attr('height', 0)\r\n      .attr('rx', 4)\r\n      .attr('ry', 4)\r\n      .attr('fill', 'url(#region-bar-gradient)')\r\n      .on('mouseover', function(event, d) {\r\n        // Highlight bar\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('opacity', 0.8)\r\n          .attr('stroke', '#2c3e50')\r\n          .attr('stroke-width', 2);\r\n        \r\n        // Show tooltip with region name, value, and sources/topics\r\n        tooltip.transition()\r\n          .duration(200)\r\n          .style('opacity', 0.9);\r\n        \r\n        let tooltipContent = `\r\n          <strong>${d.region}</strong><br/>\r\n          ${metric === 'count' ? 'Count' : metric.charAt(0).toUpperCase() + metric.slice(1)}: ${formatNumber(d[metric])}\r\n        `;\r\n        \r\n        tooltip.html(tooltipContent)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n        \r\n        // Show region name temporarily below the bar\r\n        svg.append('text')\r\n          .attr('class', 'temp-region-label')\r\n          .attr('x', x(d.region) + x.bandwidth() / 2)\r\n          .attr('y', height + 20)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('font-size', '12px')\r\n          .text(d.region);\r\n      })\r\n      .on('mouseout', function() {\r\n        // Restore bar appearance\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('opacity', 1)\r\n          .attr('stroke', 'none');\r\n        \r\n        // Hide tooltip\r\n        tooltip.transition()\r\n          .duration(500)\r\n          .style('opacity', 0);\r\n        \r\n        // Remove temporary region label\r\n        svg.selectAll('.temp-region-label').remove();\r\n      })\r\n      .on('click', function(event, d) {\r\n        // Show region name temporarily below the bar (persists until another bar is clicked)\r\n        svg.selectAll('.clicked-region-label').remove();\r\n        \r\n        svg.append('text')\r\n          .attr('class', 'clicked-region-label')\r\n          .attr('x', x(d.region) + x.bandwidth() / 2)\r\n          .attr('y', height + 20)\r\n          .attr('text-anchor', 'middle')\r\n          .attr('font-size', '12px')\r\n          .attr('font-weight', 'bold')\r\n          .text(d.region);\r\n        \r\n        // Set selected region to display info\r\n        setSelectedRegionInfo(d);\r\n      });\r\n    \r\n    // Animate bars on load\r\n    bars.transition()\r\n      .duration(800)\r\n      .delay((d, i) => i * 50)\r\n      .attr('y', d => y(d[metric]))\r\n      .attr('height', d => height - y(d[metric]));\r\n    \r\n    // Add value labels on top of bars (only if enough space)\r\n    if (x.bandwidth() > 30) {\r\n      svg.selectAll('.bar-label')\r\n        .data(displayData)\r\n        .enter()\r\n        .append('text')\r\n        .attr('class', 'bar-label')\r\n        .attr('x', d => x(d.region) + x.bandwidth() / 2)\r\n        .attr('y', d => y(d[metric]) - 5)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '10px')\r\n        .attr('opacity', 0)\r\n        .text(d => formatNumber(d[metric]))\r\n        .transition()\r\n        .duration(800)\r\n        .delay((d, i) => 800 + i * 50)\r\n        .attr('opacity', 1);\r\n    }\r\n    \r\n    // If we're showing a truncated dataset, add an indicator\r\n    if (processedData.length > displayData.length) {\r\n      svg.append('text')\r\n        .attr('class', 'truncation-note')\r\n        .attr('x', width)\r\n        .attr('y', height + 60)\r\n        .attr('text-anchor', 'end')\r\n        .attr('font-size', '11px')\r\n        .attr('fill', '#666')\r\n        .text(`Showing top ${displayData.length} of ${processedData.length} regions. Resize for more.`);\r\n    }\r\n  };\r\n  \r\n  const handleMetricChange = (newMetric) => {\r\n    // Animate transition between metrics\r\n    d3.selectAll('.bar')\r\n      .transition()\r\n      .duration(500)\r\n      .attr('y', svgRef.current.clientHeight)\r\n      .attr('height', 0)\r\n      .on('end', () => {\r\n        setMetric(newMetric);\r\n      });\r\n  };\r\n  \r\n  // Reset filters\r\n  const handleReset = () => {\r\n    setRegionFilter('');\r\n    setSourceFilter('');\r\n    setSelectedRegionInfo(null);\r\n  };\r\n  \r\n  // Render source and topic info when a region is selected\r\n  const renderRegionInfo = () => {\r\n    if (!selectedRegionInfo) return null;\r\n    \r\n    return (\r\n      <div className=\"region-details\">\r\n        <h4>Information for {selectedRegionInfo.region}</h4>\r\n        \r\n        {selectedRegionInfo.sources && selectedRegionInfo.sources.length > 0 && (\r\n          <div className=\"info-section\">\r\n            <h5>Sources:</h5>\r\n            <div className=\"tag-container\">\r\n              {selectedRegionInfo.sources.map((source, idx) => (\r\n                <span \r\n                  key={`source-${idx}`} \r\n                  className=\"info-tag source-tag\"\r\n                  onClick={() => setSourceFilter(source)}\r\n                  title={`Filter by ${source}`}\r\n                  style={{ cursor: 'pointer' }}\r\n                >\r\n                  {source}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n        \r\n        {selectedRegionInfo.topics && selectedRegionInfo.topics.length > 0 && (\r\n          <div className=\"info-section\">\r\n            <h5>Topics:</h5>\r\n            <div className=\"tag-container\">\r\n              {selectedRegionInfo.topics.map((topic, idx) => (\r\n                <span key={`topic-${idx}`} className=\"info-tag topic-tag\">{topic}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  // Generate title with active filters\r\n  const generateChartTitle = () => {\r\n    let title = \"Region Distribution\";\r\n    const filters = [];\r\n    \r\n    if (filters.length > 0) {\r\n      title += ` - ${filters.join(', ')}`;\r\n    }\r\n    \r\n    return title;\r\n  };\r\n  \r\n  const actionButtons = (\r\n    <div className=\"chart-actions\">\r\n      <div className=\"filter-controls\">\r\n        <select \r\n          className=\"filter-select\"\r\n          value={regionFilter} \r\n          onChange={(e) => setRegionFilter(e.target.value)}\r\n          title=\"Filter by Region\"\r\n        >\r\n          <option value=\"\">All Regions</option>\r\n          {regions.map((region, idx) => (\r\n            <option key={idx} value={region}>{region}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        <select \r\n          className=\"filter-select\"\r\n          value={sourceFilter} \r\n          onChange={(e) => setSourceFilter(e.target.value)}\r\n          title=\"Filter by Source\"\r\n        >\r\n          <option value=\"\">All Sources</option>\r\n          {sources.map((source, idx) => (\r\n            <option key={idx} value={source}>{source}</option>\r\n          ))}\r\n        </select>\r\n        \r\n        {(regionFilter || sourceFilter) && (\r\n          <button className=\"reset-filter-btn\" onClick={handleReset} title=\"Reset all filters\">\r\n            Reset Filters\r\n          </button>\r\n        )}\r\n      </div>\r\n      \r\n      <div className=\"metric-controls\">\r\n        <button \r\n          className={`chart-action-btn ${metric === 'count' ? 'active' : ''}`} \r\n          onClick={() => handleMetricChange('count')}\r\n          title=\"Event Count\"\r\n        >\r\n          Count\r\n        </button>\r\n        <button \r\n          className={`chart-action-btn ${metric === 'intensity' ? 'active' : ''}`} \r\n          onClick={() => handleMetricChange('intensity')}\r\n          title=\"Intensity\"\r\n        >\r\n          Intensity\r\n        </button>\r\n        <button \r\n          className={`chart-action-btn ${metric === 'likelihood' ? 'active' : ''}`} \r\n          onClick={() => handleMetricChange('likelihood')}\r\n          title=\"Likelihood\"\r\n        >\r\n          Likelihood\r\n        </button>\r\n        <button \r\n          className={`chart-action-btn ${metric === 'relevance' ? 'active' : ''}`} \r\n          onClick={() => handleMetricChange('relevance')}\r\n          title=\"Relevance\"\r\n        >\r\n          Relevance\r\n        </button>\r\n      </div>\r\n      \r\n      <button \r\n        className=\"refresh-btn\" \r\n        onClick={() => {\r\n          setLoading(true);\r\n          const filters = {};\r\n          if (regionFilter) filters.region = regionFilter;\r\n          if (sourceFilter) filters.source = sourceFilter;\r\n          \r\n          api.getRegions(filters).then(data => {\r\n            setData(data);\r\n            setFilteredData(regionFilter ? data.filter(d => d.region === regionFilter) : data);\r\n            setLoading(false);\r\n          }).catch(err => {\r\n            setError('Failed to reload data');\r\n            setLoading(false);\r\n          });\r\n        }}\r\n        title=\"Refresh data\"\r\n      >\r\n        <span className=\"refresh-icon\">↻</span>\r\n      </button>\r\n    </div>\r\n  );\r\n  \r\n  // Add some CSS for the new components\r\n  const styles = `\r\n    <style>\r\n      .chart-container {\r\n        width: 100%;\r\n        overflow-x: auto;\r\n        padding-bottom: 20px;\r\n      }\r\n      \r\n      .region-chart {\r\n        display: block;\r\n        max-width: 100%;\r\n      }\r\n      \r\n      .chart-actions {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        gap: 10px;\r\n        margin-bottom: 15px;\r\n      }\r\n      \r\n      .filter-controls {\r\n        display: flex;\r\n        align-items: center;\r\n        flex-wrap: wrap;\r\n        gap: 8px;\r\n        margin-right: 15px;\r\n      }\r\n      \r\n      .metric-controls {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 5px;\r\n      }\r\n      \r\n      .filter-select {\r\n        padding: 6px 10px;\r\n        border-radius: 4px;\r\n        border: 1px solid #ccc;\r\n        min-width: 120px;\r\n      }\r\n      \r\n      .chart-action-btn {\r\n        background-color: #f1f1f1;\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        padding: 6px 10px;\r\n        cursor: pointer;\r\n        transition: background-color 0.2s;\r\n      }\r\n      \r\n      .chart-action-btn:hover {\r\n        background-color: #e0e0e0;\r\n      }\r\n      \r\n      .chart-action-btn.active {\r\n        background-color: #3182bd;\r\n        color: white;\r\n        border-color: #2171b5;\r\n      }\r\n      \r\n      .reset-filter-btn {\r\n        background-color: #f1f1f1;\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        padding: 6px 10px;\r\n        cursor: pointer;\r\n      }\r\n      \r\n      .reset-filter-btn:hover {\r\n        background-color: #e0e0e0;\r\n      }\r\n      \r\n      .refresh-btn {\r\n        background-color: #f9f9f9;\r\n        border: 1px solid #ddd;\r\n        border-radius: 4px;\r\n        padding: 6px 10px;\r\n        cursor: pointer;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n      }\r\n      \r\n      .refresh-icon {\r\n        display: inline-block;\r\n        font-size: 14px;\r\n      }\r\n      \r\n      .region-details {\r\n        margin-top: 20px;\r\n        padding: 15px;\r\n        background-color: #f9f9f9;\r\n        border-radius: 8px;\r\n        border: 1px solid #e0e0e0;\r\n      }\r\n      \r\n      .info-section {\r\n        margin-bottom: 15px;\r\n      }\r\n      \r\n      .info-section h5 {\r\n        margin-bottom: 8px;\r\n        color: #333;\r\n      }\r\n      \r\n      .tag-container {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 4px;\r\n      }\r\n      \r\n      .info-tag {\r\n        display: inline-block;\r\n        padding: 4px 10px;\r\n        border-radius: 16px;\r\n        font-size: 12px;\r\n        color: white;\r\n      }\r\n      \r\n      .source-tag {\r\n        background-color: #3498db;\r\n      }\r\n      \r\n      .source-tag:hover {\r\n        background-color: #2980b9;\r\n      }\r\n      \r\n      .topic-tag {\r\n        background-color: #2ecc71;\r\n      }\r\n      \r\n      /* Active filter indicator */\r\n      .active-filter-badge {\r\n        position: relative;\r\n        display: inline-flex;\r\n        align-items: center;\r\n        margin-left: 5px;\r\n        padding: 3px 6px;\r\n        border-radius: 10px;\r\n        background-color: #2980b9;\r\n        color: white;\r\n        font-size: 10px;\r\n      }\r\n      \r\n      /* Mobile responsiveness */\r\n      @media (max-width: 768px) {\r\n        .chart-actions {\r\n          flex-direction: column;\r\n          align-items: flex-start;\r\n          width: 100%;\r\n        }\r\n        \r\n        .filter-controls {\r\n          margin-bottom: 10px;\r\n          width: 100%;\r\n        }\r\n        \r\n        .metric-controls {\r\n          margin-bottom: 10px;\r\n          width: 100%;\r\n        }\r\n        \r\n        .filter-select {\r\n          flex-grow: 1;\r\n        }\r\n        \r\n        .region-chart text {\r\n          font-size: 9px;\r\n        }\r\n      }\r\n    </style>\r\n  `;\r\n  \r\n  return (\r\n    <>\r\n      <div dangerouslySetInnerHTML={{ __html: styles }} />\r\n      <CardContainer title={generateChartTitle()} actionButtons={actionButtons}>\r\n        {loading ? (\r\n          <Loader message=\"Loading region data...\" />\r\n        ) : error ? (\r\n          <NoDataMessage message={error} icon=\"⚠️\" />\r\n        ) : !filteredData || filteredData.length === 0 ? (\r\n          <NoDataMessage message=\"No data available\" />\r\n        ) : (\r\n          <>\r\n            <div className=\"chart-container\" ref={containerRef}>\r\n              <svg ref={svgRef} className=\"region-chart\"></svg>\r\n            </div>\r\n            {selectedRegionInfo && renderRegionInfo()}\r\n          </>\r\n        )}\r\n      </CardContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}