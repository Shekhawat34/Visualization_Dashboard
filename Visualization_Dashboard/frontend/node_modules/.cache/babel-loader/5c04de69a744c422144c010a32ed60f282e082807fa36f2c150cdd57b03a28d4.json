{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\ui\\\\Select.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../ui/Select.css'; // Import the corresponding CSS\n\n// Main Select component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Select = ({\n  children,\n  defaultValue\n}) => {\n  _s();\n  const [selectedValue, setSelectedValue] = useState(defaultValue || ''); // Handle selected value\n  const [isOpen, setIsOpen] = useState(false); // Handle open/close state\n\n  // Function to handle item selection\n  const handleSelectItem = value => {\n    setSelectedValue(value);\n    setIsOpen(false); // Close the dropdown after selection\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select\",\n    children: React.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n      selectedValue,\n      isOpen,\n      onSelectItem: handleSelectItem,\n      // Ensure onSelectItem is passed correctly\n      toggleOpen: () => setIsOpen(prev => !prev)\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n// Trigger component for opening/closing the dropdown\n_s(Select, \"V9Aya0snXHr4CHBwN3ENy0Mu0yM=\");\n_c = Select;\nexport const SelectTrigger = ({\n  children,\n  toggleOpen,\n  selectedValue\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-trigger\",\n    onClick: toggleOpen,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"select-value\",\n      children: selectedValue || children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n// Content component for displaying options when dropdown is open\n_c2 = SelectTrigger;\nexport const SelectContent = ({\n  children,\n  isOpen\n}) => {\n  return isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-content\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 19\n  }, this) : null;\n};\n\n// Item component for each option in the dropdown\n_c3 = SelectContent;\nexport const SelectItem = ({\n  children,\n  onSelectItem\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"select-item\",\n    onClick: () => onSelectItem(children),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n// SelectValue component for displaying the selected value\n_c4 = SelectItem;\nexport const SelectValue = ({\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"select-value\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, this);\n};\n_c5 = SelectValue;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Select\");\n$RefreshReg$(_c2, \"SelectTrigger\");\n$RefreshReg$(_c3, \"SelectContent\");\n$RefreshReg$(_c4, \"SelectItem\");\n$RefreshReg$(_c5, \"SelectValue\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Select","children","defaultValue","_s","selectedValue","setSelectedValue","isOpen","setIsOpen","handleSelectItem","value","className","Children","map","child","cloneElement","onSelectItem","toggleOpen","prev","fileName","_jsxFileName","lineNumber","columnNumber","_c","SelectTrigger","onClick","_c2","SelectContent","_c3","SelectItem","_c4","SelectValue","_c5","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/ui/Select.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../ui/Select.css'; // Import the corresponding CSS\r\n\r\n// Main Select component\r\nexport const Select = ({ children, defaultValue }) => {\r\n  const [selectedValue, setSelectedValue] = useState(defaultValue || '');  // Handle selected value\r\n  const [isOpen, setIsOpen] = useState(false); // Handle open/close state\r\n\r\n  // Function to handle item selection\r\n  const handleSelectItem = (value) => {\r\n    setSelectedValue(value);\r\n    setIsOpen(false);  // Close the dropdown after selection\r\n  };\r\n\r\n  return (\r\n    <div className=\"select\">\r\n      {React.Children.map(children, (child) =>\r\n        React.cloneElement(child, {\r\n          selectedValue,\r\n          isOpen,\r\n          onSelectItem: handleSelectItem,  // Ensure onSelectItem is passed correctly\r\n          toggleOpen: () => setIsOpen((prev) => !prev),\r\n        })\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Trigger component for opening/closing the dropdown\r\nexport const SelectTrigger = ({ children, toggleOpen, selectedValue }) => {\r\n  return (\r\n    <div className=\"select-trigger\" onClick={toggleOpen}>\r\n      <span className=\"select-value\">{selectedValue || children}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Content component for displaying options when dropdown is open\r\nexport const SelectContent = ({ children, isOpen }) => {\r\n  return isOpen ? <div className=\"select-content\">{children}</div> : null;\r\n};\r\n\r\n// Item component for each option in the dropdown\r\nexport const SelectItem = ({ children, onSelectItem }) => {\r\n  return (\r\n    <div className=\"select-item\" onClick={() => onSelectItem(children)}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// SelectValue component for displaying the selected value\r\nexport const SelectValue = ({ children }) => {\r\n  return <span className=\"select-value\">{children}</span>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}