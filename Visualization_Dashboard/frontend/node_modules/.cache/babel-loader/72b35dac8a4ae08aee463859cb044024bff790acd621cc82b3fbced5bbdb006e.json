{"ast":null,"code":"// src/api/ticketApi.js\n\n// API endpoint base URL\nconst API_URL = 'http://localhost:5000/api/tickets';\n\n// Helper function for making requests\nconst fetchData = async (url, options) => {\n  try {\n    const response = await fetch(url, options);\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Error fetching data:', error);\n    throw error;\n  }\n};\n\n// Get all tickets\nexport const getTickets = async () => {\n  const url = `${API_URL}`;\n  return await fetchData(url, {\n    method: 'GET'\n  });\n};\n\n// Get a single ticket by ID\nexport const getTicket = async ticketId => {\n  const url = `${API_URL}/${ticketId}`;\n  return await fetchData(url, {\n    method: 'GET'\n  });\n};\n\n// Create a new ticket\nexport const createTicket = async ticketData => {\n  const url = `${API_URL}`;\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(ticketData)\n  };\n  return await fetchData(url, options);\n};\n\n// Update a ticket by ID\nexport const updateTicket = async (ticketId, ticketData) => {\n  const url = `${API_URL}/${ticketId}`;\n  const options = {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(ticketData)\n  };\n  return await fetchData(url, options);\n};\n\n// Delete a ticket by ID\nexport const deleteTicket = async ticketId => {\n  const url = `${API_URL}/${ticketId}`;\n  const options = {\n    method: 'DELETE'\n  };\n  return await fetchData(url, options);\n};","map":{"version":3,"names":["API_URL","fetchData","url","options","response","fetch","ok","Error","json","error","console","getTickets","method","getTicket","ticketId","createTicket","ticketData","headers","body","JSON","stringify","updateTicket","deleteTicket"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/api/ticketsApi.js"],"sourcesContent":["// src/api/ticketApi.js\r\n\r\n// API endpoint base URL\r\nconst API_URL = 'http://localhost:5000/api/tickets';\r\n\r\n// Helper function for making requests\r\nconst fetchData = async (url, options) => {\r\n    try {\r\n        const response = await fetch(url, options);\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Get all tickets\r\nexport const getTickets = async () => {\r\n    const url = `${API_URL}`;\r\n    return await fetchData(url, { method: 'GET' });\r\n};\r\n\r\n// Get a single ticket by ID\r\nexport const getTicket = async (ticketId) => {\r\n    const url = `${API_URL}/${ticketId}`;\r\n    return await fetchData(url, { method: 'GET' });\r\n};\r\n\r\n// Create a new ticket\r\nexport const createTicket = async (ticketData) => {\r\n    const url = `${API_URL}`;\r\n    const options = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(ticketData),\r\n    };\r\n    return await fetchData(url, options);\r\n};\r\n\r\n// Update a ticket by ID\r\nexport const updateTicket = async (ticketId, ticketData) => {\r\n    const url = `${API_URL}/${ticketId}`;\r\n    const options = {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(ticketData),\r\n    };\r\n    return await fetchData(url, options);\r\n};\r\n\r\n// Delete a ticket by ID\r\nexport const deleteTicket = async (ticketId) => {\r\n    const url = `${API_URL}/${ticketId}`;\r\n    const options = { method: 'DELETE' };\r\n    return await fetchData(url, options);\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,MAAMA,OAAO,GAAG,mCAAmC;;AAEnD;AACA,MAAMC,SAAS,GAAG,MAAAA,CAAOC,GAAG,EAAEC,OAAO,KAAK;EACtC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAEC,OAAO,CAAC;IAC1C,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;IAClD;IACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC5C,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMT,GAAG,GAAG,GAAGF,OAAO,EAAE;EACxB,OAAO,MAAMC,SAAS,CAACC,GAAG,EAAE;IAAEU,MAAM,EAAE;EAAM,CAAC,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMZ,GAAG,GAAG,GAAGF,OAAO,IAAIc,QAAQ,EAAE;EACpC,OAAO,MAAMb,SAAS,CAACC,GAAG,EAAE;IAAEU,MAAM,EAAE;EAAM,CAAC,CAAC;AAClD,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,UAAU,IAAK;EAC9C,MAAMd,GAAG,GAAG,GAAGF,OAAO,EAAE;EACxB,MAAMG,OAAO,GAAG;IACZS,MAAM,EAAE,MAAM;IACdK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;EACnC,CAAC;EACD,OAAO,MAAMf,SAAS,CAACC,GAAG,EAAEC,OAAO,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMkB,YAAY,GAAG,MAAAA,CAAOP,QAAQ,EAAEE,UAAU,KAAK;EACxD,MAAMd,GAAG,GAAG,GAAGF,OAAO,IAAIc,QAAQ,EAAE;EACpC,MAAMX,OAAO,GAAG;IACZS,MAAM,EAAE,KAAK;IACbK,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU;EACnC,CAAC;EACD,OAAO,MAAMf,SAAS,CAACC,GAAG,EAAEC,OAAO,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMmB,YAAY,GAAG,MAAOR,QAAQ,IAAK;EAC5C,MAAMZ,GAAG,GAAG,GAAGF,OAAO,IAAIc,QAAQ,EAAE;EACpC,MAAMX,OAAO,GAAG;IAAES,MAAM,EAAE;EAAS,CAAC;EACpC,OAAO,MAAMX,SAAS,CAACC,GAAG,EAAEC,OAAO,CAAC;AACxC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}