{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\TopicDistributionChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { formatNumber, truncateText, createTooltip, debounce } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TopicDistributionChart = ({\n  filters,\n  onFilterChange\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMetric, setSelectedMetric] = useState('intensity'); // 'intensity' or 'relevance'\n  const [topics, setTopics] = useState([]);\n  const [selectedTopic, setSelectedTopic] = useState('all');\n  const [chartType, setChartType] = useState('treemap'); // 'treemap' or 'barchart'\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n\n  // Fetch available topics for the filter dropdown\n  useEffect(() => {\n    const fetchTopics = async () => {\n      try {\n        const filtersData = await api.getFilters();\n        setTopics(filtersData.topics || []);\n      } catch (err) {\n        console.error('Error fetching topics for filter:', err);\n      }\n    };\n    fetchTopics();\n  }, []);\n\n  // Fetch data with filters applied\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        setError(null); // Clear any previous errors\n\n        // Apply filters\n        const appliedFilters = {\n          ...filters\n        };\n\n        // Only add topic filter if it's not 'all'\n        if (selectedTopic !== 'all') {\n          appliedFilters.topic = selectedTopic;\n          appliedFilters.exact_match = 'true';\n        }\n        console.log(\"Fetching with filters:\", appliedFilters);\n        const topicsData = await api.getTopics(appliedFilters);\n        console.log(\"API response:\", topicsData);\n        if (topicsData.length === 0) {\n          setError(`No data found for topic: ${selectedTopic}`);\n          setData([]);\n        } else {\n          setData(topicsData);\n\n          // Automatically switch to bar chart if only one topic is returned\n          if (topicsData.length === 1 && selectedTopic !== 'all') {\n            setChartType('barchart');\n          } else {\n            setChartType('treemap');\n          }\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching topics data:', err);\n        setError('Failed to load topics data');\n        setData([]);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [filters, selectedTopic]);\n  useEffect(() => {\n    if (data.length > 0 && !loading) {\n      if (chartType === 'treemap') {\n        drawTreeMap();\n      } else {\n        drawBarChart();\n      }\n\n      // Add resize listener\n      const handleResize = debounce(() => {\n        if (chartType === 'treemap') {\n          drawTreeMap();\n        } else {\n          drawBarChart();\n        }\n      }, 300);\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [data, loading, selectedMetric, chartType]);\n  const handleTopicChange = event => {\n    const topic = event.target.value;\n    setSelectedTopic(topic);\n\n    // If onFilterChange prop exists, call it to update parent component filters\n    if (onFilterChange) {\n      onFilterChange({\n        ...filters,\n        topic: topic !== 'all' ? topic : undefined\n      });\n    }\n  };\n  const drawBarChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 30,\n      right: 30,\n      bottom: 70,\n      left: 60\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = 400 - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', containerWidth).attr('height', 400).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Extract metrics for the selected topic\n    const topicData = data[0];\n    const metrics = [{\n      name: \"Intensity\",\n      value: topicData.intensity\n    }, {\n      name: \"Relevance\",\n      value: topicData.relevance\n    }, {\n      name: \"Likelihood\",\n      value: topicData.likelihood\n    }];\n\n    // Create scales\n    const x = d3.scaleBand().domain(metrics.map(d => d.name)).range([0, width]).padding(0.3);\n    const y = d3.scaleLinear().domain([0, d3.max(metrics, d => d.value) * 1.2]).range([height, 0]);\n\n    // Create color scale\n    const colorScale = d3.scaleOrdinal().domain(metrics.map(d => d.name)).range(['#0056b3', '#28a745', '#ffc107']);\n\n    // Add X axis\n    svg.append('g').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x)).selectAll('text').style('font-size', '12px');\n\n    // Add Y axis\n    svg.append('g').call(d3.axisLeft(y).ticks(5)).selectAll('text').style('font-size', '12px');\n\n    // Add X axis label\n    svg.append('text').attr('text-anchor', 'middle').attr('x', width / 2).attr('y', height + margin.bottom - 10).text('Metrics').style('font-size', '14px');\n\n    // Add Y axis label\n    svg.append('text').attr('text-anchor', 'middle').attr('transform', 'rotate(-90)').attr('y', -margin.left + 20).attr('x', -height / 2).text('Value').style('font-size', '14px');\n\n    // Add title\n    svg.append('text').attr('x', width / 2).attr('y', -10).attr('text-anchor', 'middle').style('font-size', '16px').style('font-weight', 'bold').text(`Topic: ${topicData.topic} (Count: ${topicData.count})`);\n\n    // Create bars with animation\n    svg.selectAll('.bar').data(metrics).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.name)).attr('width', x.bandwidth()).attr('y', height).attr('height', 0).attr('fill', d => colorScale(d.name)).attr('rx', 4).attr('ry', 4).transition().duration(800).attr('y', d => y(d.value)).attr('height', d => height - y(d.value));\n\n    // Add value labels on top of bars\n    svg.selectAll('.label').data(metrics).enter().append('text').attr('class', 'label').attr('text-anchor', 'middle').attr('x', d => x(d.name) + x.bandwidth() / 2).attr('y', d => y(d.value) - 5).style('font-size', '12px').style('opacity', 0).text(d => formatNumber(d.value)).transition().duration(800).delay(400).style('opacity', 1);\n\n    // Add hover effects\n    svg.selectAll('.bar').on('mouseover', function (event, d) {\n      d3.select(this).transition().duration(300).attr('fill', d3.color(colorScale(d.name)).brighter(0.3)).attr('stroke', '#000').attr('stroke-width', 1);\n      tooltipRef.current.style('opacity', 1).html(`\n            <strong>${d.name}:</strong> ${formatNumber(d.value)}<br>\n            <strong>Topic:</strong> ${topicData.topic}<br>\n            <strong>Count:</strong> ${formatNumber(topicData.count)}\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px');\n    }).on('mouseout', function (event, d) {\n      d3.select(this).transition().duration(300).attr('fill', colorScale(d.name)).attr('stroke', 'none');\n      tooltipRef.current.style('opacity', 0);\n    });\n  };\n  const drawTreeMap = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions\n    const containerWidth = containerRef.current.clientWidth;\n    const containerHeight = containerRef.current.clientHeight || 400;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', containerWidth).attr('height', containerHeight);\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Prepare data hierarchy\n    const hierarchyData = {\n      name: \"Topics\",\n      children: data.map(d => ({\n        name: d.topic,\n        value: selectedMetric === 'intensity' ? d.intensity : d.relevance,\n        count: d.count,\n        intensity: d.intensity,\n        relevance: d.relevance,\n        likelihood: d.likelihood\n      }))\n    };\n\n    // Create a color scale\n    const colorScale = d3.scaleLinear().domain([0, d3.max(data, d => selectedMetric === 'intensity' ? d.intensity : d.relevance) || 1]).range(['#e0f2ff', '#0056b3']);\n\n    // Create treemap layout\n    const treemap = d3.treemap().size([containerWidth, containerHeight]).padding(4).round(true);\n\n    // Create hierarchy\n    const root = d3.hierarchy(hierarchyData).sum(d => d.value || 0.1) // Ensure even zero values get some space\n    .sort((a, b) => b.value - a.value);\n\n    // Generate the treemap layout\n    treemap(root);\n\n    // Create the treemap cells with transition\n    const cells = svg.selectAll('.cell').data(root.leaves(), d => d.data.name);\n\n    // Remove exiting cells\n    cells.exit().transition().duration(500).attr('transform', d => `translate(${d.x0},${d.y0})`).attr('width', 0).attr('height', 0).remove();\n\n    // Add new cells\n    const enterCells = cells.enter().append('g').attr('class', 'cell').attr('transform', d => `translate(${d.x0},${d.y0})`).style('opacity', 0);\n\n    // Animated rectangle creation\n    enterCells.append('rect').attr('width', 0).attr('height', 0).attr('id', d => `rect-${d.data.name.replace(/\\s+/g, '-').toLowerCase()}`).attr('rx', 4).attr('ry', 4).transition().duration(800).delay((d, i) => i * 30).attr('width', d => Math.max(d.x1 - d.x0, 0)).attr('height', d => Math.max(d.y1 - d.y0, 0)).attr('fill', d => colorScale(d.data.value)).style('opacity', 1);\n    enterCells.transition().duration(800).delay((d, i) => i * 30).style('opacity', 1);\n\n    // Update existing cells\n    cells.transition().duration(800).attr('transform', d => `translate(${d.x0},${d.y0})`).select('rect').attr('width', d => Math.max(d.x1 - d.x0, 0)).attr('height', d => Math.max(d.y1 - d.y0, 0)).attr('fill', d => colorScale(d.data.value));\n\n    // Cell text\n    const allCells = svg.selectAll('.cell');\n\n    // Remove old text\n    allCells.selectAll('text').remove();\n\n    // Add new text\n    allCells.append('text').attr('class', 'topic-label').attr('x', 5).attr('y', 15).attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black').style('font-size', '12px').style('font-weight', 'bold').style('opacity', 0).text(d => truncateText(d.data.name, Math.floor((d.x1 - d.x0) / 6))).transition().duration(800).delay((d, i) => 300 + i * 30).style('opacity', d => d.x1 - d.x0 > 30 ? 1 : 0);\n\n    // Value text\n    allCells.append('text').attr('class', 'value-label').attr('x', 5).attr('y', 30).attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black').style('font-size', '10px').style('opacity', 0).text(d => `${selectedMetric === 'intensity' ? 'Int' : 'Rel'}: ${formatNumber(d.data.value)}`).transition().duration(800).delay((d, i) => 400 + i * 30).style('opacity', d => d.x1 - d.x0 > 60 && d.y1 - d.y0 > 40 ? 1 : 0);\n\n    // Count text\n    allCells.append('text').attr('class', 'count-label').attr('x', 5).attr('y', 45).attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black').style('font-size', '10px').style('opacity', 0).text(d => `Count: ${formatNumber(d.data.count)}`).transition().duration(800).delay((d, i) => 500 + i * 30).style('opacity', d => d.x1 - d.x0 > 80 && d.y1 - d.y0 > 60 ? 1 : 0);\n\n    // Add hover effects\n    allCells.on('mouseover', function (event, d) {\n      d3.select(this).select('rect').transition().duration(300).attr('stroke', '#000').attr('stroke-width', 2).style('filter', 'drop-shadow(0px 0px 6px rgba(0, 0, 0, 0.3))');\n      tooltipRef.current.style('opacity', 1).html(`\n            <strong>Topic:</strong> ${d.data.name}<br>\n            <strong>Count:</strong> ${formatNumber(d.data.count)}<br>\n            <strong>Intensity:</strong> ${formatNumber(d.data.intensity)}<br>\n            <strong>Relevance:</strong> ${formatNumber(d.data.relevance)}<br>\n            <strong>Likelihood:</strong> ${formatNumber(d.data.likelihood)}\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px');\n    }).on('mouseout', function () {\n      d3.select(this).select('rect').transition().duration(300).attr('stroke', 'none').attr('stroke-width', 0).style('filter', 'none');\n      tooltipRef.current.style('opacity', 0);\n    });\n\n    // Add a legend\n    const legendHeight = 20;\n    const legendWidth = 200;\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${containerWidth - legendWidth - 20}, 20)`);\n\n    // Create gradient for legend\n    const defs = svg.append('defs');\n    const linearGradient = defs.append('linearGradient').attr('id', 'topic-color-gradient').attr('x1', '0%').attr('y1', '0%').attr('x2', '100%').attr('y2', '0%');\n    linearGradient.append('stop').attr('offset', '0%').attr('stop-color', '#e0f2ff');\n    linearGradient.append('stop').attr('offset', '100%').attr('stop-color', '#0056b3');\n\n    // Draw legend rectangle\n    legend.append('rect').attr('width', legendWidth).attr('height', legendHeight).style('fill', 'url(#topic-color-gradient)');\n\n    // Add legend labels\n    legend.append('text').attr('x', 0).attr('y', legendHeight + 15).style('font-size', '10px').text('Lower');\n    legend.append('text').attr('x', legendWidth).attr('y', legendHeight + 15).style('font-size', '10px').style('text-anchor', 'end').text('Higher');\n    legend.append('text').attr('x', legendWidth / 2).attr('y', legendHeight + 15).style('font-size', '10px').style('text-anchor', 'middle').text(selectedMetric === 'intensity' ? 'Intensity' : 'Relevance');\n  };\n  const handleMetricChange = metric => {\n    setSelectedMetric(metric);\n  };\n  const toggleChartType = () => {\n    setChartType(prevType => prevType === 'treemap' ? 'barchart' : 'treemap');\n  };\n  const renderActionButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"topic-filter\",\n        children: \"Topic: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"topic-filter\",\n        value: selectedTopic,\n        onChange: handleTopicChange,\n        className: \"filter-select\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All Topics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 11\n        }, this), topics.map(topic => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: topic,\n          children: topic\n        }, topic, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 516,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"metric-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('intensity'),\n        children: \"Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `chart-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n        onClick: () => handleMetricChange('relevance'),\n        children: \"Relevance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 9\n      }, this), data.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"chart-btn\",\n        onClick: toggleChartType,\n        children: chartType === 'treemap' ? 'Switch to Bar Chart' : 'Switch to TreeMap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 515,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    title: \"Topic Distribution Visualization\",\n    actionButtons: renderActionButtons(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: '400px'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"Loading topic data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: error,\n        icon: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this) : data.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No topic data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"chart-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 556,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicDistributionChart, \"KzsCAHyozPewSLftFVSxyDopBKA=\");\n_c = TopicDistributionChart;\nexport default TopicDistributionChart;\nvar _c;\n$RefreshReg$(_c, \"TopicDistributionChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","api","CardContainer","Loader","NoDataMessage","formatNumber","truncateText","createTooltip","debounce","jsxDEV","_jsxDEV","TopicDistributionChart","filters","onFilterChange","_s","data","setData","loading","setLoading","error","setError","selectedMetric","setSelectedMetric","topics","setTopics","selectedTopic","setSelectedTopic","chartType","setChartType","svgRef","containerRef","tooltipRef","fetchTopics","filtersData","getFilters","err","console","fetchData","appliedFilters","topic","exact_match","log","topicsData","getTopics","length","drawTreeMap","drawBarChart","handleResize","window","addEventListener","removeEventListener","handleTopicChange","event","target","value","undefined","current","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","height","svg","attr","append","topicData","metrics","name","intensity","relevance","likelihood","x","scaleBand","domain","map","d","range","padding","y","scaleLinear","max","colorScale","scaleOrdinal","call","axisBottom","style","axisLeft","ticks","text","count","enter","bandwidth","transition","duration","delay","on","color","brighter","html","pageX","pageY","containerHeight","clientHeight","hierarchyData","children","treemap","size","round","root","hierarchy","sum","sort","a","b","cells","leaves","exit","x0","y0","enterCells","replace","toLowerCase","i","Math","x1","y1","allCells","item","floor","legendHeight","legendWidth","legend","defs","linearGradient","handleMetricChange","metric","toggleChartType","prevType","renderActionButtons","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onClick","title","actionButtons","ref","message","icon","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/TopicDistributionChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { formatNumber, truncateText, createTooltip, debounce } from '../../utils/helpers';\r\n\r\nconst TopicDistributionChart = ({ filters, onFilterChange }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMetric, setSelectedMetric] = useState('intensity'); // 'intensity' or 'relevance'\r\n  const [topics, setTopics] = useState([]);\r\n  const [selectedTopic, setSelectedTopic] = useState('all');\r\n  const [chartType, setChartType] = useState('treemap'); // 'treemap' or 'barchart'\r\n  const svgRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n\r\n  // Fetch available topics for the filter dropdown\r\n  useEffect(() => {\r\n    const fetchTopics = async () => {\r\n      try {\r\n        const filtersData = await api.getFilters();\r\n        setTopics(filtersData.topics || []);\r\n      } catch (err) {\r\n        console.error('Error fetching topics for filter:', err);\r\n      }\r\n    };\r\n\r\n    fetchTopics();\r\n  }, []);\r\n\r\n  // Fetch data with filters applied\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError(null); // Clear any previous errors\r\n        \r\n        // Apply filters\r\n        const appliedFilters = {\r\n          ...filters\r\n        };\r\n        \r\n        // Only add topic filter if it's not 'all'\r\n        if (selectedTopic !== 'all') {\r\n          appliedFilters.topic = selectedTopic;\r\n          appliedFilters.exact_match = 'true'; \r\n        }\r\n        \r\n        console.log(\"Fetching with filters:\", appliedFilters);\r\n        \r\n        const topicsData = await api.getTopics(appliedFilters);\r\n        console.log(\"API response:\", topicsData);\r\n        \r\n        if (topicsData.length === 0) {\r\n          setError(`No data found for topic: ${selectedTopic}`);\r\n          setData([]);\r\n        } else {\r\n          setData(topicsData);\r\n          \r\n          // Automatically switch to bar chart if only one topic is returned\r\n          if (topicsData.length === 1 && selectedTopic !== 'all') {\r\n            setChartType('barchart');\r\n          } else {\r\n            setChartType('treemap');\r\n          }\r\n        }\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching topics data:', err);\r\n        setError('Failed to load topics data');\r\n        setData([]);\r\n        setLoading(false);\r\n      }\r\n    };\r\n  \r\n    fetchData();\r\n  }, [filters, selectedTopic]);\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && !loading) {\r\n      if (chartType === 'treemap') {\r\n        drawTreeMap();\r\n      } else {\r\n        drawBarChart();\r\n      }\r\n      \r\n      // Add resize listener\r\n      const handleResize = debounce(() => {\r\n        if (chartType === 'treemap') {\r\n          drawTreeMap();\r\n        } else {\r\n          drawBarChart();\r\n        }\r\n      }, 300);\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [data, loading, selectedMetric, chartType]);\r\n\r\n  const handleTopicChange = (event) => {\r\n    const topic = event.target.value;\r\n    setSelectedTopic(topic);\r\n    \r\n    // If onFilterChange prop exists, call it to update parent component filters\r\n    if (onFilterChange) {\r\n      onFilterChange({\r\n        ...filters,\r\n        topic: topic !== 'all' ? topic : undefined\r\n      });\r\n    }\r\n  };\r\n\r\n  const drawBarChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Set dimensions\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 30, right: 30, bottom: 70, left: 60 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = 400 - margin.top - margin.bottom;\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', containerWidth)\r\n      .attr('height', 400)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n    \r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n\r\n    // Extract metrics for the selected topic\r\n    const topicData = data[0];\r\n    const metrics = [\r\n      { name: \"Intensity\", value: topicData.intensity },\r\n      { name: \"Relevance\", value: topicData.relevance },\r\n      { name: \"Likelihood\", value: topicData.likelihood }\r\n    ];\r\n    \r\n    // Create scales\r\n    const x = d3.scaleBand()\r\n      .domain(metrics.map(d => d.name))\r\n      .range([0, width])\r\n      .padding(0.3);\r\n    \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(metrics, d => d.value) * 1.2])\r\n      .range([height, 0]);\r\n    \r\n    // Create color scale\r\n    const colorScale = d3.scaleOrdinal()\r\n      .domain(metrics.map(d => d.name))\r\n      .range(['#0056b3', '#28a745', '#ffc107']);\r\n    \r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .style('font-size', '12px');\r\n    \r\n    // Add Y axis\r\n    svg.append('g')\r\n      .call(d3.axisLeft(y).ticks(5))\r\n      .selectAll('text')\r\n      .style('font-size', '12px');\r\n    \r\n    // Add X axis label\r\n    svg.append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('x', width / 2)\r\n      .attr('y', height + margin.bottom - 10)\r\n      .text('Metrics')\r\n      .style('font-size', '14px');\r\n    \r\n    // Add Y axis label\r\n    svg.append('text')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 20)\r\n      .attr('x', -height / 2)\r\n      .text('Value')\r\n      .style('font-size', '14px');\r\n    \r\n    // Add title\r\n    svg.append('text')\r\n      .attr('x', width / 2)\r\n      .attr('y', -10)\r\n      .attr('text-anchor', 'middle')\r\n      .style('font-size', '16px')\r\n      .style('font-weight', 'bold')\r\n      .text(`Topic: ${topicData.topic} (Count: ${topicData.count})`);\r\n    \r\n    // Create bars with animation\r\n    svg.selectAll('.bar')\r\n      .data(metrics)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => x(d.name))\r\n      .attr('width', x.bandwidth())\r\n      .attr('y', height)\r\n      .attr('height', 0)\r\n      .attr('fill', d => colorScale(d.name))\r\n      .attr('rx', 4)\r\n      .attr('ry', 4)\r\n      .transition()\r\n      .duration(800)\r\n      .attr('y', d => y(d.value))\r\n      .attr('height', d => height - y(d.value));\r\n    \r\n    // Add value labels on top of bars\r\n    svg.selectAll('.label')\r\n      .data(metrics)\r\n      .enter()\r\n      .append('text')\r\n      .attr('class', 'label')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('x', d => x(d.name) + x.bandwidth() / 2)\r\n      .attr('y', d => y(d.value) - 5)\r\n      .style('font-size', '12px')\r\n      .style('opacity', 0)\r\n      .text(d => formatNumber(d.value))\r\n      .transition()\r\n      .duration(800)\r\n      .delay(400)\r\n      .style('opacity', 1);\r\n    \r\n    // Add hover effects\r\n    svg.selectAll('.bar')\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('fill', d3.color(colorScale(d.name)).brighter(0.3))\r\n          .attr('stroke', '#000')\r\n          .attr('stroke-width', 1);\r\n        \r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <strong>${d.name}:</strong> ${formatNumber(d.value)}<br>\r\n            <strong>Topic:</strong> ${topicData.topic}<br>\r\n            <strong>Count:</strong> ${formatNumber(topicData.count)}\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px');\r\n      })\r\n      .on('mouseout', function(event, d) {\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('fill', colorScale(d.name))\r\n          .attr('stroke', 'none');\r\n        \r\n        tooltipRef.current.style('opacity', 0);\r\n      });\r\n  };\r\n\r\n  const drawTreeMap = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Set dimensions\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const containerHeight = containerRef.current.clientHeight || 400;\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', containerWidth)\r\n      .attr('height', containerHeight);\r\n\r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n\r\n    // Prepare data hierarchy\r\n    const hierarchyData = {\r\n      name: \"Topics\",\r\n      children: data.map(d => ({\r\n        name: d.topic,\r\n        value: selectedMetric === 'intensity' ? d.intensity : d.relevance,\r\n        count: d.count,\r\n        intensity: d.intensity,\r\n        relevance: d.relevance,\r\n        likelihood: d.likelihood\r\n      }))\r\n    };\r\n\r\n    // Create a color scale\r\n    const colorScale = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => selectedMetric === 'intensity' ? d.intensity : d.relevance) || 1])\r\n      .range(['#e0f2ff', '#0056b3']);\r\n\r\n    // Create treemap layout\r\n    const treemap = d3.treemap()\r\n      .size([containerWidth, containerHeight])\r\n      .padding(4)\r\n      .round(true);\r\n\r\n    // Create hierarchy\r\n    const root = d3.hierarchy(hierarchyData)\r\n      .sum(d => d.value || 0.1) // Ensure even zero values get some space\r\n      .sort((a, b) => b.value - a.value);\r\n\r\n    // Generate the treemap layout\r\n    treemap(root);\r\n\r\n    // Create the treemap cells with transition\r\n    const cells = svg.selectAll('.cell')\r\n      .data(root.leaves(), d => d.data.name);\r\n    \r\n    // Remove exiting cells\r\n    cells.exit().transition().duration(500)\r\n      .attr('transform', d => `translate(${d.x0},${d.y0})`)\r\n      .attr('width', 0)\r\n      .attr('height', 0)\r\n      .remove();\r\n    \r\n    // Add new cells\r\n    const enterCells = cells.enter()\r\n      .append('g')\r\n      .attr('class', 'cell')\r\n      .attr('transform', d => `translate(${d.x0},${d.y0})`)\r\n      .style('opacity', 0);\r\n    \r\n    // Animated rectangle creation\r\n    enterCells.append('rect')\r\n      .attr('width', 0)\r\n      .attr('height', 0)\r\n      .attr('id', d => `rect-${d.data.name.replace(/\\s+/g, '-').toLowerCase()}`)\r\n      .attr('rx', 4)\r\n      .attr('ry', 4)\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => i * 30)\r\n      .attr('width', d => Math.max(d.x1 - d.x0, 0))\r\n      .attr('height', d => Math.max(d.y1 - d.y0, 0))\r\n      .attr('fill', d => colorScale(d.data.value))\r\n      .style('opacity', 1);\r\n    \r\n    enterCells\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => i * 30)\r\n      .style('opacity', 1);\r\n    \r\n    // Update existing cells\r\n    cells.transition()\r\n      .duration(800)\r\n      .attr('transform', d => `translate(${d.x0},${d.y0})`)\r\n      .select('rect')\r\n      .attr('width', d => Math.max(d.x1 - d.x0, 0))\r\n      .attr('height', d => Math.max(d.y1 - d.y0, 0))\r\n      .attr('fill', d => colorScale(d.data.value));\r\n    \r\n    // Cell text\r\n    const allCells = svg.selectAll('.cell');\r\n    \r\n    // Remove old text\r\n    allCells.selectAll('text').remove();\r\n    \r\n    // Add new text\r\n    allCells.append('text')\r\n      .attr('class', 'topic-label')\r\n      .attr('x', 5)\r\n      .attr('y', 15)\r\n      .attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black')\r\n      .style('font-size', '12px')\r\n      .style('font-weight', 'bold')\r\n      .style('opacity', 0)\r\n      .text(d => truncateText(d.data.name, Math.floor((d.x1 - d.x0) / 6)))\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => 300 + i * 30)\r\n      .style('opacity', d => (d.x1 - d.x0 > 30) ? 1 : 0);\r\n    \r\n    // Value text\r\n    allCells.append('text')\r\n      .attr('class', 'value-label')\r\n      .attr('x', 5)\r\n      .attr('y', 30)\r\n      .attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black')\r\n      .style('font-size', '10px')\r\n      .style('opacity', 0)\r\n      .text(d => `${selectedMetric === 'intensity' ? 'Int' : 'Rel'}: ${formatNumber(d.data.value)}`)\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => 400 + i * 30)\r\n      .style('opacity', d => (d.x1 - d.x0 > 60 && d.y1 - d.y0 > 40) ? 1 : 0);\r\n    \r\n    // Count text\r\n    allCells.append('text')\r\n      .attr('class', 'count-label')\r\n      .attr('x', 5)\r\n      .attr('y', 45)\r\n      .attr('fill', d => d.data.value > d3.max(data, item => selectedMetric === 'intensity' ? item.intensity : item.relevance) / 2 ? 'white' : 'black')\r\n      .style('font-size', '10px')\r\n      .style('opacity', 0)\r\n      .text(d => `Count: ${formatNumber(d.data.count)}`)\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => 500 + i * 30)\r\n      .style('opacity', d => (d.x1 - d.x0 > 80 && d.y1 - d.y0 > 60) ? 1 : 0);\r\n    \r\n    // Add hover effects\r\n    allCells\r\n      .on('mouseover', function(event, d) {\r\n        d3.select(this).select('rect')\r\n          .transition()\r\n          .duration(300)\r\n          .attr('stroke', '#000')\r\n          .attr('stroke-width', 2)\r\n          .style('filter', 'drop-shadow(0px 0px 6px rgba(0, 0, 0, 0.3))');\r\n        \r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <strong>Topic:</strong> ${d.data.name}<br>\r\n            <strong>Count:</strong> ${formatNumber(d.data.count)}<br>\r\n            <strong>Intensity:</strong> ${formatNumber(d.data.intensity)}<br>\r\n            <strong>Relevance:</strong> ${formatNumber(d.data.relevance)}<br>\r\n            <strong>Likelihood:</strong> ${formatNumber(d.data.likelihood)}\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        d3.select(this).select('rect')\r\n          .transition()\r\n          .duration(300)\r\n          .attr('stroke', 'none')\r\n          .attr('stroke-width', 0)\r\n          .style('filter', 'none');\r\n        \r\n        tooltipRef.current.style('opacity', 0);\r\n      });\r\n    \r\n    // Add a legend\r\n    const legendHeight = 20;\r\n    const legendWidth = 200;\r\n    \r\n    const legend = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', `translate(${containerWidth - legendWidth - 20}, 20)`);\r\n    \r\n    // Create gradient for legend\r\n    const defs = svg.append('defs');\r\n    const linearGradient = defs.append('linearGradient')\r\n      .attr('id', 'topic-color-gradient')\r\n      .attr('x1', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('x2', '100%')\r\n      .attr('y2', '0%');\r\n    \r\n    linearGradient.append('stop')\r\n      .attr('offset', '0%')\r\n      .attr('stop-color', '#e0f2ff');\r\n    \r\n    linearGradient.append('stop')\r\n      .attr('offset', '100%')\r\n      .attr('stop-color', '#0056b3');\r\n    \r\n    // Draw legend rectangle\r\n    legend.append('rect')\r\n      .attr('width', legendWidth)\r\n      .attr('height', legendHeight)\r\n      .style('fill', 'url(#topic-color-gradient)');\r\n    \r\n    // Add legend labels\r\n    legend.append('text')\r\n      .attr('x', 0)\r\n      .attr('y', legendHeight + 15)\r\n      .style('font-size', '10px')\r\n      .text('Lower');\r\n    \r\n    legend.append('text')\r\n      .attr('x', legendWidth)\r\n      .attr('y', legendHeight + 15)\r\n      .style('font-size', '10px')\r\n      .style('text-anchor', 'end')\r\n      .text('Higher');\r\n    \r\n    legend.append('text')\r\n      .attr('x', legendWidth / 2)\r\n      .attr('y', legendHeight + 15)\r\n      .style('font-size', '10px')\r\n      .style('text-anchor', 'middle')\r\n      .text(selectedMetric === 'intensity' ? 'Intensity' : 'Relevance');\r\n  };\r\n\r\n  const handleMetricChange = (metric) => {\r\n    setSelectedMetric(metric);\r\n  };\r\n\r\n  const toggleChartType = () => {\r\n    setChartType(prevType => prevType === 'treemap' ? 'barchart' : 'treemap');\r\n  };\r\n\r\n  const renderActionButtons = () => (\r\n    <div className=\"chart-actions\">\r\n      <div className=\"filter-container\">\r\n        <label htmlFor=\"topic-filter\">Topic: </label>\r\n        <select \r\n          id=\"topic-filter\" \r\n          value={selectedTopic} \r\n          onChange={handleTopicChange}\r\n          className=\"filter-select\"\r\n        >\r\n          <option value=\"all\">All Topics</option>\r\n          {topics.map(topic => (\r\n            <option key={topic} value={topic}>{topic}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div className=\"metric-buttons\">\r\n        <button\r\n          className={`chart-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n          onClick={() => handleMetricChange('intensity')}\r\n        >\r\n          Intensity\r\n        </button>\r\n        <button\r\n          className={`chart-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n          onClick={() => handleMetricChange('relevance')}\r\n        >\r\n          Relevance\r\n        </button>\r\n        {data.length > 0 && (\r\n          <button\r\n            className=\"chart-btn\"\r\n            onClick={toggleChartType}\r\n          >\r\n            {chartType === 'treemap' ? 'Switch to Bar Chart' : 'Switch to TreeMap'}\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CardContainer \r\n      title=\"Topic Distribution Visualization\" \r\n      actionButtons={renderActionButtons()}\r\n    >\r\n      <div ref={containerRef} style={{ width: '100%', height: '400px' }}>\r\n        {loading ? (\r\n          <Loader message=\"Loading topic data...\" />\r\n        ) : error ? (\r\n          <NoDataMessage message={error} icon=\"⚠️\" />\r\n        ) : data.length === 0 ? (\r\n          <NoDataMessage message=\"No topic data available\" />\r\n        ) : (\r\n          <svg ref={svgRef} className=\"chart-svg\"></svg>\r\n        )}\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default TopicDistributionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}