{"ast":null,"code":"// src/api/analyticsApi.js\nconst API_URL = 'https://yourapi.com/api/analytics';\n\n// Fetch overall analytics data\nexport const getAnalyticsOverview = async () => {\n  try {\n    const response = await fetch(`${API_URL}/overview`);\n    if (!response.ok) {\n      throw new Error('Error fetching analytics overview');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching analytics overview:', error);\n    throw error;\n  }\n};\n\n// Fetch detailed analytics by category (e.g., customers, tickets, etc.)\nexport const getAnalyticsByCategory = async category => {\n  try {\n    const response = await fetch(`${API_URL}/${category}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching analytics for ${category}`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching analytics for ${category}:`, error);\n    throw error;\n  }\n};\n\n// Fetch analytics for a specific time period (e.g., daily, weekly, monthly)\nexport const getAnalyticsByTimePeriod = async timePeriod => {\n  try {\n    const response = await fetch(`${API_URL}/time-period/${timePeriod}`);\n    if (!response.ok) {\n      throw new Error(`Error fetching ${timePeriod} analytics`);\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error(`Error fetching ${timePeriod} analytics:`, error);\n    throw error;\n  }\n};","map":{"version":3,"names":["API_URL","getAnalyticsOverview","response","fetch","ok","Error","data","json","error","console","getAnalyticsByCategory","category","getAnalyticsByTimePeriod","timePeriod"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/api/analyticsApi.js"],"sourcesContent":["// src/api/analyticsApi.js\r\nconst API_URL = 'https://yourapi.com/api/analytics';\r\n\r\n// Fetch overall analytics data\r\nexport const getAnalyticsOverview = async () => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/overview`);\r\n        if (!response.ok) {\r\n            throw new Error('Error fetching analytics overview');\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error('Error fetching analytics overview:', error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch detailed analytics by category (e.g., customers, tickets, etc.)\r\nexport const getAnalyticsByCategory = async (category) => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/${category}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Error fetching analytics for ${category}`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(`Error fetching analytics for ${category}:`, error);\r\n        throw error;\r\n    }\r\n};\r\n\r\n// Fetch analytics for a specific time period (e.g., daily, weekly, monthly)\r\nexport const getAnalyticsByTimePeriod = async (timePeriod) => {\r\n    try {\r\n        const response = await fetch(`${API_URL}/time-period/${timePeriod}`);\r\n        if (!response.ok) {\r\n            throw new Error(`Error fetching ${timePeriod} analytics`);\r\n        }\r\n        const data = await response.json();\r\n        return data;\r\n    } catch (error) {\r\n        console.error(`Error fetching ${timePeriod} analytics:`, error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA,MAAMA,OAAO,GAAG,mCAAmC;;AAEnD;AACA,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAA,KAAY;EAC5C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC;IACnD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;IACxD;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;IAC1D,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,sBAAsB,GAAG,MAAOC,QAAQ,IAAK;EACtD,IAAI;IACA,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,IAAIW,QAAQ,EAAE,CAAC;IACtD,IAAI,CAACT,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,gCAAgCM,QAAQ,EAAE,CAAC;IAC/D;IACA,MAAML,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,gCAAgCG,QAAQ,GAAG,EAAEH,KAAK,CAAC;IACjE,MAAMA,KAAK;EACf;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,wBAAwB,GAAG,MAAOC,UAAU,IAAK;EAC1D,IAAI;IACA,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,OAAO,gBAAgBa,UAAU,EAAE,CAAC;IACpE,IAAI,CAACX,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,kBAAkBQ,UAAU,YAAY,CAAC;IAC7D;IACA,MAAMP,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,kBAAkBK,UAAU,aAAa,EAAEL,KAAK,CAAC;IAC/D,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}