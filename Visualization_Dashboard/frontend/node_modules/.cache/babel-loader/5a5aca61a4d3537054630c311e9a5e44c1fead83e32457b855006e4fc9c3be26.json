{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\TimeseriesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { formatNumber, createTooltip } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YearDistributionChart = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\n  const svgRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const result = await api.getMetrics('year', selectedMetric);\n        setData(result);\n        setLoading(false);\n      } catch (err) {\n        setError(`Failed to load year distribution data for ${selectedMetric}`);\n        setLoading(false);\n        console.error(err);\n      }\n    };\n    fetchData();\n  }, [selectedMetric]);\n  useEffect(() => {\n    if (data.length > 0 && svgRef.current) {\n      drawChart();\n    }\n  }, [data]);\n  const drawChart = () => {\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Filter out any invalid years and sort\n    const validData = data.filter(d => d.name && !isNaN(parseInt(d.name))).sort((a, b) => parseInt(a.name) - parseInt(b.name));\n    if (validData.length === 0) {\n      return;\n    }\n\n    // Chart dimensions\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 60\n    };\n    const width = containerRef.current.clientWidth - margin.left - margin.right;\n    const height = 350 - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Scales\n    const x = d3.scaleBand().domain(validData.map(d => d.name)).range([0, width]).padding(0.3);\n    const y = d3.scaleLinear().domain([0, d3.max(validData, d => d.count) * 1.1]).range([height, 0]);\n\n    // Color scale for bars\n    const colorScale = d3.scaleLinear().domain([0, d3.max(validData, d => d.value)]).range(['#74b9ff', '#0984e3']);\n\n    // Add gradient definitions\n    const defs = svg.append('defs');\n    validData.forEach((d, i) => {\n      const gradientId = `bar-gradient-${i}`;\n      const gradient = defs.append('linearGradient').attr('id', gradientId).attr('gradientUnits', 'userSpaceOnUse').attr('x1', 0).attr('y1', height).attr('x2', 0).attr('y2', y(d.count));\n      gradient.append('stop').attr('offset', '0%').attr('stop-color', colorScale(d.value)).attr('stop-opacity', 0.7);\n      gradient.append('stop').attr('offset', '100%').attr('stop-color', colorScale(d.value)).attr('stop-opacity', 1);\n    });\n\n    // Axes\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`).call(d3.axisBottom(x)).selectAll('text').style('text-anchor', 'middle').style('font-size', '11px');\n    svg.append('g').attr('class', 'axis y-axis').call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\n\n    // Grid lines\n    svg.append('g').attr('class', 'grid').call(d3.axisLeft(y).ticks(5).tickSize(-width).tickFormat(''));\n\n    // Bars for count with gradient\n    svg.selectAll('.bar').data(validData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.name)).attr('width', x.bandwidth()).attr('y', d => y(d.count)).attr('height', d => height - y(d.count)).attr('rx', 3) // Rounded corners\n    .attr('fill', (d, i) => `url(#bar-gradient-${i})`).attr('stroke', (d, i) => d3.color(colorScale(d.value)).darker(0.5)).attr('stroke-width', 1).on('mouseover', function (event, d) {\n      // Highlight bar on hover\n      d3.select(this).transition().duration(200).attr('stroke-width', 2).attr('opacity', 1);\n\n      // Show tooltip\n      tooltipRef.current.transition().duration(200).style('opacity', 0.9);\n      const metricLabel = selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1);\n      tooltipRef.current.html(`\n          <div class=\"tooltip-title\">Year: ${d.name}</div>\n          <div class=\"tooltip-value\">Count: ${formatNumber(d.count)}</div>\n          <div class=\"tooltip-value\">Average ${metricLabel}: ${formatNumber(d.value)}</div>\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      // Reset bar on mouseout\n      d3.select(this).transition().duration(200).attr('stroke-width', 1).attr('opacity', 1);\n\n      // Hide tooltip\n      tooltipRef.current.transition().duration(500).style('opacity', 0);\n    });\n\n    // Line for average metric value\n    const lineGenerator = d3.line().x(d => x(d.name) + x.bandwidth() / 2).y(d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value)))).curve(d3.curveCatmullRom.alpha(0.5));\n\n    // Add line shadow for better visibility\n    svg.append('path').datum(validData).attr('class', 'line-shadow').attr('d', lineGenerator).style('stroke', 'rgba(0,0,0,0.2)').style('stroke-width', 4).style('fill', 'none');\n\n    // Actual line\n    svg.append('path').datum(validData).attr('class', 'line').attr('d', lineGenerator).style('stroke', '#e84393').style('stroke-width', 2).style('fill', 'none');\n\n    // Add dots for line points with enhanced hover effects\n    svg.selectAll('.dot').data(validData).enter().append('circle').attr('class', 'dot').attr('cx', d => x(d.name) + x.bandwidth() / 2).attr('cy', d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value)))).attr('r', 5).style('fill', '#e84393').style('stroke', '#fff').style('stroke-width', 2).on('mouseover', function (event, d) {\n      // Enlarge dot on hover\n      d3.select(this).transition().duration(200).attr('r', 8);\n\n      // Show tooltip\n      tooltipRef.current.transition().duration(200).style('opacity', 0.9);\n      const metricLabel = selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1);\n      tooltipRef.current.html(`\n          <div class=\"tooltip-title\">Year: ${d.name}</div>\n          <div class=\"tooltip-value\">Average ${metricLabel}: ${formatNumber(d.value)}</div>\n          <div class=\"tooltip-value\">Count: ${formatNumber(d.count)}</div>\n        `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 28 + 'px');\n    }).on('mouseout', function () {\n      // Reset dot size on mouseout\n      d3.select(this).transition().duration(200).attr('r', 5);\n\n      // Hide tooltip\n      tooltipRef.current.transition().duration(500).style('opacity', 0);\n    });\n\n    // Add a subtle area under the line for visual enhancement\n    const areaGenerator = d3.area().x(d => x(d.name) + x.bandwidth() / 2).y0(height).y1(d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value)))).curve(d3.curveCatmullRom.alpha(0.5));\n    svg.append('path').datum(validData).attr('class', 'area').attr('d', areaGenerator).style('fill', 'rgba(232, 67, 147, 0.1)');\n\n    // Enhanced legend with better styling\n    const legend = svg.append('g').attr('class', 'chart-legend').attr('transform', `translate(${width - 180}, 10)`);\n\n    // Legend background\n    legend.append('rect').attr('width', 160).attr('height', 50).attr('rx', 5).attr('fill', 'rgba(255, 255, 255, 0.8)').attr('stroke', '#ddd');\n\n    // Bar symbol\n    legend.append('rect').attr('x', 10).attr('y', 10).attr('width', 12).attr('height', 12).attr('rx', 2).attr('fill', '#74b9ff');\n    legend.append('text').attr('x', 30).attr('y', 16).attr('dy', '.35em').style('font-size', '12px').text('Number of Insights');\n\n    // Line symbol\n    legend.append('line').attr('x1', 10).attr('y1', 35).attr('x2', 22).attr('y2', 35).style('stroke', '#e84393').style('stroke-width', 2);\n    legend.append('circle').attr('cx', 16).attr('cy', 35).attr('r', 4).style('fill', '#e84393').style('stroke', '#fff').style('stroke-width', 1);\n    legend.append('text').attr('x', 30).attr('y', 35).attr('dy', '.35em').style('font-size', '12px').text(`Average ${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}`);\n\n    // Axes labels with better positioning and styling\n    svg.append('text').attr('class', 'axis-label').attr('text-anchor', 'middle').attr('x', width / 2).attr('y', height + margin.bottom - 10).style('font-size', '13px').style('font-weight', 'bold').text('Year');\n    svg.append('text').attr('class', 'axis-label').attr('text-anchor', 'middle').attr('transform', 'rotate(-90)').attr('x', -height / 2).attr('y', -margin.left + 15).style('font-size', '13px').style('font-weight', 'bold').text('Count');\n  };\n\n  // Handle metric change\n  const handleMetricChange = metric => {\n    setSelectedMetric(metric);\n  };\n\n  // Resize handler\n  useEffect(() => {\n    const handleResize = () => {\n      if (data.length > 0) {\n        drawChart();\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n      // Clean up tooltip when component unmounts\n      if (tooltipRef.current) {\n        d3.select('.d3-tooltip').remove();\n        tooltipRef.current = null;\n      }\n    };\n  }, [data]);\n  const actionButtons = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('intensity'),\n      children: \"Intensity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('likelihood'),\n      children: \"Likelihood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('relevance'),\n      children: \"Relevance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-btn\",\n      onClick: () => {\n        setLoading(true);\n        api.getMetrics('year', selectedMetric).then(result => {\n          setData(result);\n          setLoading(false);\n        }).catch(err => {\n          setError('Failed to refresh data');\n          setLoading(false);\n          console.error(err);\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-sync-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"card-title\",\n        children: \"Insights Distribution by Year\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-actions\",\n        children: actionButtons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      ref: containerRef,\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        message: `Loading year distribution data for ${selectedMetric}...`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: error,\n        icon: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 11\n      }, this) : data.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No year distribution data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"chart-svg\",\n        style: {\n          width: '100%',\n          height: '350px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n};\n_s(YearDistributionChart, \"+J28mPM09W3hFNLRNRiETVKg/B4=\");\n_c = YearDistributionChart;\nexport default YearDistributionChart;\nvar _c;\n$RefreshReg$(_c, \"YearDistributionChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","api","Loader","NoDataMessage","formatNumber","createTooltip","jsxDEV","_jsxDEV","YearDistributionChart","_s","data","setData","loading","setLoading","error","setError","selectedMetric","setSelectedMetric","svgRef","tooltipRef","containerRef","fetchData","result","getMetrics","err","console","length","current","drawChart","select","selectAll","remove","validData","filter","d","name","isNaN","parseInt","sort","a","b","margin","top","right","bottom","left","width","clientWidth","height","svg","attr","append","x","scaleBand","domain","map","range","padding","y","scaleLinear","max","count","colorScale","value","defs","forEach","i","gradientId","gradient","call","axisBottom","style","axisLeft","ticks","tickFormat","tickSize","enter","bandwidth","color","darker","on","event","transition","duration","metricLabel","charAt","toUpperCase","slice","html","pageX","pageY","lineGenerator","line","curve","curveCatmullRom","alpha","datum","areaGenerator","area","y0","y1","legend","text","handleMetricChange","metric","handleResize","window","addEventListener","removeEventListener","actionButtons","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","then","catch","ref","message","icon","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/TimeseriesChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { formatNumber, createTooltip } from '../../utils/helpers';\r\n\r\nconst YearDistributionChart = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\r\n  const svgRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const result = await api.getMetrics('year', selectedMetric);\r\n        setData(result);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        setError(`Failed to load year distribution data for ${selectedMetric}`);\r\n        setLoading(false);\r\n        console.error(err);\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [selectedMetric]);\r\n  \r\n  useEffect(() => {\r\n    if (data.length > 0 && svgRef.current) {\r\n      drawChart();\r\n    }\r\n  }, [data]);\r\n  \r\n  const drawChart = () => {\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n    \r\n    // Filter out any invalid years and sort\r\n    const validData = data\r\n      .filter(d => d.name && !isNaN(parseInt(d.name)))\r\n      .sort((a, b) => parseInt(a.name) - parseInt(b.name));\r\n    \r\n    if (validData.length === 0) {\r\n      return;\r\n    }\r\n    \r\n    // Chart dimensions\r\n    const margin = { top: 20, right: 30, bottom: 50, left: 60 };\r\n    const width = containerRef.current.clientWidth - margin.left - margin.right;\r\n    const height = 350 - margin.top - margin.bottom;\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n    \r\n    // Create tooltip\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n    \r\n    // Scales\r\n    const x = d3.scaleBand()\r\n      .domain(validData.map(d => d.name))\r\n      .range([0, width])\r\n      .padding(0.3);\r\n    \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(validData, d => d.count) * 1.1])\r\n      .range([height, 0]);\r\n    \r\n    // Color scale for bars\r\n    const colorScale = d3.scaleLinear()\r\n      .domain([0, d3.max(validData, d => d.value)])\r\n      .range(['#74b9ff', '#0984e3']);\r\n    \r\n    // Add gradient definitions\r\n    const defs = svg.append('defs');\r\n    \r\n    validData.forEach((d, i) => {\r\n      const gradientId = `bar-gradient-${i}`;\r\n      const gradient = defs.append('linearGradient')\r\n        .attr('id', gradientId)\r\n        .attr('gradientUnits', 'userSpaceOnUse')\r\n        .attr('x1', 0)\r\n        .attr('y1', height)\r\n        .attr('x2', 0)\r\n        .attr('y2', y(d.count));\r\n      \r\n      gradient.append('stop')\r\n        .attr('offset', '0%')\r\n        .attr('stop-color', colorScale(d.value))\r\n        .attr('stop-opacity', 0.7);\r\n      \r\n      gradient.append('stop')\r\n        .attr('offset', '100%')\r\n        .attr('stop-color', colorScale(d.value))\r\n        .attr('stop-opacity', 1);\r\n    });\r\n    \r\n    // Axes\r\n    svg.append('g')\r\n      .attr('class', 'axis x-axis')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .style('text-anchor', 'middle')\r\n      .style('font-size', '11px');\r\n    \r\n    svg.append('g')\r\n      .attr('class', 'axis y-axis')\r\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\r\n    \r\n    // Grid lines\r\n    svg.append('g')\r\n      .attr('class', 'grid')\r\n      .call(d3.axisLeft(y)\r\n        .ticks(5)\r\n        .tickSize(-width)\r\n        .tickFormat(''));\r\n    \r\n    // Bars for count with gradient\r\n    svg.selectAll('.bar')\r\n      .data(validData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => x(d.name))\r\n      .attr('width', x.bandwidth())\r\n      .attr('y', d => y(d.count))\r\n      .attr('height', d => height - y(d.count))\r\n      .attr('rx', 3) // Rounded corners\r\n      .attr('fill', (d, i) => `url(#bar-gradient-${i})`)\r\n      .attr('stroke', (d, i) => d3.color(colorScale(d.value)).darker(0.5))\r\n      .attr('stroke-width', 1)\r\n      .on('mouseover', function(event, d) {\r\n        // Highlight bar on hover\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('stroke-width', 2)\r\n          .attr('opacity', 1);\r\n        \r\n        // Show tooltip\r\n        tooltipRef.current.transition()\r\n          .duration(200)\r\n          .style('opacity', 0.9);\r\n        \r\n        const metricLabel = selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1);\r\n        tooltipRef.current.html(`\r\n          <div class=\"tooltip-title\">Year: ${d.name}</div>\r\n          <div class=\"tooltip-value\">Count: ${formatNumber(d.count)}</div>\r\n          <div class=\"tooltip-value\">Average ${metricLabel}: ${formatNumber(d.value)}</div>\r\n        `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        // Reset bar on mouseout\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('stroke-width', 1)\r\n          .attr('opacity', 1);\r\n        \r\n        // Hide tooltip\r\n        tooltipRef.current.transition()\r\n          .duration(500)\r\n          .style('opacity', 0);\r\n      });\r\n    \r\n    // Line for average metric value\r\n    const lineGenerator = d3.line()\r\n      .x(d => x(d.name) + x.bandwidth() / 2)\r\n      .y(d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value))))\r\n      .curve(d3.curveCatmullRom.alpha(0.5));\r\n    \r\n    // Add line shadow for better visibility\r\n    svg.append('path')\r\n      .datum(validData)\r\n      .attr('class', 'line-shadow')\r\n      .attr('d', lineGenerator)\r\n      .style('stroke', 'rgba(0,0,0,0.2)')\r\n      .style('stroke-width', 4)\r\n      .style('fill', 'none');\r\n    \r\n    // Actual line\r\n    svg.append('path')\r\n      .datum(validData)\r\n      .attr('class', 'line')\r\n      .attr('d', lineGenerator)\r\n      .style('stroke', '#e84393')\r\n      .style('stroke-width', 2)\r\n      .style('fill', 'none');\r\n    \r\n    // Add dots for line points with enhanced hover effects\r\n    svg.selectAll('.dot')\r\n      .data(validData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => x(d.name) + x.bandwidth() / 2)\r\n      .attr('cy', d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value))))\r\n      .attr('r', 5)\r\n      .style('fill', '#e84393')\r\n      .style('stroke', '#fff')\r\n      .style('stroke-width', 2)\r\n      .on('mouseover', function(event, d) {\r\n        // Enlarge dot on hover\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('r', 8);\r\n        \r\n        // Show tooltip\r\n        tooltipRef.current.transition()\r\n          .duration(200)\r\n          .style('opacity', 0.9);\r\n        \r\n        const metricLabel = selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1);\r\n        tooltipRef.current.html(`\r\n          <div class=\"tooltip-title\">Year: ${d.name}</div>\r\n          <div class=\"tooltip-value\">Average ${metricLabel}: ${formatNumber(d.value)}</div>\r\n          <div class=\"tooltip-value\">Count: ${formatNumber(d.count)}</div>\r\n        `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 28) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        // Reset dot size on mouseout\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(200)\r\n          .attr('r', 5);\r\n        \r\n        // Hide tooltip\r\n        tooltipRef.current.transition()\r\n          .duration(500)\r\n          .style('opacity', 0);\r\n      });\r\n    \r\n    // Add a subtle area under the line for visual enhancement\r\n    const areaGenerator = d3.area()\r\n      .x(d => x(d.name) + x.bandwidth() / 2)\r\n      .y0(height)\r\n      .y1(d => y(d.value * (d3.max(validData, d => d.count) / d3.max(validData, d => d.value))))\r\n      .curve(d3.curveCatmullRom.alpha(0.5));\r\n    \r\n    svg.append('path')\r\n      .datum(validData)\r\n      .attr('class', 'area')\r\n      .attr('d', areaGenerator)\r\n      .style('fill', 'rgba(232, 67, 147, 0.1)');\r\n    \r\n    // Enhanced legend with better styling\r\n    const legend = svg.append('g')\r\n      .attr('class', 'chart-legend')\r\n      .attr('transform', `translate(${width - 180}, 10)`);\r\n    \r\n    // Legend background\r\n    legend.append('rect')\r\n      .attr('width', 160)\r\n      .attr('height', 50)\r\n      .attr('rx', 5)\r\n      .attr('fill', 'rgba(255, 255, 255, 0.8)')\r\n      .attr('stroke', '#ddd');\r\n    \r\n    // Bar symbol\r\n    legend.append('rect')\r\n      .attr('x', 10)\r\n      .attr('y', 10)\r\n      .attr('width', 12)\r\n      .attr('height', 12)\r\n      .attr('rx', 2)\r\n      .attr('fill', '#74b9ff');\r\n    \r\n    legend.append('text')\r\n      .attr('x', 30)\r\n      .attr('y', 16)\r\n      .attr('dy', '.35em')\r\n      .style('font-size', '12px')\r\n      .text('Number of Insights');\r\n    \r\n    // Line symbol\r\n    legend.append('line')\r\n      .attr('x1', 10)\r\n      .attr('y1', 35)\r\n      .attr('x2', 22)\r\n      .attr('y2', 35)\r\n      .style('stroke', '#e84393')\r\n      .style('stroke-width', 2);\r\n    \r\n    legend.append('circle')\r\n      .attr('cx', 16)\r\n      .attr('cy', 35)\r\n      .attr('r', 4)\r\n      .style('fill', '#e84393')\r\n      .style('stroke', '#fff')\r\n      .style('stroke-width', 1);\r\n    \r\n    legend.append('text')\r\n      .attr('x', 30)\r\n      .attr('y', 35)\r\n      .attr('dy', '.35em')\r\n      .style('font-size', '12px')\r\n      .text(`Average ${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}`);\r\n    \r\n    // Axes labels with better positioning and styling\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('x', width / 2)\r\n      .attr('y', height + margin.bottom - 10)\r\n      .style('font-size', '13px')\r\n      .style('font-weight', 'bold')\r\n      .text('Year');\r\n    \r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('x', -height / 2)\r\n      .attr('y', -margin.left + 15)\r\n      .style('font-size', '13px')\r\n      .style('font-weight', 'bold')\r\n      .text('Count');\r\n  };\r\n  \r\n  // Handle metric change\r\n  const handleMetricChange = (metric) => {\r\n    setSelectedMetric(metric);\r\n  };\r\n  \r\n  // Resize handler\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      if (data.length > 0) {\r\n        drawChart();\r\n      }\r\n    };\r\n    \r\n    window.addEventListener('resize', handleResize);\r\n    return () => {\r\n      window.removeEventListener('resize', handleResize);\r\n      // Clean up tooltip when component unmounts\r\n      if (tooltipRef.current) {\r\n        d3.select('.d3-tooltip').remove();\r\n        tooltipRef.current = null;\r\n      }\r\n    };\r\n  }, [data]);\r\n  \r\n  const actionButtons = (\r\n    <div className=\"chart-actions\">\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('intensity')}\r\n      >\r\n        Intensity\r\n      </button>\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('likelihood')}\r\n      >\r\n        Likelihood\r\n      </button>\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('relevance')}\r\n      >\r\n        Relevance\r\n      </button>\r\n      <button className=\"refresh-btn\" onClick={() => {\r\n        setLoading(true);\r\n        api.getMetrics('year', selectedMetric)\r\n          .then(result => {\r\n            setData(result);\r\n            setLoading(false);\r\n          })\r\n          .catch(err => {\r\n            setError('Failed to refresh data');\r\n            setLoading(false);\r\n            console.error(err);\r\n          });\r\n      }}>\r\n        <i className=\"fas fa-sync-alt\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-header\">\r\n        <h3 className=\"card-title\">Insights Distribution by Year</h3>\r\n        <div className=\"card-actions\">{actionButtons}</div>\r\n      </div>\r\n      <div className=\"card-body\" ref={containerRef}>\r\n        {loading ? (\r\n          <Loader message={`Loading year distribution data for ${selectedMetric}...`} />\r\n        ) : error ? (\r\n          <NoDataMessage message={error} icon=\"⚠️\" />\r\n        ) : data.length === 0 ? (\r\n          <NoDataMessage message=\"No year distribution data available\" />\r\n        ) : (\r\n          <svg ref={svgRef} className=\"chart-svg\" style={{ width: '100%', height: '350px' }}></svg>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YearDistributionChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}