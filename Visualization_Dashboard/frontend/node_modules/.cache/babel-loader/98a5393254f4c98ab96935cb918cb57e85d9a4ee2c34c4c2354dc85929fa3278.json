{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\SectorChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { createTooltip, cleanData, formatNumber, debounce } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SectorChart = ({\n  fullSize = false\n}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [metricData, setMetricData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  useEffect(() => {\n    const fetchSectorData = async () => {\n      try {\n        setLoading(true);\n        const sectorData = await api.getSectors();\n        setData(sectorData);\n\n        // Fetch additional metrics data\n        const metricsData = await api.getMetrics('sector', selectedMetric);\n        setMetricData(metricsData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching sector data:', err);\n        setError('Failed to load sector data');\n        setLoading(false);\n      }\n    };\n    fetchSectorData();\n  }, [selectedMetric]);\n  useEffect(() => {\n    if (data && data.length > 0 && metricData && !loading) {\n      renderChart();\n\n      // Add resize listener\n      const handleResize = debounce(() => {\n        renderChart();\n      }, 300);\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [data, metricData, loading, selectedMetric]);\n  const renderChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: fullSize ? 120 : 100,\n      left: 60\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = (fullSize ? 500 : 350) - margin.top - margin.bottom;\n\n    // Process and sort data\n    const cleanedData = cleanData(data, ['sector', 'count']);\n    const sortedData = [...cleanedData].sort((a, b) => b.count - a.count);\n\n    // Merge with metric data\n    const mergedData = sortedData.map(item => {\n      const metricItem = metricData.find(m => m.sector === item.sector) || {\n        value: 0\n      };\n      return {\n        ...item,\n        metricValue: metricItem.value || 0\n      };\n    });\n\n    // Take top 10 sectors if there are more\n    const displayData = mergedData.slice(0, 10);\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left}, ${margin.top})`);\n\n    // Create scales\n    const x = d3.scaleBand().domain(displayData.map(d => d.sector)).range([0, width]).padding(0.3);\n    const y = d3.scaleLinear().domain([0, d3.max(displayData, d => d.count) * 1.1]).nice().range([height, 0]);\n    const yMetric = d3.scaleLinear().domain([0, d3.max(displayData, d => d.metricValue) * 1.1]).nice().range([height, 0]);\n\n    // Color scale for sectors\n    const colorScale = d3.scaleOrdinal().domain(displayData.map(d => d.sector)).range(d3.schemeBlues[9].slice(3));\n\n    // Create axes\n    const xAxis = svg.append('g').attr('class', 'axis').attr('transform', `translate(0, ${height})`).call(d3.axisBottom(x)).selectAll('text').attr('transform', 'rotate(-45)').attr('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').style('font-size', '12px');\n    const yAxis = svg.append('g').attr('class', 'axis').call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\n\n    // Add Y axis label\n    svg.append('text').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('dy', '1em').style('text-anchor', 'middle').text('Number of Events');\n\n    // Add X axis label\n    svg.append('text').attr('y', height + margin.bottom - 15).attr('x', width / 2).style('text-anchor', 'middle').text('Sectors');\n\n    // Create grid\n    svg.append('g').attr('class', 'grid').style('stroke-dasharray', '3,3').style('stroke-opacity', 0.2).call(d3.axisLeft(y).tickSize(-width).tickFormat(''));\n\n    // Add bars with transition\n    svg.selectAll('.bar').data(displayData).enter().append('rect').attr('class', 'bar').attr('x', d => x(d.sector)).attr('width', x.bandwidth()).attr('y', height).attr('height', 0).attr('fill', d => colorScale(d.sector)).attr('rx', 4) // rounded corners\n    .attr('ry', 4).transition().duration(800).delay((d, i) => i * 50).attr('y', d => y(d.count)).attr('height', d => height - y(d.count));\n\n    // Add metric line with transition\n    const line = d3.line().x(d => x(d.sector) + x.bandwidth() / 2).y(d => yMetric(d.metricValue)).curve(d3.curveCardinal);\n    const linePath = svg.append('path').datum(displayData).attr('class', 'metric-line').attr('fill', 'none').attr('stroke', '#ff6b6b').attr('stroke-width', 3).attr('d', line);\n\n    // Add stroke animation\n    const pathLength = linePath.node().getTotalLength();\n    linePath.attr('stroke-dasharray', pathLength).attr('stroke-dashoffset', pathLength).transition().duration(1500).attr('stroke-dashoffset', 0);\n\n    // Add metric points with transition\n    svg.selectAll('.metric-point').data(displayData).enter().append('circle').attr('class', 'metric-point').attr('cx', d => x(d.sector) + x.bandwidth() / 2).attr('cy', d => yMetric(d.metricValue)).attr('r', 0).attr('fill', '#ff6b6b').transition().duration(800).delay((d, i) => 800 + i * 50).attr('r', 6);\n\n    // Add interaction after transitions\n    svg.selectAll('.bar').on('mouseover', function (event, d) {\n      // Highlight the bar\n      d3.select(this).transition().duration(300).attr('opacity', 0.7).attr('stroke', '#333').attr('stroke-width', 2);\n\n      // Show tooltip\n      tooltipRef.current.style('opacity', 1).html(`\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">${d.sector}</div>\n            <div>Events: ${formatNumber(d.count)}</div>\n            <div>${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}: ${formatNumber(d.metricValue)}</div>\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px');\n    }).on('mouseout', function () {\n      // Restore bar style\n      d3.select(this).transition().duration(300).attr('opacity', 1).attr('stroke', 'none');\n\n      // Hide tooltip\n      tooltipRef.current.transition().duration(300).style('opacity', 0);\n    });\n    svg.selectAll('.metric-point').on('mouseover', function (event, d) {\n      // Highlight the point\n      d3.select(this).transition().duration(300).attr('r', 9).attr('stroke', '#333').attr('stroke-width', 2);\n\n      // Show tooltip\n      tooltipRef.current.style('opacity', 1).html(`\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">${d.sector}</div>\n            <div>${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}: ${formatNumber(d.metricValue)}</div>\n          `).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px');\n    }).on('mouseout', function () {\n      // Restore point style\n      d3.select(this).transition().duration(300).attr('r', 6).attr('stroke', 'none');\n\n      // Hide tooltip\n      tooltipRef.current.transition().duration(300).style('opacity', 0);\n    });\n\n    // Add legend\n    const legend = svg.append('g').attr('class', 'legend').attr('transform', `translate(${width / 2 - 100}, ${height + 60})`);\n    legend.append('rect').attr('x', 0).attr('width', 18).attr('height', 18).attr('fill', colorScale(displayData[0].sector)).attr('rx', 3).attr('ry', 3);\n    legend.append('text').attr('x', 24).attr('y', 9).attr('dy', '.35em').text(`Number of Events`);\n    legend.append('circle').attr('cx', 130).attr('cy', 9).attr('r', 6).attr('fill', '#ff6b6b');\n    legend.append('text').attr('x', 142).attr('y', 9).attr('dy', '.35em').text(`${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}`);\n  };\n  const handleMetricChange = metric => {\n    setSelectedMetric(metric);\n  };\n  const renderActionButtons = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart-actions\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('intensity'),\n      children: \"Intensity\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('likelihood'),\n      children: \"Likelihood\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`,\n      onClick: () => handleMetricChange('relevance'),\n      children: \"Relevance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"refresh-btn\",\n      onClick: () => {\n        setLoading(true);\n        api.getSectors().then(sectorData => {\n          setData(sectorData);\n          api.getMetrics('sector', selectedMetric).then(metrics => {\n            setMetricData(metrics);\n            setLoading(false);\n          });\n        }).catch(err => {\n          setError('Failed to reload data');\n          setLoading(false);\n        });\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"refresh-icon\",\n        children: \"\\u21BB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 324,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    title: \"Sector Analysis\",\n    actionButtons: renderActionButtons(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: containerRef,\n      style: {\n        width: '100%',\n        height: fullSize ? '500px' : '350px'\n      },\n      children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n        message: \"Loading sector data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: error,\n        icon: \"\\u26A0\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this) : !data || data.length === 0 ? /*#__PURE__*/_jsxDEV(NoDataMessage, {\n        message: \"No sector data available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"chart-svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n};\n_s(SectorChart, \"K6DAyFL8Au4/XFGJkhXjVJmCjJ8=\");\n_c = SectorChart;\nexport default SectorChart;\nvar _c;\n$RefreshReg$(_c, \"SectorChart\");","map":{"version":3,"names":["React","useEffect","useRef","useState","d3","api","CardContainer","Loader","NoDataMessage","createTooltip","cleanData","formatNumber","debounce","jsxDEV","_jsxDEV","SectorChart","fullSize","_s","data","setData","metricData","setMetricData","loading","setLoading","error","setError","selectedMetric","setSelectedMetric","svgRef","containerRef","tooltipRef","fetchSectorData","sectorData","getSectors","metricsData","getMetrics","err","console","length","renderChart","handleResize","window","addEventListener","removeEventListener","current","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","height","cleanedData","sortedData","sort","a","b","count","mergedData","map","item","metricItem","find","m","sector","value","metricValue","displayData","slice","svg","attr","append","x","scaleBand","domain","d","range","padding","y","scaleLinear","max","nice","yMetric","colorScale","scaleOrdinal","schemeBlues","xAxis","call","axisBottom","style","yAxis","axisLeft","ticks","tickFormat","text","tickSize","enter","bandwidth","transition","duration","delay","i","line","curve","curveCardinal","linePath","datum","pathLength","node","getTotalLength","on","event","html","charAt","toUpperCase","pageX","pageY","legend","handleMetricChange","metric","renderActionButtons","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","then","metrics","catch","title","actionButtons","ref","message","icon","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/SectorChart.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { createTooltip, cleanData, formatNumber, debounce } from '../../utils/helpers';\r\n\r\nconst SectorChart = ({ fullSize = false }) => {\r\n  const [data, setData] = useState(null);\r\n  const [metricData, setMetricData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [selectedMetric, setSelectedMetric] = useState('intensity');\r\n  const svgRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n  \r\n  useEffect(() => {\r\n    const fetchSectorData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const sectorData = await api.getSectors();\r\n        setData(sectorData);\r\n        \r\n        // Fetch additional metrics data\r\n        const metricsData = await api.getMetrics('sector', selectedMetric);\r\n        setMetricData(metricsData);\r\n        \r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching sector data:', err);\r\n        setError('Failed to load sector data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchSectorData();\r\n  }, [selectedMetric]);\r\n  \r\n  useEffect(() => {\r\n    if (data && data.length > 0 && metricData && !loading) {\r\n      renderChart();\r\n      \r\n      // Add resize listener\r\n      const handleResize = debounce(() => {\r\n        renderChart();\r\n      }, 300);\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [data, metricData, loading, selectedMetric]);\r\n  \r\n  const renderChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n    \r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n    \r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n    \r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 20, right: 30, bottom: fullSize ? 120 : 100, left: 60 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = (fullSize ? 500 : 350) - margin.top - margin.bottom;\r\n    \r\n    // Process and sort data\r\n    const cleanedData = cleanData(data, ['sector', 'count']);\r\n    const sortedData = [...cleanedData].sort((a, b) => b.count - a.count);\r\n    \r\n    // Merge with metric data\r\n    const mergedData = sortedData.map(item => {\r\n      const metricItem = metricData.find(m => m.sector === item.sector) || { value: 0 };\r\n      return {\r\n        ...item,\r\n        metricValue: metricItem.value || 0\r\n      };\r\n    });\r\n    \r\n    // Take top 10 sectors if there are more\r\n    const displayData = mergedData.slice(0, 10);\r\n    \r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left}, ${margin.top})`);\r\n    \r\n    // Create scales\r\n    const x = d3.scaleBand()\r\n      .domain(displayData.map(d => d.sector))\r\n      .range([0, width])\r\n      .padding(0.3);\r\n    \r\n    const y = d3.scaleLinear()\r\n      .domain([0, d3.max(displayData, d => d.count) * 1.1])\r\n      .nice()\r\n      .range([height, 0]);\r\n    \r\n    const yMetric = d3.scaleLinear()\r\n      .domain([0, d3.max(displayData, d => d.metricValue) * 1.1])\r\n      .nice()\r\n      .range([height, 0]);\r\n    \r\n    // Color scale for sectors\r\n    const colorScale = d3.scaleOrdinal()\r\n      .domain(displayData.map(d => d.sector))\r\n      .range(d3.schemeBlues[9].slice(3));\r\n    \r\n    // Create axes\r\n    const xAxis = svg.append('g')\r\n      .attr('class', 'axis')\r\n      .attr('transform', `translate(0, ${height})`)\r\n      .call(d3.axisBottom(x))\r\n      .selectAll('text')\r\n      .attr('transform', 'rotate(-45)')\r\n      .attr('text-anchor', 'end')\r\n      .attr('dx', '-.8em')\r\n      .attr('dy', '.15em')\r\n      .style('font-size', '12px');\r\n    \r\n    const yAxis = svg.append('g')\r\n      .attr('class', 'axis')\r\n      .call(d3.axisLeft(y).ticks(5).tickFormat(d => formatNumber(d)));\r\n    \r\n    // Add Y axis label\r\n    svg.append('text')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('dy', '1em')\r\n      .style('text-anchor', 'middle')\r\n      .text('Number of Events');\r\n    \r\n    // Add X axis label\r\n    svg.append('text')\r\n      .attr('y', height + margin.bottom - 15)\r\n      .attr('x', width / 2)\r\n      .style('text-anchor', 'middle')\r\n      .text('Sectors');\r\n    \r\n    // Create grid\r\n    svg.append('g')\r\n      .attr('class', 'grid')\r\n      .style('stroke-dasharray', '3,3')\r\n      .style('stroke-opacity', 0.2)\r\n      .call(d3.axisLeft(y)\r\n        .tickSize(-width)\r\n        .tickFormat('')\r\n      );\r\n    \r\n    // Add bars with transition\r\n    svg.selectAll('.bar')\r\n      .data(displayData)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => x(d.sector))\r\n      .attr('width', x.bandwidth())\r\n      .attr('y', height)\r\n      .attr('height', 0)\r\n      .attr('fill', d => colorScale(d.sector))\r\n      .attr('rx', 4) // rounded corners\r\n      .attr('ry', 4)\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => i * 50)\r\n      .attr('y', d => y(d.count))\r\n      .attr('height', d => height - y(d.count));\r\n    \r\n    // Add metric line with transition\r\n    const line = d3.line()\r\n      .x(d => x(d.sector) + x.bandwidth() / 2)\r\n      .y(d => yMetric(d.metricValue))\r\n      .curve(d3.curveCardinal);\r\n    \r\n    const linePath = svg.append('path')\r\n      .datum(displayData)\r\n      .attr('class', 'metric-line')\r\n      .attr('fill', 'none')\r\n      .attr('stroke', '#ff6b6b')\r\n      .attr('stroke-width', 3)\r\n      .attr('d', line);\r\n    \r\n    // Add stroke animation\r\n    const pathLength = linePath.node().getTotalLength();\r\n    \r\n    linePath\r\n      .attr('stroke-dasharray', pathLength)\r\n      .attr('stroke-dashoffset', pathLength)\r\n      .transition()\r\n      .duration(1500)\r\n      .attr('stroke-dashoffset', 0);\r\n    \r\n    // Add metric points with transition\r\n    svg.selectAll('.metric-point')\r\n      .data(displayData)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'metric-point')\r\n      .attr('cx', d => x(d.sector) + x.bandwidth() / 2)\r\n      .attr('cy', d => yMetric(d.metricValue))\r\n      .attr('r', 0)\r\n      .attr('fill', '#ff6b6b')\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => 800 + i * 50)\r\n      .attr('r', 6);\r\n    \r\n    // Add interaction after transitions\r\n    svg.selectAll('.bar')\r\n      .on('mouseover', function(event, d) {\r\n        // Highlight the bar\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('opacity', 0.7)\r\n          .attr('stroke', '#333')\r\n          .attr('stroke-width', 2);\r\n        \r\n        // Show tooltip\r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">${d.sector}</div>\r\n            <div>Events: ${formatNumber(d.count)}</div>\r\n            <div>${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}: ${formatNumber(d.metricValue)}</div>\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        // Restore bar style\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('opacity', 1)\r\n          .attr('stroke', 'none');\r\n        \r\n        // Hide tooltip\r\n        tooltipRef.current\r\n          .transition()\r\n          .duration(300)\r\n          .style('opacity', 0);\r\n      });\r\n    \r\n    svg.selectAll('.metric-point')\r\n      .on('mouseover', function(event, d) {\r\n        // Highlight the point\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('r', 9)\r\n          .attr('stroke', '#333')\r\n          .attr('stroke-width', 2);\r\n        \r\n        // Show tooltip\r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .html(`\r\n            <div style=\"font-weight: bold; margin-bottom: 5px;\">${d.sector}</div>\r\n            <div>${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}: ${formatNumber(d.metricValue)}</div>\r\n          `)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px');\r\n      })\r\n      .on('mouseout', function() {\r\n        // Restore point style\r\n        d3.select(this)\r\n          .transition()\r\n          .duration(300)\r\n          .attr('r', 6)\r\n          .attr('stroke', 'none');\r\n        \r\n        // Hide tooltip\r\n        tooltipRef.current\r\n          .transition()\r\n          .duration(300)\r\n          .style('opacity', 0);\r\n      });\r\n    \r\n    // Add legend\r\n    const legend = svg.append('g')\r\n      .attr('class', 'legend')\r\n      .attr('transform', `translate(${width/2 - 100}, ${height + 60})`);\r\n    \r\n    legend.append('rect')\r\n      .attr('x', 0)\r\n      .attr('width', 18)\r\n      .attr('height', 18)\r\n      .attr('fill', colorScale(displayData[0].sector))\r\n      .attr('rx', 3)\r\n      .attr('ry', 3);\r\n    \r\n    legend.append('text')\r\n      .attr('x', 24)\r\n      .attr('y', 9)\r\n      .attr('dy', '.35em')\r\n      .text(`Number of Events`);\r\n    \r\n    legend.append('circle')\r\n      .attr('cx', 130)\r\n      .attr('cy', 9)\r\n      .attr('r', 6)\r\n      .attr('fill', '#ff6b6b');\r\n    \r\n    legend.append('text')\r\n      .attr('x', 142)\r\n      .attr('y', 9)\r\n      .attr('dy', '.35em')\r\n      .text(`${selectedMetric.charAt(0).toUpperCase() + selectedMetric.slice(1)}`);\r\n  };\r\n  \r\n  const handleMetricChange = (metric) => {\r\n    setSelectedMetric(metric);\r\n  };\r\n  \r\n  const renderActionButtons = () => (\r\n    <div className=\"chart-actions\">\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'intensity' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('intensity')}\r\n      >\r\n        Intensity\r\n      </button>\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'likelihood' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('likelihood')}\r\n      >\r\n        Likelihood\r\n      </button>\r\n      <button \r\n        className={`chart-action-btn ${selectedMetric === 'relevance' ? 'active' : ''}`}\r\n        onClick={() => handleMetricChange('relevance')}\r\n      >\r\n        Relevance\r\n      </button>\r\n      <button className=\"refresh-btn\" onClick={() => {\r\n        setLoading(true);\r\n        api.getSectors().then(sectorData => {\r\n          setData(sectorData);\r\n          api.getMetrics('sector', selectedMetric).then(metrics => {\r\n            setMetricData(metrics);\r\n            setLoading(false);\r\n          });\r\n        }).catch(err => {\r\n          setError('Failed to reload data');\r\n          setLoading(false);\r\n        });\r\n      }}>\r\n        <span className=\"refresh-icon\">↻</span>\r\n      </button>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <CardContainer title=\"Sector Analysis\" actionButtons={renderActionButtons()}>\r\n      <div ref={containerRef} style={{ width: '100%', height: fullSize ? '500px' : '350px' }}>\r\n        {loading ? (\r\n          <Loader message=\"Loading sector data...\" />\r\n        ) : error ? (\r\n          <NoDataMessage message={error} icon=\"⚠️\" />\r\n        ) : !data || data.length === 0 ? (\r\n          <NoDataMessage message=\"No sector data available\" />\r\n        ) : (\r\n          <svg ref={svgRef} className=\"chart-svg\"></svg>\r\n        )}\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default SectorChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}