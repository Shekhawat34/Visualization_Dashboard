{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\components\\\\charts\\\\TimeseriesChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport api from '../../services/api';\nimport CardContainer from '../common/CardContainer';\nimport Loader from '../common/Loader';\nimport NoDataMessage from '../common/NoDataMessage';\nimport { formatNumber, createTooltip, debounce } from '../../utils/helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeseriesChart = ({\n  metric = 'intensity',\n  filters = {}\n}) => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [yearFilter, setYearFilter] = useState(filters.end_year || 'all');\n  const [availableYears, setAvailableYears] = useState([]);\n  const [chartType, setChartType] = useState('line'); // 'line' or 'bar'\n  const svgRef = useRef(null);\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const [highlightedPoint, setHighlightedPoint] = useState(null);\n\n  // Fetch available years for the filter\n  useEffect(() => {\n    const fetchFilterOptions = async () => {\n      try {\n        const filterOptions = await api.getFilters();\n        if (filterOptions && filterOptions.end_year) {\n          // Sort years numerically\n          const sortedYears = filterOptions.end_year.sort((a, b) => Number(a) - Number(b));\n          setAvailableYears(sortedYears);\n        }\n      } catch (err) {\n        console.error('Error fetching filter options:', err);\n      }\n    };\n    fetchFilterOptions();\n  }, []);\n\n  // Modified data fetching that handles various date scenarios\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n\n        // Remove end_year from filters for API call since we'll handle date filtering ourselves\n        const apiFilters = {\n          ...filters\n        };\n        delete apiFilters.end_year;\n\n        // Get all raw data\n        const rawData = await api.getData(apiFilters);\n\n        // Process data for timeseries visualization based on different date scenarios\n        const processedData = processTimeseriesData(rawData, yearFilter);\n\n        // Determine chart type based on data structure\n        if (processedData.hasEndYearOnly) {\n          setChartType('bar');\n        } else {\n          setChartType('line');\n        }\n        setData(processedData.timeseriesData);\n        setLoading(false);\n      } catch (err) {\n        console.error('Error fetching and processing data:', err);\n        setError('Failed to load timeseries data');\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [metric, JSON.stringify(filters), yearFilter]);\n\n  // Process raw data for timeseries visualization\n  const processTimeseriesData = (rawData, yearFilter) => {\n    let timeseriesData = [];\n    let hasEndYearOnly = false;\n\n    // Count how many records have each type of date pattern\n    const datePatterns = {\n      bothDates: 0,\n      startOnly: 0,\n      endOnly: 0,\n      noDates: 0\n    };\n\n    // First, analyze the data to determine which date pattern is most common\n    rawData.forEach(item => {\n      if (item.start_year && item.end_year) {\n        datePatterns.bothDates++;\n      } else if (item.start_year && !item.end_year) {\n        datePatterns.startOnly++;\n      } else if (!item.start_year && item.end_year) {\n        datePatterns.endOnly++;\n      } else {\n        datePatterns.noDates++;\n      }\n    });\n\n    // Skip items with no dates\n    const filteredData = rawData.filter(item => item.start_year || item.end_year);\n\n    // Determine the dominant date pattern\n    const dominantPattern = Object.keys(datePatterns).reduce((a, b) => datePatterns[a] > datePatterns[b] ? a : b);\n\n    // If many records have only end_year, use a bar chart\n    if (dominantPattern === 'endOnly' || datePatterns.endOnly > filteredData.length * 0.3) {\n      hasEndYearOnly = true;\n    }\n\n    // Group data by year and calculate average metric value\n    const yearDataMap = new Map();\n    filteredData.forEach(item => {\n      // Handle filtering by end_year if specified\n      if (yearFilter !== 'all' && String(item.end_year) !== String(yearFilter) && String(item.start_year) !== String(yearFilter)) {\n        return;\n      }\n      let yearValue;\n\n      // Different handling based on what date info is available\n      if (item.start_year && item.end_year) {\n        // If both dates available, use start_year for visualization\n        yearValue = Number(item.start_year);\n      } else if (item.start_year) {\n        // If only start_year, use it\n        yearValue = Number(item.start_year);\n      } else if (item.end_year) {\n        // If only end_year, use it\n        yearValue = Number(item.end_year);\n      } else {\n        // Skip if no year data\n        return;\n      }\n\n      // Skip if year is invalid\n      if (isNaN(yearValue)) return;\n\n      // Get metric value\n      const metricValue = Number(item[metric]) || 0;\n\n      // Add to year map for aggregation\n      if (yearDataMap.has(yearValue)) {\n        const existingData = yearDataMap.get(yearValue);\n        existingData.sum += metricValue;\n        existingData.count += 1;\n      } else {\n        yearDataMap.set(yearValue, {\n          sum: metricValue,\n          count: 1,\n          hasStartYear: !!item.start_year,\n          hasEndYear: !!item.end_year\n        });\n      }\n    });\n\n    // Convert map to array and calculate averages\n    timeseriesData = Array.from(yearDataMap.entries()).map(([year, data]) => ({\n      year,\n      value: data.sum / data.count,\n      count: data.count,\n      hasStartYear: data.hasStartYear,\n      hasEndYear: data.hasEndYear\n    }));\n\n    // Sort by year\n    timeseriesData.sort((a, b) => a.year - b.year);\n    return {\n      timeseriesData,\n      hasEndYearOnly\n    };\n  };\n  useEffect(() => {\n    if (data.length > 0 && !loading) {\n      if (chartType === 'bar') {\n        drawBarChart();\n      } else {\n        drawLineChart();\n      }\n\n      // Add resize listener\n      const handleResize = debounce(() => {\n        if (chartType === 'bar') {\n          drawBarChart();\n        } else {\n          drawLineChart();\n        }\n      }, 300);\n      window.addEventListener('resize', handleResize);\n      return () => window.removeEventListener('resize', handleResize);\n    }\n  }, [data, loading, highlightedPoint, chartType]);\n  const getMetricColor = metric => {\n    const colors = {\n      intensity: '#3b82f6',\n      // Blue\n      likelihood: '#10b981',\n      // Green\n      relevance: '#8b5cf6' // Purple\n    };\n    return colors[metric] || '#3b82f6';\n  };\n  const drawLineChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 60\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Create scales\n    const xScale = d3.scaleLinear().domain(d3.extent(data, d => d.year)).range([0, width]);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.value) * 1.1]).range([height, 0]);\n\n    // Create axes\n    const xAxis = d3.axisBottom(xScale).tickFormat(d => Math.round(d)).ticks(Math.min(data.length, 10));\n    const yAxis = d3.axisLeft(yScale).ticks(5).tickFormat(d => formatNumber(d));\n\n    // Add X axis\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`).call(xAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563').style('text-anchor', 'middle');\n\n    // Add Y axis\n    svg.append('g').attr('class', 'axis y-axis').call(yAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563');\n\n    // Y-axis label\n    svg.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('fill', '#1f2937').attr('font-size', '14px').attr('font-weight', '600').attr('text-anchor', 'middle').text(metric.charAt(0).toUpperCase() + metric.slice(1));\n\n    // Get the primary color for this metric\n    const primaryColor = getMetricColor(metric);\n\n    // Create gradient for area\n    const areaGradient = svg.append('defs').append('linearGradient').attr('id', `areaGradient-${metric}`).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n    areaGradient.append('stop').attr('offset', '0%').attr('stop-color', primaryColor).attr('stop-opacity', 0.6);\n    areaGradient.append('stop').attr('offset', '100%').attr('stop-color', primaryColor).attr('stop-opacity', 0.05);\n\n    // Create line generator with smooth curve\n    const line = d3.line().x(d => xScale(d.year)).y(d => yScale(d.value)).curve(d3.curveCardinal.tension(0.4));\n\n    // Add area\n    const area = d3.area().x(d => xScale(d.year)).y0(height).y1(d => yScale(d.value)).curve(d3.curveCardinal.tension(0.4));\n\n    // Add drop shadow filter\n    const filter = svg.append('defs').append('filter').attr('id', 'drop-shadow').attr('height', '130%');\n    filter.append('feGaussianBlur').attr('in', 'SourceAlpha').attr('stdDeviation', 3).attr('result', 'blur');\n    filter.append('feOffset').attr('in', 'blur').attr('dx', 2).attr('dy', 2).attr('result', 'offsetBlur');\n    filter.append('feComponentTransfer').append('feFuncA').attr('type', 'linear').attr('slope', 0.2);\n    const feMerge = filter.append('feMerge');\n    feMerge.append('feMergeNode').attr('in', 'offsetBlur');\n    feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    // Add area with gradient\n    svg.append('path').datum(data).attr('class', 'area').attr('d', area).attr('fill', `url(#areaGradient-${metric})`).attr('opacity', 0.8);\n\n    // Add the line with animation\n    const path = svg.append('path').datum(data).attr('class', 'line').attr('d', line).attr('fill', 'none').attr('stroke', primaryColor).attr('stroke-width', 3).attr('filter', 'url(#drop-shadow)');\n\n    // Get the total length of the line for animation\n    const totalLength = path.node().getTotalLength();\n\n    // Animate the line on load\n    path.attr('stroke-dasharray', totalLength + ' ' + totalLength).attr('stroke-dashoffset', totalLength).transition().duration(1500).ease(d3.easeLinear).attr('stroke-dashoffset', 0);\n\n    // Overlay for hover effects\n    svg.append('rect').attr('width', width).attr('height', height).attr('fill', 'none').attr('pointer-events', 'all').on('mousemove', function (event) {\n      const [mouseX] = d3.pointer(event);\n      const x0 = xScale.invert(mouseX);\n\n      // Find the closest data point\n      const bisect = d3.bisector(d => d.year).left;\n      const index = bisect(data, x0);\n      const d0 = data[index - 1];\n      const d1 = data[index];\n      if (!d0 || !d1) return;\n      const d = x0 - d0.year > d1.year - x0 ? d1 : d0;\n      setHighlightedPoint(d);\n\n      // Update tooltip\n      tooltipRef.current.style('opacity', 1).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px').style('background-color', 'rgba(255, 255, 255, 0.95)').style('border-radius', '6px').style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)').style('padding', '10px 14px').style('font-family', 'system-ui, -apple-system, sans-serif').style('font-size', '14px').style('border', `2px solid ${primaryColor}`).html(`\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\n              Year: ${d.year}\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\n            </div>\n            <div style=\"margin-top: 4px; font-size: 12px; color: #6b7280;\">\n              ${d.hasStartYear && d.hasEndYear ? 'Has both start and end year' : d.hasStartYear ? 'Has start year only' : d.hasEndYear ? 'Has end year only' : ''}\n            </div>\n          `);\n    }).on('mouseleave', function () {\n      setHighlightedPoint(null);\n      tooltipRef.current.style('opacity', 0);\n    });\n\n    // Add dots with effects\n    svg.selectAll('.dot').data(data).enter().append('circle').attr('class', 'dot').attr('cx', d => xScale(d.year)).attr('cy', d => yScale(d.value)).attr('r', d => highlightedPoint && highlightedPoint.year === d.year ? 8 : 5).attr('fill', d => highlightedPoint && highlightedPoint.year === d.year ? primaryColor : 'white').attr('stroke', primaryColor).attr('stroke-width', d => highlightedPoint && highlightedPoint.year === d.year ? 3 : 2).style('cursor', 'pointer').attr('filter', d => highlightedPoint && highlightedPoint.year === d.year ? 'url(#drop-shadow)' : 'none').transition().delay((d, i) => i * 50).duration(500).attr('opacity', 1);\n\n    // If there's a highlighted point, add year and value labels directly on the chart\n    if (highlightedPoint) {\n      // Add value label above the point\n      svg.append('text').attr('class', 'value-label').attr('x', xScale(highlightedPoint.year)).attr('y', yScale(highlightedPoint.value) - 15).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').attr('fill', primaryColor).text(formatNumber(highlightedPoint.value));\n\n      // Add year label below the point\n      svg.append('text').attr('class', 'year-label').attr('x', xScale(highlightedPoint.year)).attr('y', height + 20).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').attr('fill', '#4b5563').text(highlightedPoint.year);\n\n      // Add vertical guide line\n      svg.append('line').attr('class', 'guide-line').attr('x1', xScale(highlightedPoint.year)).attr('x2', xScale(highlightedPoint.year)).attr('y1', yScale(highlightedPoint.value)).attr('y2', height).attr('stroke', primaryColor).attr('stroke-width', 1.5).attr('stroke-dasharray', '3,3').attr('opacity', 0.7);\n\n      // Add focus circle\n      svg.append('circle').attr('class', 'focus-ring').attr('cx', xScale(highlightedPoint.year)).attr('cy', yScale(highlightedPoint.value)).attr('r', 12).attr('fill', 'none').attr('stroke', primaryColor).attr('stroke-width', 2).attr('stroke-opacity', 0.5).attr('stroke-dasharray', '3,2');\n    }\n\n    // Add chart title with style\n    svg.append('text').attr('class', 'chart-title').attr('x', width / 2).attr('y', -5).attr('font-size', '14px').attr('font-weight', 'bold').attr('text-anchor', 'middle').attr('fill', '#1f2937').text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Analysis`);\n  };\n  const drawBarChart = () => {\n    if (!svgRef.current || !containerRef.current) return;\n\n    // Clear previous chart\n    d3.select(svgRef.current).selectAll('*').remove();\n\n    // Set dimensions\n    const containerWidth = containerRef.current.clientWidth;\n    const margin = {\n      top: 20,\n      right: 30,\n      bottom: 50,\n      left: 60\n    };\n    const width = containerWidth - margin.left - margin.right;\n    const height = 300 - margin.top - margin.bottom;\n\n    // Create SVG\n    const svg = d3.select(svgRef.current).attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate(${margin.left},${margin.top})`);\n\n    // Create tooltip if not already created\n    if (!tooltipRef.current) {\n      tooltipRef.current = createTooltip(d3);\n    }\n\n    // Create scales\n    const xScale = d3.scaleBand().domain(data.map(d => d.year)).range([0, width]).padding(0.3);\n    const yScale = d3.scaleLinear().domain([0, d3.max(data, d => d.value) * 1.1]).range([height, 0]);\n\n    // Create axes\n    const xAxis = d3.axisBottom(xScale).tickValues(xScale.domain().filter((d, i) => !(i % Math.ceil(data.length / 10))));\n    const yAxis = d3.axisLeft(yScale).ticks(5).tickFormat(d => formatNumber(d));\n\n    // Add X axis\n    svg.append('g').attr('class', 'axis x-axis').attr('transform', `translate(0,${height})`).call(xAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563').style('text-anchor', 'middle');\n\n    // Add Y axis\n    svg.append('g').attr('class', 'axis y-axis').call(yAxis).selectAll('text').attr('font-size', '12px').attr('font-weight', '500').attr('fill', '#4b5563');\n\n    // Y-axis label\n    svg.append('text').attr('class', 'axis-label').attr('transform', 'rotate(-90)').attr('y', -margin.left + 15).attr('x', -height / 2).attr('fill', '#1f2937').attr('font-size', '14px').attr('font-weight', '600').attr('text-anchor', 'middle').text(metric.charAt(0).toUpperCase() + metric.slice(1));\n\n    // Get the primary color for this metric\n    const primaryColor = getMetricColor(metric);\n\n    // Create gradient for bars\n    const barGradient = svg.append('defs').append('linearGradient').attr('id', `barGradient-${metric}`).attr('x1', '0%').attr('y1', '0%').attr('x2', '0%').attr('y2', '100%');\n    barGradient.append('stop').attr('offset', '0%').attr('stop-color', primaryColor).attr('stop-opacity', 1);\n    barGradient.append('stop').attr('offset', '100%').attr('stop-color', primaryColor).attr('stop-opacity', 0.7);\n\n    // Add drop shadow filter\n    const filter = svg.append('defs').append('filter').attr('id', 'bar-shadow').attr('height', '130%');\n    filter.append('feGaussianBlur').attr('in', 'SourceAlpha').attr('stdDeviation', 2).attr('result', 'blur');\n    filter.append('feOffset').attr('in', 'blur').attr('dx', 1).attr('dy', 2).attr('result', 'offsetBlur');\n    filter.append('feComponentTransfer').append('feFuncA').attr('type', 'linear').attr('slope', 0.2);\n    const feMerge = filter.append('feMerge');\n    feMerge.append('feMergeNode').attr('in', 'offsetBlur');\n    feMerge.append('feMergeNode').attr('in', 'SourceGraphic');\n\n    // Add bars with enhanced visual effects\n    svg.selectAll('.bar').data(data).enter().append('rect').attr('class', 'bar').attr('x', d => xScale(d.year)).attr('width', xScale.bandwidth()).attr('y', height) // Start from bottom for animation\n    .attr('height', 0) // Start with height 0 for animation\n    .attr('fill', d => highlightedPoint && highlightedPoint.year === d.year ? primaryColor : `url(#barGradient-${metric})`).attr('rx', 3) // Rounded corners\n    .attr('ry', 3).attr('filter', d => highlightedPoint && highlightedPoint.year === d.year ? 'url(#bar-shadow)' : 'none').attr('stroke', d => highlightedPoint && highlightedPoint.year === d.year ? darkenColor(primaryColor, 0.2) : 'none').attr('stroke-width', 1).style('cursor', 'pointer').on('mouseover', function (event, d) {\n      // Handle hover state\n      d3.select(this).attr('fill', primaryColor).attr('filter', 'url(#bar-shadow)').attr('stroke', darkenColor(primaryColor, 0.2)).attr('stroke-width', 1);\n      setHighlightedPoint(d);\n\n      // Show tooltip\n      tooltipRef.current.style('opacity', 1).style('left', event.pageX + 10 + 'px').style('top', event.pageY - 20 + 'px').style('background-color', 'rgba(255, 255, 255, 0.95)').style('border-radius', '6px').style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)').style('padding', '10px 14px').style('font-family', 'system-ui, -apple-system, sans-serif').style('font-size', '14px').style('border', `2px solid ${primaryColor}`).html(`\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\n              Year: ${d.year}\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\n            </div>\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\n            </div>\n            <div style=\"margin-top: 4px; font-size: 12px; color: #6b7280;\">\n              ${d.hasStartYear && d.hasEndYear ? 'Has both start and end year' : d.hasStartYear ? 'Has start year only' : d.hasEndYear ? 'Has end year only' : ''}\n            </div>\n          `);\n    }).on('mouseout', function () {\n      // Reset styles on mouseout\n      d3.select(this).attr('fill', `url(#barGradient-${metric})`).attr('filter', 'none').attr('stroke', 'none');\n      setHighlightedPoint(null);\n      tooltipRef.current.style('opacity', 0);\n    })\n    // Animate bars on load\n    .transition().duration(800).delay((d, i) => i * 50).attr('y', d => yScale(d.value)).attr('height', d => height - yScale(d.value));\n\n    // If there's a highlighted point, add value label above the bar\n    if (highlightedPoint) {\n      svg.append('text').attr('class', 'value-label').attr('x', xScale(highlightedPoint.year) + xScale.bandwidth() / 2).attr('y', yScale(highlightedPoint.value) - 8).attr('text-anchor', 'middle').attr('font-size', '12px').attr('font-weight', 'bold').attr('fill', primaryColor).text(formatNumber(highlightedPoint.value));\n    }\n\n    // Add chart title\n    // Add chart title\n    svg.append('text').attr('class', 'chart-title').attr('x', width / 2).attr('y', -5).attr('font-size', '14px').attr('font-weight', 'bold').attr('text-anchor', 'middle').attr('fill', '#1f2937').text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} by Year`);\n  };\n\n  // Helper function to darken a color\n  const darkenColor = (color, amount) => {\n    // Parse the hex color\n    let r = parseInt(color.substring(1, 3), 16);\n    let g = parseInt(color.substring(3, 5), 16);\n    let b = parseInt(color.substring(5, 7), 16);\n\n    // Darken each component\n    r = Math.max(0, Math.floor(r * (1 - amount)));\n    g = Math.max(0, Math.floor(g * (1 - amount)));\n    b = Math.max(0, Math.floor(b * (1 - amount)));\n\n    // Convert back to hex\n    return `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\n  };\n\n  // Render loading state or error message if applicable\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      message: \"Loading timeseries data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 764,\n      columnNumber: 8\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 768,\n      columnNumber: 8\n    }, this);\n  }\n  if (data.length === 0) {\n    return /*#__PURE__*/_jsxDEV(NoDataMessage, {\n      message: \"No timeseries data available for the selected filters.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 772,\n      columnNumber: 8\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(CardContainer, {\n    title: `${metric.charAt(0).toUpperCase() + metric.slice(1)} Trends Over Time`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 flex flex-wrap items-center gap-4\",\n      children: [availableYears.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-filter\",\n          className: \"mr-2 text-sm font-medium text-gray-700\",\n          children: \"Filter by Year:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-filter\",\n          value: yearFilter,\n          onChange: e => setYearFilter(e.target.value),\n          className: \"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All Years\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 11\n          }, this), availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"chart-type\",\n          className: \"mr-2 text-sm font-medium text-gray-700\",\n          children: \"Chart Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"chart-type\",\n          value: chartType,\n          onChange: e => setChartType(e.target.value),\n          className: \"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"line\",\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"bar\",\n            children: \"Bar Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 799,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 777,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      ref: containerRef,\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        ref: svgRef,\n        className: \"w-full\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 815,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-xs text-gray-500\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Data points represent the average \", metric, \" value for events in each year.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 820,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Hover over data points for more details.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 819,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 776,\n    columnNumber: 1\n  }, this);\n};\n_s(TimeseriesChart, \"apSxbeOUHZJmtk8e/UsY0ga7zUs=\");\n_c = TimeseriesChart;\nexport default TimeseriesChart;\nvar _c;\n$RefreshReg$(_c, \"TimeseriesChart\");","map":{"version":3,"names":["React","useState","useEffect","useRef","d3","api","CardContainer","Loader","NoDataMessage","formatNumber","createTooltip","debounce","jsxDEV","_jsxDEV","TimeseriesChart","metric","filters","_s","data","setData","loading","setLoading","error","setError","yearFilter","setYearFilter","end_year","availableYears","setAvailableYears","chartType","setChartType","svgRef","containerRef","tooltipRef","highlightedPoint","setHighlightedPoint","fetchFilterOptions","filterOptions","getFilters","sortedYears","sort","a","b","Number","err","console","fetchData","apiFilters","rawData","getData","processedData","processTimeseriesData","hasEndYearOnly","timeseriesData","JSON","stringify","datePatterns","bothDates","startOnly","endOnly","noDates","forEach","item","start_year","filteredData","filter","dominantPattern","Object","keys","reduce","length","yearDataMap","Map","String","yearValue","isNaN","metricValue","has","existingData","get","sum","count","set","hasStartYear","hasEndYear","Array","from","entries","map","year","value","drawBarChart","drawLineChart","handleResize","window","addEventListener","removeEventListener","getMetricColor","colors","intensity","likelihood","relevance","current","select","selectAll","remove","containerWidth","clientWidth","margin","top","right","bottom","left","width","height","svg","attr","append","xScale","scaleLinear","domain","extent","d","range","yScale","max","xAxis","axisBottom","tickFormat","Math","round","ticks","min","yAxis","axisLeft","call","style","text","charAt","toUpperCase","slice","primaryColor","areaGradient","line","x","y","curve","curveCardinal","tension","area","y0","y1","feMerge","datum","path","totalLength","node","getTotalLength","transition","duration","ease","easeLinear","on","event","mouseX","pointer","x0","invert","bisect","bisector","index","d0","d1","pageX","pageY","html","enter","delay","i","scaleBand","padding","tickValues","ceil","barGradient","bandwidth","darkenColor","color","amount","r","parseInt","substring","g","floor","toString","padStart","message","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","htmlFor","id","onChange","e","target","ref","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/components/charts/TimeseriesChart.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\nimport api from '../../services/api';\r\nimport CardContainer from '../common/CardContainer';\r\nimport Loader from '../common/Loader';\r\nimport NoDataMessage from '../common/NoDataMessage';\r\nimport { formatNumber, createTooltip, debounce } from '../../utils/helpers';\r\n\r\nconst TimeseriesChart = ({ metric = 'intensity', filters = {} }) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [yearFilter, setYearFilter] = useState(filters.end_year || 'all');\r\n  const [availableYears, setAvailableYears] = useState([]);\r\n  const [chartType, setChartType] = useState('line'); // 'line' or 'bar'\r\n  const svgRef = useRef(null);\r\n  const containerRef = useRef(null);\r\n  const tooltipRef = useRef(null);\r\n  const [highlightedPoint, setHighlightedPoint] = useState(null);\r\n\r\n  // Fetch available years for the filter\r\n  useEffect(() => {\r\n    const fetchFilterOptions = async () => {\r\n      try {\r\n        const filterOptions = await api.getFilters();\r\n        if (filterOptions && filterOptions.end_year) {\r\n          // Sort years numerically\r\n          const sortedYears = filterOptions.end_year.sort((a, b) => Number(a) - Number(b));\r\n          setAvailableYears(sortedYears);\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching filter options:', err);\r\n      }\r\n    };\r\n\r\n    fetchFilterOptions();\r\n  }, []);\r\n\r\n  // Modified data fetching that handles various date scenarios\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        setLoading(true);\r\n        \r\n        // Remove end_year from filters for API call since we'll handle date filtering ourselves\r\n        const apiFilters = { ...filters };\r\n        delete apiFilters.end_year;\r\n        \r\n        // Get all raw data\r\n        const rawData = await api.getData(apiFilters);\r\n        \r\n        // Process data for timeseries visualization based on different date scenarios\r\n        const processedData = processTimeseriesData(rawData, yearFilter);\r\n        \r\n        // Determine chart type based on data structure\r\n        if (processedData.hasEndYearOnly) {\r\n          setChartType('bar');\r\n        } else {\r\n          setChartType('line');\r\n        }\r\n        \r\n        setData(processedData.timeseriesData);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching and processing data:', err);\r\n        setError('Failed to load timeseries data');\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [metric, JSON.stringify(filters), yearFilter]);\r\n\r\n  // Process raw data for timeseries visualization\r\n  const processTimeseriesData = (rawData, yearFilter) => {\r\n    let timeseriesData = [];\r\n    let hasEndYearOnly = false;\r\n    \r\n    // Count how many records have each type of date pattern\r\n    const datePatterns = {\r\n      bothDates: 0,\r\n      startOnly: 0,\r\n      endOnly: 0,\r\n      noDates: 0\r\n    };\r\n    \r\n    // First, analyze the data to determine which date pattern is most common\r\n    rawData.forEach(item => {\r\n      if (item.start_year && item.end_year) {\r\n        datePatterns.bothDates++;\r\n      } else if (item.start_year && !item.end_year) {\r\n        datePatterns.startOnly++;\r\n      } else if (!item.start_year && item.end_year) {\r\n        datePatterns.endOnly++;\r\n      } else {\r\n        datePatterns.noDates++;\r\n      }\r\n    });\r\n    \r\n    // Skip items with no dates\r\n    const filteredData = rawData.filter(item => item.start_year || item.end_year);\r\n    \r\n    // Determine the dominant date pattern\r\n    const dominantPattern = Object.keys(datePatterns).reduce((a, b) => \r\n      datePatterns[a] > datePatterns[b] ? a : b\r\n    );\r\n    \r\n    // If many records have only end_year, use a bar chart\r\n    if (dominantPattern === 'endOnly' || datePatterns.endOnly > filteredData.length * 0.3) {\r\n      hasEndYearOnly = true;\r\n    }\r\n    \r\n    // Group data by year and calculate average metric value\r\n    const yearDataMap = new Map();\r\n    \r\n    filteredData.forEach(item => {\r\n      // Handle filtering by end_year if specified\r\n      if (yearFilter !== 'all' && \r\n          String(item.end_year) !== String(yearFilter) && \r\n          String(item.start_year) !== String(yearFilter)) {\r\n        return;\r\n      }\r\n      \r\n      let yearValue;\r\n      \r\n      // Different handling based on what date info is available\r\n      if (item.start_year && item.end_year) {\r\n        // If both dates available, use start_year for visualization\r\n        yearValue = Number(item.start_year);\r\n      } else if (item.start_year) {\r\n        // If only start_year, use it\r\n        yearValue = Number(item.start_year);\r\n      } else if (item.end_year) {\r\n        // If only end_year, use it\r\n        yearValue = Number(item.end_year);\r\n      } else {\r\n        // Skip if no year data\r\n        return;\r\n      }\r\n      \r\n      // Skip if year is invalid\r\n      if (isNaN(yearValue)) return;\r\n      \r\n      // Get metric value\r\n      const metricValue = Number(item[metric]) || 0;\r\n      \r\n      // Add to year map for aggregation\r\n      if (yearDataMap.has(yearValue)) {\r\n        const existingData = yearDataMap.get(yearValue);\r\n        existingData.sum += metricValue;\r\n        existingData.count += 1;\r\n      } else {\r\n        yearDataMap.set(yearValue, {\r\n          sum: metricValue,\r\n          count: 1,\r\n          hasStartYear: !!item.start_year,\r\n          hasEndYear: !!item.end_year\r\n        });\r\n      }\r\n    });\r\n    \r\n    // Convert map to array and calculate averages\r\n    timeseriesData = Array.from(yearDataMap.entries()).map(([year, data]) => ({\r\n      year,\r\n      value: data.sum / data.count,\r\n      count: data.count,\r\n      hasStartYear: data.hasStartYear,\r\n      hasEndYear: data.hasEndYear\r\n    }));\r\n    \r\n    // Sort by year\r\n    timeseriesData.sort((a, b) => a.year - b.year);\r\n    \r\n    return {\r\n      timeseriesData,\r\n      hasEndYearOnly\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (data.length > 0 && !loading) {\r\n      if (chartType === 'bar') {\r\n        drawBarChart();\r\n      } else {\r\n        drawLineChart();\r\n      }\r\n      \r\n      // Add resize listener\r\n      const handleResize = debounce(() => {\r\n        if (chartType === 'bar') {\r\n          drawBarChart();\r\n        } else {\r\n          drawLineChart();\r\n        }\r\n      }, 300);\r\n      \r\n      window.addEventListener('resize', handleResize);\r\n      return () => window.removeEventListener('resize', handleResize);\r\n    }\r\n  }, [data, loading, highlightedPoint, chartType]);\r\n\r\n  const getMetricColor = (metric) => {\r\n    const colors = {\r\n      intensity: '#3b82f6', // Blue\r\n      likelihood: '#10b981', // Green\r\n      relevance: '#8b5cf6'  // Purple\r\n    };\r\n    return colors[metric] || '#3b82f6';\r\n  };\r\n\r\n  const drawLineChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Set dimensions\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 20, right: 30, bottom: 50, left: 60 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = 300 - margin.top - margin.bottom;\r\n\r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n\r\n    // Create scales\r\n    const xScale = d3.scaleLinear()\r\n      .domain(d3.extent(data, d => d.year))\r\n      .range([0, width]);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => d.value) * 1.1])\r\n      .range([height, 0]);\r\n\r\n    // Create axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickFormat(d => Math.round(d))\r\n      .ticks(Math.min(data.length, 10));\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(5)\r\n      .tickFormat(d => formatNumber(d));\r\n\r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('class', 'axis x-axis')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(xAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563')\r\n      .style('text-anchor', 'middle');\r\n\r\n    // Add Y axis\r\n    svg.append('g')\r\n      .attr('class', 'axis y-axis')\r\n      .call(yAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563');\r\n    \r\n    // Y-axis label\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('fill', '#1f2937')\r\n      .attr('font-size', '14px')\r\n      .attr('font-weight', '600')\r\n      .attr('text-anchor', 'middle')\r\n      .text(metric.charAt(0).toUpperCase() + metric.slice(1));\r\n\r\n    // Get the primary color for this metric\r\n    const primaryColor = getMetricColor(metric);\r\n    \r\n    // Create gradient for area\r\n    const areaGradient = svg.append('defs')\r\n      .append('linearGradient')\r\n      .attr('id', `areaGradient-${metric}`)\r\n      .attr('x1', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('x2', '0%')\r\n      .attr('y2', '100%');\r\n      \r\n    areaGradient.append('stop')\r\n      .attr('offset', '0%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 0.6);\r\n      \r\n    areaGradient.append('stop')\r\n      .attr('offset', '100%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 0.05);\r\n\r\n    // Create line generator with smooth curve\r\n    const line = d3.line()\r\n      .x(d => xScale(d.year))\r\n      .y(d => yScale(d.value))\r\n      .curve(d3.curveCardinal.tension(0.4));\r\n\r\n    // Add area\r\n    const area = d3.area()\r\n      .x(d => xScale(d.year))\r\n      .y0(height)\r\n      .y1(d => yScale(d.value))\r\n      .curve(d3.curveCardinal.tension(0.4));\r\n\r\n    // Add drop shadow filter\r\n    const filter = svg.append('defs')\r\n      .append('filter')\r\n      .attr('id', 'drop-shadow')\r\n      .attr('height', '130%');\r\n\r\n    filter.append('feGaussianBlur')\r\n      .attr('in', 'SourceAlpha')\r\n      .attr('stdDeviation', 3)\r\n      .attr('result', 'blur');\r\n\r\n    filter.append('feOffset')\r\n      .attr('in', 'blur')\r\n      .attr('dx', 2)\r\n      .attr('dy', 2)\r\n      .attr('result', 'offsetBlur');\r\n\r\n    filter.append('feComponentTransfer')\r\n      .append('feFuncA')\r\n      .attr('type', 'linear')\r\n      .attr('slope', 0.2);\r\n\r\n    const feMerge = filter.append('feMerge');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'offsetBlur');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'SourceGraphic');\r\n\r\n    // Add area with gradient\r\n    svg.append('path')\r\n      .datum(data)\r\n      .attr('class', 'area')\r\n      .attr('d', area)\r\n      .attr('fill', `url(#areaGradient-${metric})`)\r\n      .attr('opacity', 0.8);\r\n\r\n    // Add the line with animation\r\n    const path = svg.append('path')\r\n      .datum(data)\r\n      .attr('class', 'line')\r\n      .attr('d', line)\r\n      .attr('fill', 'none')\r\n      .attr('stroke', primaryColor)\r\n      .attr('stroke-width', 3)\r\n      .attr('filter', 'url(#drop-shadow)');\r\n    \r\n    // Get the total length of the line for animation\r\n    const totalLength = path.node().getTotalLength();\r\n    \r\n    // Animate the line on load\r\n    path\r\n      .attr('stroke-dasharray', totalLength + ' ' + totalLength)\r\n      .attr('stroke-dashoffset', totalLength)\r\n      .transition()\r\n      .duration(1500)\r\n      .ease(d3.easeLinear)\r\n      .attr('stroke-dashoffset', 0);\r\n\r\n    // Overlay for hover effects\r\n    svg.append('rect')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .attr('fill', 'none')\r\n      .attr('pointer-events', 'all')\r\n      .on('mousemove', function(event) {\r\n        const [mouseX] = d3.pointer(event);\r\n        const x0 = xScale.invert(mouseX);\r\n        \r\n        // Find the closest data point\r\n        const bisect = d3.bisector(d => d.year).left;\r\n        const index = bisect(data, x0);\r\n        const d0 = data[index - 1];\r\n        const d1 = data[index];\r\n        \r\n        if (!d0 || !d1) return;\r\n        \r\n        const d = x0 - d0.year > d1.year - x0 ? d1 : d0;\r\n        setHighlightedPoint(d);\r\n        \r\n        // Update tooltip\r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px')\r\n          .style('background-color', 'rgba(255, 255, 255, 0.95)')\r\n          .style('border-radius', '6px')\r\n          .style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)')\r\n          .style('padding', '10px 14px')\r\n          .style('font-family', 'system-ui, -apple-system, sans-serif')\r\n          .style('font-size', '14px')\r\n          .style('border', `2px solid ${primaryColor}`)\r\n          .html(`\r\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\r\n              Year: ${d.year}\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\r\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\r\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\r\n            </div>\r\n            <div style=\"margin-top: 4px; font-size: 12px; color: #6b7280;\">\r\n              ${d.hasStartYear && d.hasEndYear ? 'Has both start and end year' : \r\n                d.hasStartYear ? 'Has start year only' : \r\n                d.hasEndYear ? 'Has end year only' : ''}\r\n            </div>\r\n          `);\r\n      })\r\n      .on('mouseleave', function() {\r\n        setHighlightedPoint(null);\r\n        tooltipRef.current.style('opacity', 0);\r\n      });\r\n\r\n    // Add dots with effects\r\n    svg.selectAll('.dot')\r\n      .data(data)\r\n      .enter()\r\n      .append('circle')\r\n      .attr('class', 'dot')\r\n      .attr('cx', d => xScale(d.year))\r\n      .attr('cy', d => yScale(d.value))\r\n      .attr('r', d => highlightedPoint && highlightedPoint.year === d.year ? 8 : 5)\r\n      .attr('fill', d => highlightedPoint && highlightedPoint.year === d.year ? primaryColor : 'white')\r\n      .attr('stroke', primaryColor)\r\n      .attr('stroke-width', d => highlightedPoint && highlightedPoint.year === d.year ? 3 : 2)\r\n      .style('cursor', 'pointer')\r\n      .attr('filter', d => highlightedPoint && highlightedPoint.year === d.year ? 'url(#drop-shadow)' : 'none')\r\n      .transition()\r\n      .delay((d, i) => i * 50)\r\n      .duration(500)\r\n      .attr('opacity', 1);\r\n\r\n    // If there's a highlighted point, add year and value labels directly on the chart\r\n    if (highlightedPoint) {\r\n      // Add value label above the point\r\n      svg.append('text')\r\n        .attr('class', 'value-label')\r\n        .attr('x', xScale(highlightedPoint.year))\r\n        .attr('y', yScale(highlightedPoint.value) - 15)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '12px')\r\n        .attr('font-weight', 'bold')\r\n        .attr('fill', primaryColor)\r\n        .text(formatNumber(highlightedPoint.value));\r\n        \r\n      // Add year label below the point\r\n      svg.append('text')\r\n        .attr('class', 'year-label')\r\n        .attr('x', xScale(highlightedPoint.year))\r\n        .attr('y', height + 20)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '12px')\r\n        .attr('font-weight', 'bold')\r\n        .attr('fill', '#4b5563')\r\n        .text(highlightedPoint.year);\r\n      \r\n      // Add vertical guide line\r\n      svg.append('line')\r\n        .attr('class', 'guide-line')\r\n        .attr('x1', xScale(highlightedPoint.year))\r\n        .attr('x2', xScale(highlightedPoint.year))\r\n        .attr('y1', yScale(highlightedPoint.value))\r\n        .attr('y2', height)\r\n        .attr('stroke', primaryColor)\r\n        .attr('stroke-width', 1.5)\r\n        .attr('stroke-dasharray', '3,3')\r\n        .attr('opacity', 0.7);\r\n        \r\n      // Add focus circle\r\n      svg.append('circle')\r\n        .attr('class', 'focus-ring')\r\n        .attr('cx', xScale(highlightedPoint.year))\r\n        .attr('cy', yScale(highlightedPoint.value))\r\n        .attr('r', 12)\r\n        .attr('fill', 'none')\r\n        .attr('stroke', primaryColor)\r\n        .attr('stroke-width', 2)\r\n        .attr('stroke-opacity', 0.5)\r\n        .attr('stroke-dasharray', '3,2');\r\n    }\r\n\r\n    // Add chart title with style\r\n    svg.append('text')\r\n      .attr('class', 'chart-title')\r\n      .attr('x', width / 2)\r\n      .attr('y', -5)\r\n      .attr('font-size', '14px')\r\n      .attr('font-weight', 'bold')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('fill', '#1f2937')\r\n      .text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trend Analysis`);\r\n  };\r\n\r\n  const drawBarChart = () => {\r\n    if (!svgRef.current || !containerRef.current) return;\r\n\r\n    // Clear previous chart\r\n    d3.select(svgRef.current).selectAll('*').remove();\r\n\r\n    // Set dimensions\r\n    const containerWidth = containerRef.current.clientWidth;\r\n    const margin = { top: 20, right: 30, bottom: 50, left: 60 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = 300 - margin.top - margin.bottom;\r\n\r\n    // Create SVG\r\n    const svg = d3.select(svgRef.current)\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .append('g')\r\n      .attr('transform', `translate(${margin.left},${margin.top})`);\r\n\r\n    // Create tooltip if not already created\r\n    if (!tooltipRef.current) {\r\n      tooltipRef.current = createTooltip(d3);\r\n    }\r\n\r\n    // Create scales\r\n    const xScale = d3.scaleBand()\r\n      .domain(data.map(d => d.year))\r\n      .range([0, width])\r\n      .padding(0.3);\r\n\r\n    const yScale = d3.scaleLinear()\r\n      .domain([0, d3.max(data, d => d.value) * 1.1])\r\n      .range([height, 0]);\r\n\r\n    // Create axes\r\n    const xAxis = d3.axisBottom(xScale)\r\n      .tickValues(xScale.domain().filter((d, i) => !(i % Math.ceil(data.length / 10))));\r\n\r\n    const yAxis = d3.axisLeft(yScale)\r\n      .ticks(5)\r\n      .tickFormat(d => formatNumber(d));\r\n\r\n    // Add X axis\r\n    svg.append('g')\r\n      .attr('class', 'axis x-axis')\r\n      .attr('transform', `translate(0,${height})`)\r\n      .call(xAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563')\r\n      .style('text-anchor', 'middle');\r\n\r\n    // Add Y axis\r\n    svg.append('g')\r\n      .attr('class', 'axis y-axis')\r\n      .call(yAxis)\r\n      .selectAll('text')\r\n      .attr('font-size', '12px')\r\n      .attr('font-weight', '500')\r\n      .attr('fill', '#4b5563');\r\n    \r\n    // Y-axis label\r\n    svg.append('text')\r\n      .attr('class', 'axis-label')\r\n      .attr('transform', 'rotate(-90)')\r\n      .attr('y', -margin.left + 15)\r\n      .attr('x', -height / 2)\r\n      .attr('fill', '#1f2937')\r\n      .attr('font-size', '14px')\r\n      .attr('font-weight', '600')\r\n      .attr('text-anchor', 'middle')\r\n      .text(metric.charAt(0).toUpperCase() + metric.slice(1));\r\n\r\n    // Get the primary color for this metric\r\n    const primaryColor = getMetricColor(metric);\r\n    \r\n    // Create gradient for bars\r\n    const barGradient = svg.append('defs')\r\n      .append('linearGradient')\r\n      .attr('id', `barGradient-${metric}`)\r\n      .attr('x1', '0%')\r\n      .attr('y1', '0%')\r\n      .attr('x2', '0%')\r\n      .attr('y2', '100%');\r\n      \r\n    barGradient.append('stop')\r\n      .attr('offset', '0%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 1);\r\n      \r\n    barGradient.append('stop')\r\n      .attr('offset', '100%')\r\n      .attr('stop-color', primaryColor)\r\n      .attr('stop-opacity', 0.7);\r\n\r\n    // Add drop shadow filter\r\n    const filter = svg.append('defs')\r\n      .append('filter')\r\n      .attr('id', 'bar-shadow')\r\n      .attr('height', '130%');\r\n\r\n    filter.append('feGaussianBlur')\r\n      .attr('in', 'SourceAlpha')\r\n      .attr('stdDeviation', 2)\r\n      .attr('result', 'blur');\r\n\r\n    filter.append('feOffset')\r\n      .attr('in', 'blur')\r\n      .attr('dx', 1)\r\n      .attr('dy', 2)\r\n      .attr('result', 'offsetBlur');\r\n\r\n    filter.append('feComponentTransfer')\r\n      .append('feFuncA')\r\n      .attr('type', 'linear')\r\n      .attr('slope', 0.2);\r\n\r\n    const feMerge = filter.append('feMerge');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'offsetBlur');\r\n    feMerge.append('feMergeNode')\r\n      .attr('in', 'SourceGraphic');\r\n\r\n    // Add bars with enhanced visual effects\r\n    svg.selectAll('.bar')\r\n      .data(data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('class', 'bar')\r\n      .attr('x', d => xScale(d.year))\r\n      .attr('width', xScale.bandwidth())\r\n      .attr('y', height) // Start from bottom for animation\r\n      .attr('height', 0) // Start with height 0 for animation\r\n      .attr('fill', d => highlightedPoint && highlightedPoint.year === d.year \r\n        ? primaryColor \r\n        : `url(#barGradient-${metric})`)\r\n      .attr('rx', 3) // Rounded corners\r\n      .attr('ry', 3)\r\n      .attr('filter', d => highlightedPoint && highlightedPoint.year === d.year \r\n        ? 'url(#bar-shadow)' \r\n        : 'none')\r\n      .attr('stroke', d => highlightedPoint && highlightedPoint.year === d.year \r\n        ? darkenColor(primaryColor, 0.2)\r\n        : 'none')\r\n      .attr('stroke-width', 1)\r\n      .style('cursor', 'pointer')\r\n      .on('mouseover', function(event, d) {\r\n        // Handle hover state\r\n        d3.select(this)\r\n          .attr('fill', primaryColor)\r\n          .attr('filter', 'url(#bar-shadow)')\r\n          .attr('stroke', darkenColor(primaryColor, 0.2))\r\n          .attr('stroke-width', 1);\r\n        \r\n        setHighlightedPoint(d);\r\n        \r\n        // Show tooltip\r\n        tooltipRef.current\r\n          .style('opacity', 1)\r\n          .style('left', (event.pageX + 10) + 'px')\r\n          .style('top', (event.pageY - 20) + 'px')\r\n          .style('background-color', 'rgba(255, 255, 255, 0.95)')\r\n          .style('border-radius', '6px')\r\n          .style('box-shadow', '0 4px 6px rgba(0, 0, 0, 0.1)')\r\n          .style('padding', '10px 14px')\r\n          .style('font-family', 'system-ui, -apple-system, sans-serif')\r\n          .style('font-size', '14px')\r\n          .style('border', `2px solid ${primaryColor}`)\r\n          .html(`\r\n            <div style=\"font-weight: 600; color: #1f2937; margin-bottom: 4px; border-bottom: 1px solid #e5e7eb; padding-bottom: 4px;\">\r\n              Year: ${d.year}\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">${metric.charAt(0).toUpperCase() + metric.slice(1)}:</span>\r\n              <span style=\"font-weight: 600; color: ${primaryColor};\">${formatNumber(d.value)}</span>\r\n            </div>\r\n            <div style=\"display: flex; justify-content: space-between; margin-top: 4px;\">\r\n              <span style=\"font-weight: 500; color: #4b5563;\">Records:</span>\r\n              <span style=\"font-weight: 600; color: #1f2937;\">${d.count}</span>\r\n            </div>\r\n            <div style=\"margin-top: 4px; font-size: 12px; color: #6b7280;\">\r\n              ${d.hasStartYear && d.hasEndYear ? 'Has both start and end year' : \r\n                d.hasStartYear ? 'Has start year only' : \r\n                d.hasEndYear ? 'Has end year only' : ''}\r\n            </div>\r\n          `);\r\n      })\r\n      .on('mouseout', function() {\r\n        // Reset styles on mouseout\r\n        d3.select(this)\r\n          .attr('fill', `url(#barGradient-${metric})`)\r\n          .attr('filter', 'none')\r\n          .attr('stroke', 'none');\r\n          \r\n        setHighlightedPoint(null);\r\n        tooltipRef.current.style('opacity', 0);\r\n      })\r\n      // Animate bars on load\r\n      .transition()\r\n      .duration(800)\r\n      .delay((d, i) => i * 50)\r\n      .attr('y', d => yScale(d.value))\r\n      .attr('height', d => height - yScale(d.value));\r\n\r\n    // If there's a highlighted point, add value label above the bar\r\n    if (highlightedPoint) {\r\n      svg.append('text')\r\n        .attr('class', 'value-label')\r\n        .attr('x', xScale(highlightedPoint.year) + xScale.bandwidth() / 2)\r\n        .attr('y', yScale(highlightedPoint.value) - 8)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('font-size', '12px')\r\n        .attr('font-weight', 'bold')\r\n        .attr('fill', primaryColor)\r\n        .text(formatNumber(highlightedPoint.value));\r\n    }\r\n\r\n    // Add chart title\r\n    // Add chart title\r\n  svg.append('text')\r\n  .attr('class', 'chart-title')\r\n  .attr('x', width / 2)\r\n  .attr('y', -5)\r\n  .attr('font-size', '14px')\r\n  .attr('font-weight', 'bold')\r\n  .attr('text-anchor', 'middle')\r\n  .attr('fill', '#1f2937')\r\n  .text(`${metric.charAt(0).toUpperCase() + metric.slice(1)} by Year`);\r\n};\r\n\r\n// Helper function to darken a color\r\nconst darkenColor = (color, amount) => {\r\n// Parse the hex color\r\nlet r = parseInt(color.substring(1, 3), 16);\r\nlet g = parseInt(color.substring(3, 5), 16);\r\nlet b = parseInt(color.substring(5, 7), 16);\r\n\r\n// Darken each component\r\nr = Math.max(0, Math.floor(r * (1 - amount)));\r\ng = Math.max(0, Math.floor(g * (1 - amount)));\r\nb = Math.max(0, Math.floor(b * (1 - amount)));\r\n\r\n// Convert back to hex\r\nreturn `#${r.toString(16).padStart(2, '0')}${g.toString(16).padStart(2, '0')}${b.toString(16).padStart(2, '0')}`;\r\n};\r\n\r\n// Render loading state or error message if applicable\r\nif (loading) {\r\nreturn <Loader message=\"Loading timeseries data...\" />;\r\n}\r\n\r\nif (error) {\r\nreturn <div className=\"text-red-500\">{error}</div>;\r\n}\r\n\r\nif (data.length === 0) {\r\nreturn <NoDataMessage message=\"No timeseries data available for the selected filters.\" />;\r\n}\r\n\r\nreturn (\r\n<CardContainer title={`${metric.charAt(0).toUpperCase() + metric.slice(1)} Trends Over Time`}>\r\n  <div className=\"mb-4 flex flex-wrap items-center gap-4\">\r\n    {availableYears.length > 0 && (\r\n      <div className=\"flex items-center\">\r\n        <label htmlFor=\"year-filter\" className=\"mr-2 text-sm font-medium text-gray-700\">\r\n          Filter by Year:\r\n        </label>\r\n        <select\r\n          id=\"year-filter\"\r\n          value={yearFilter}\r\n          onChange={(e) => setYearFilter(e.target.value)}\r\n          className=\"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"all\">All Years</option>\r\n          {availableYears.map((year) => (\r\n            <option key={year} value={year}>\r\n              {year}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    )}\r\n    \r\n    <div className=\"flex items-center\">\r\n      <label htmlFor=\"chart-type\" className=\"mr-2 text-sm font-medium text-gray-700\">\r\n        Chart Type:\r\n      </label>\r\n      <select\r\n        id=\"chart-type\"\r\n        value={chartType}\r\n        onChange={(e) => setChartType(e.target.value)}\r\n        className=\"rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n      >\r\n        <option value=\"line\">Line Chart</option>\r\n        <option value=\"bar\">Bar Chart</option>\r\n      </select>\r\n    </div>\r\n  </div>\r\n  \r\n  <div className=\"relative\" ref={containerRef}>\r\n    <svg ref={svgRef} className=\"w-full\"></svg>\r\n  </div>\r\n  \r\n  <div className=\"mt-4 text-xs text-gray-500\">\r\n    <p>Data points represent the average {metric} value for events in each year.</p>\r\n    <p>Hover over data points for more details.</p>\r\n  </div>\r\n</CardContainer>\r\n);\r\n};\r\n\r\nexport default TimeseriesChart;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}