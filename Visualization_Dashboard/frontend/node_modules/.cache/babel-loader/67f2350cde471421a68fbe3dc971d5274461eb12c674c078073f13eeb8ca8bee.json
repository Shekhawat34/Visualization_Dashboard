{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\new\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\n\n// Create a Context for Auth\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Provide the AuthContext to the components that need it\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState(() => {\n    try {\n      const storedUserData = localStorage.getItem('authState');\n      return storedUserData ? JSON.parse(storedUserData) : getDefaultAuthState();\n    } catch (error) {\n      console.error('Failed to parse authState from localStorage:', error);\n      return getDefaultAuthState();\n    }\n  });\n  const getDefaultAuthState = () => ({\n    isAuthenticated: false,\n    customerId: null,\n    userType: 'guest',\n    userDetails: null\n  });\n\n  // This function will log the user in, either as a customer or a client\n  const login = async (email, password, role) => {\n    try {\n      // Mocking authentication process\n      const mockUserDatabase = {\n        'Lokender@gmail.com': {\n          password: 'password12345',\n          id: '12345',\n          name: 'Test User'\n        }\n      };\n      if (mockUserDatabase[email] && mockUserDatabase[email].password === password) {\n        const user = mockUserDatabase[email];\n        setAuthState({\n          isAuthenticated: true,\n          customerId: user.id,\n          userType: role,\n          userDetails: {\n            email,\n            name: user.name\n          }\n        });\n        return true; // Login successful\n      } else {\n        throw new Error('Invalid email or password');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error; // Propagate the error to be handled in the component\n    }\n  };\n\n  // This function will log the user out\n  const logout = () => {\n    setAuthState(getDefaultAuthState());\n  };\n\n  // Store the authentication state in local storage whenever it changes\n  useEffect(() => {\n    try {\n      if (authState.isAuthenticated) {\n        localStorage.setItem('authState', JSON.stringify(authState));\n      } else {\n        localStorage.removeItem('authState');\n      }\n    } catch (error) {\n      console.error('Failed to save authState to localStorage:', error);\n    }\n  }, [authState]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"pbnc+AOY8lRcjg2ZhqQQH1OvrjI=\");\n_c = AuthProvider;\nconst useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n\n// Export the AuthContext and AuthProvider\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AuthContext, AuthProvider, useAuth };\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","authState","setAuthState","storedUserData","localStorage","getItem","JSON","parse","getDefaultAuthState","error","console","isAuthenticated","customerId","userType","userDetails","login","email","password","role","mockUserDatabase","id","name","user","Error","logout","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\n\r\n// Create a Context for Auth\r\nconst AuthContext = createContext();\r\n\r\n// Provide the AuthContext to the components that need it\r\nconst AuthProvider = ({ children }) => {\r\n  const [authState, setAuthState] = useState(() => {\r\n    try {\r\n      const storedUserData = localStorage.getItem('authState');\r\n      return storedUserData ? JSON.parse(storedUserData) : getDefaultAuthState();\r\n    } catch (error) {\r\n      console.error('Failed to parse authState from localStorage:', error);\r\n      return getDefaultAuthState();\r\n    }\r\n  });\r\n\r\n  const getDefaultAuthState = () => ({\r\n    isAuthenticated: false,\r\n    customerId: null,\r\n    userType: 'guest',\r\n    userDetails: null,\r\n  });\r\n\r\n  // This function will log the user in, either as a customer or a client\r\n  const login = async (email, password, role) => {\r\n    try {\r\n      // Mocking authentication process\r\n      const mockUserDatabase = {\r\n        'Lokender@gmail.com': { password: 'password12345', id: '12345', name: 'Test User' },\r\n      };\r\n\r\n      if (mockUserDatabase[email] && mockUserDatabase[email].password === password) {\r\n        const user = mockUserDatabase[email];\r\n        setAuthState({\r\n          isAuthenticated: true,\r\n          customerId: user.id,\r\n          userType: role,\r\n          userDetails: { email, name: user.name },\r\n        });\r\n        return true; // Login successful\r\n      } else {\r\n        throw new Error('Invalid email or password');\r\n      }\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error; // Propagate the error to be handled in the component\r\n    }\r\n  };\r\n\r\n  // This function will log the user out\r\n  const logout = () => {\r\n    setAuthState(getDefaultAuthState());\r\n  };\r\n\r\n  // Store the authentication state in local storage whenever it changes\r\n  useEffect(() => {\r\n    try {\r\n      if (authState.isAuthenticated) {\r\n        localStorage.setItem('authState', JSON.stringify(authState));\r\n      } else {\r\n        localStorage.removeItem('authState');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to save authState to localStorage:', error);\r\n    }\r\n  }, [authState]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authState, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nconst useAuth = () => useContext(AuthContext);\r\n\r\n// Export the AuthContext and AuthProvider\r\nexport { AuthContext, AuthProvider, useAuth };\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}