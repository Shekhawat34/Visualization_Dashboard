{"ast":null,"code":"// Format numbers for display\nexport const formatNumber = num => {\n  if (num === null || num === undefined) return 'N/A';\n  if (num === 0) return '0';\n  if (Math.abs(num) < 1) {\n    return num.toFixed(2);\n  }\n  if (Math.abs(num) >= 1000000) {\n    return (num / 1000000).toFixed(1) + 'M';\n  }\n  if (Math.abs(num) >= 1000) {\n    return (num / 1000).toFixed(1) + 'K';\n  }\n  return num.toFixed(0);\n};\n\n// Generate color scale based on data\nexport const generateColorScale = (d3, max, colorRange = ['#e0f7fa', '#006064']) => {\n  return d3.scaleLinear().domain([0, max]).range(colorRange);\n};\n\n// Generate random color for categories\nexport const generateCategoryColors = (d3, categories) => {\n  const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\n  return categories.reduce((acc, category) => {\n    acc[category] = colorScale(category);\n    return acc;\n  }, {});\n};\n\n// Truncate text to a certain length\nexport const truncateText = (text, maxLength = 25) => {\n  if (!text) return '';\n  return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\n};\n\n// Clean data by removing null/undefined values\nexport const cleanData = (data, requiredFields = []) => {\n  if (!data || !Array.isArray(data)) return [];\n  return data.filter(item => {\n    return requiredFields.every(field => {\n      const value = item[field];\n      return value !== null && value !== undefined && value !== '';\n    });\n  });\n};\n\n// Create tooltip for D3 charts\nexport const createTooltip = d3 => {\n  return d3.select('body').append('div').attr('class', 'd3-tooltip').style('opacity', 0);\n};\n\n// Group data by a specific field\nexport const groupDataByField = (data, field) => {\n  return data.reduce((acc, item) => {\n    const key = item[field] || 'Unknown';\n    if (!acc[key]) {\n      acc[key] = [];\n    }\n    acc[key].push(item);\n    return acc;\n  }, {});\n};\n\n// Calculate percentages for pie charts\nexport const calculatePercentages = data => {\n  const total = data.reduce((sum, item) => sum + item.value, 0);\n  return data.map(item => ({\n    ...item,\n    percentage: (item.value / total * 100).toFixed(1)\n  }));\n};\n\n// Get viewport dimensions\nexport const getViewportDimensions = () => {\n  return {\n    width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\n    height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\n  };\n};\n\n// Debounce function for resize and other frequent events\nexport const debounce = (func, wait) => {\n  let timeout;\n  return function executedFunction(...args) {\n    const later = () => {\n      clearTimeout(timeout);\n      func(...args);\n    };\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n  };\n};","map":{"version":3,"names":["formatNumber","num","undefined","Math","abs","toFixed","generateColorScale","d3","max","colorRange","scaleLinear","domain","range","generateCategoryColors","categories","colorScale","scaleOrdinal","schemeCategory10","reduce","acc","category","truncateText","text","maxLength","length","substring","cleanData","data","requiredFields","Array","isArray","filter","item","every","field","value","createTooltip","select","append","attr","style","groupDataByField","key","push","calculatePercentages","total","sum","map","percentage","getViewportDimensions","width","document","documentElement","clientWidth","window","innerWidth","height","clientHeight","innerHeight","debounce","func","wait","timeout","executedFunction","args","later","clearTimeout","setTimeout"],"sources":["C:/Users/Dell/OneDrive/Desktop/new/frontend/src/utils/helpers.js"],"sourcesContent":["// Format numbers for display\r\nexport const formatNumber = (num) => {\r\n    if (num === null || num === undefined) return 'N/A';\r\n    \r\n    if (num === 0) return '0';\r\n    \r\n    if (Math.abs(num) < 1) {\r\n      return num.toFixed(2);\r\n    }\r\n    \r\n    if (Math.abs(num) >= 1000000) {\r\n      return (num / 1000000).toFixed(1) + 'M';\r\n    }\r\n    \r\n    if (Math.abs(num) >= 1000) {\r\n      return (num / 1000).toFixed(1) + 'K';\r\n    }\r\n    \r\n    return num.toFixed(0);\r\n  };\r\n  \r\n  // Generate color scale based on data\r\n  export const generateColorScale = (d3, max, colorRange = ['#e0f7fa', '#006064']) => {\r\n    return d3.scaleLinear()\r\n      .domain([0, max])\r\n      .range(colorRange);\r\n  };\r\n  \r\n  // Generate random color for categories\r\n  export const generateCategoryColors = (d3, categories) => {\r\n    const colorScale = d3.scaleOrdinal(d3.schemeCategory10);\r\n    \r\n    return categories.reduce((acc, category) => {\r\n      acc[category] = colorScale(category);\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  // Truncate text to a certain length\r\n  export const truncateText = (text, maxLength = 25) => {\r\n    if (!text) return '';\r\n    return text.length > maxLength ? text.substring(0, maxLength) + '...' : text;\r\n  };\r\n  \r\n  // Clean data by removing null/undefined values\r\n  export const cleanData = (data, requiredFields = []) => {\r\n    if (!data || !Array.isArray(data)) return [];\r\n    \r\n    return data.filter(item => {\r\n      return requiredFields.every(field => {\r\n        const value = item[field];\r\n        return value !== null && value !== undefined && value !== '';\r\n      });\r\n    });\r\n  };\r\n  \r\n  // Create tooltip for D3 charts\r\n  export const createTooltip = (d3) => {\r\n    return d3.select('body')\r\n      .append('div')\r\n      .attr('class', 'd3-tooltip')\r\n      .style('opacity', 0);\r\n  };\r\n  \r\n  // Group data by a specific field\r\n  export const groupDataByField = (data, field) => {\r\n    return data.reduce((acc, item) => {\r\n      const key = item[field] || 'Unknown';\r\n      if (!acc[key]) {\r\n        acc[key] = [];\r\n      }\r\n      acc[key].push(item);\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  // Calculate percentages for pie charts\r\n  export const calculatePercentages = (data) => {\r\n    const total = data.reduce((sum, item) => sum + item.value, 0);\r\n    \r\n    return data.map(item => ({\r\n      ...item,\r\n      percentage: ((item.value / total) * 100).toFixed(1)\r\n    }));\r\n  };\r\n  \r\n  // Get viewport dimensions\r\n  export const getViewportDimensions = () => {\r\n    return {\r\n      width: Math.max(document.documentElement.clientWidth, window.innerWidth || 0),\r\n      height: Math.max(document.documentElement.clientHeight, window.innerHeight || 0)\r\n    };\r\n  };\r\n  \r\n  // Debounce function for resize and other frequent events\r\n  export const debounce = (func, wait) => {\r\n    let timeout;\r\n    return function executedFunction(...args) {\r\n      const later = () => {\r\n        clearTimeout(timeout);\r\n        func(...args);\r\n      };\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n    };\r\n  };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}